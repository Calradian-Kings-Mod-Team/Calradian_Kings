# Empty scope
on_game_start = {
	events = {
		fp1_scandinavian_adventurers.0004	# FP1 - Organise Norse adventurers.
		# fp1_scandinavian_adventurers.0011	# FP1 - Corral famous Norse adventurers that haven't done much yet.
		# fp1_scandinavian_adventurers.0021	# FP1 - Mark game-start prioritised adventurers.
		#Guaranteed historical artifacts fixed spawning
		debug_portraits.1 					# Debug portraits for animation testing
		# easteregg_event.0001				# Charna and Jakub duel.
	}
	
	effect = {
		#Epidemics 3 months grace
		set_global_variable = {
			name = start_epidemic_grace
			value = yes
			months = 3
		}
		### HIDE OLD CULTURES ###
		# culture:sturgic = {
		# 	set_variable = culture_invis
		# }

		## No IRL Historical Character events
		### RELIGIOUS THINGS ###
		# Set up Holy Site Buildings to be buildable in Holy Sites
		religion:aserai_religion = {
			every_faith = {
				every_holy_site = {
					limit = {
						title_province = {
							has_special_building_slot = no
						}
					}
					title_province = {
						add_special_building_slot = holy_site_mosque_01
					}
				}
			}
		}
		religion:calradian_religion = {
			every_faith = {
				every_holy_site = {
					limit = {
						title_province = {
							has_special_building_slot = no
						}
					}
					title_province = {
						add_special_building_slot = holy_site_cathedral_01
					}
				}
			}
		}
		religion:darshi_religion = {
			every_faith = {
				every_holy_site = {
					limit = {
						title_province = {
							has_special_building_slot = no
						}
					}
					title_province = {
						add_special_building_slot = holy_site_fire_temple_01
					}
				}
			}
		}
		every_religion_global = {
			limit = {
				# OR = {
					this = religion:ghavati_religion
					# this = religion:buddhism_religion
				# }
			}
			every_faith = {
				every_holy_site = {
					limit = {
						title_province = {
							has_special_building_slot = no
						}
					}
					title_province = {
						add_special_building_slot = holy_site_indian_grand_temple_01
					}
				}
			}
		}
		every_religion_global = {
			limit = {
				is_in_family = rf_pagan
			}
			every_faith = {
				every_holy_site = {
					limit = {
						title_province = {
							has_special_building_slot = no
						}
					}
					title_province = {
						add_special_building_slot = holy_site_pagan_grand_temple_01
					}
				}
			}
		}
		every_religion_global = {
			every_faith = {
				every_holy_site = {
					limit = {
						title_province = {
							has_special_building_slot = no
						}
					}
					title_province = {
						add_special_building_slot = holy_site_other_grand_temple_01
					}
				}
			}
		}

		# No Mecca

		# Pagans that start pre-reformed (TO;DO)

		
		faith:darusan = {
			set_variable = { name = block_conversion_till_decision_taken }
		}
		faith:sarranid_faith = {
			set_variable = { name = block_conversion_till_nebulous_circumstances }
		}

		## THEO, ADD THE FAITHS FOR WARBAND DOWN BELOW ##
		if = {
			limit = {
				game_start_date <= 1084.5.1 ## CHANGE DAY AND MONTH WHEN WE DETERMINE THAT IN THE FUTURE
			}
			faith:krevmetiqstvo = {
				set_variable = { name = block_conversion_till_warband }
			}
		}
		
		### CALRADIC KINGS - UNIVERSITIES ###
		title:b_charas.title_province = { add_special_building_slot = generic_university }
		title:b_ortysia.title_province = { add_special_building_slot = generic_university }
		title:b_pravend.title_province = { add_special_building_slot = generic_university }
		title:b_lycaron.title_province = { add_special_building_slot = generic_university }
		title:b_sanala.title_province = { add_special_building_slot = generic_university }
		title:b_razih.title_province = { add_special_building_slot = generic_university }
		
		## Non-Standard COAs at 976 game start ##
		# Vlandian CoAs #
		if = {
			limit = {
				game_start_date >= 976.8.10
			}
			# Change Vlandian from Calradian CoA to Vlandian variant
			title:c_pravend = { set_coa = c_pravend_vlandian }
		}
		## Minor Clan COA's ##
		if = {
			limit = {
				game_start_date >= 1084.5.1
			}
			title:d_laamp_embers = { set_coa = laamp_embers }
			title:d_laamp_boar = { set_coa = laamp_boars }
			title:d_laamp_vaegirs = { set_coa = laamp_vaegirs }
			title:d_laamp_brotherhood = { set_coa = laamp_brotherhood_coa }
			title:d_laamp_hand = { set_coa = laamp_hand_coa }
			title:d_laamp_skold = { set_coa = laamp_skold_coa }
			title:d_laamp_legion = { set_coa = laamp_legion_coa }
			title:d_laamp_wolfskins = { set_coa = laamp_wolfskins_coa }
			title:d_laamp_shumsan = { set_coa = laamp_jawwal_coa }
			title:d_laamp_beni = { set_coa = laamp_beni_coa }
			title:d_laamp_ghilman = { set_coa = ghilman_coa }
			title:d_laamp_lakerats = { set_coa = lakerats_coa }
			title:d_laamp_karakhergit = { set_coa = karakhergit_coa }
			title:d_laamp_eleftheroi = { set_coa = eleftheroi_coa }
			title:d_laamp_forest_people = { set_coa = forest_people_coa }
			title:d_laamp_khergit_1 = { set_coa = laamp_khergit_1 }
		}

		### Some starter for eleftheroi ###
		if = {
			limit = {
				exists = title:d_laamp_eleftheroi
			}
			title:d_laamp_eleftheroi.holder = {
				create_maa_regiment = {
					type = veteran_eleftheroi
					check_can_recruit = no
					size = 6
				}
				create_maa_regiment = {
					type = veteran_eleftheroi
					check_can_recruit = no
					size = 6
				}
				create_maa_regiment = {
					type = veteran_eleftheroi
					check_can_recruit = no
					size = 3
				}
			}
		}
		### Setting up dynamic colours - For Bannerlord startdate ###
		if = {
			limit = {
				current_year = 1084
			}
			title:e_calradian_empire = {
				every_in_de_jure_hierarchy = {
					limit = {
						OR = {
							tier = tier_duchy
							tier = tier_kingdom
						}
					}
					set_variable = dynamic_title_colors_var
				}
				every_in_de_jure_hierarchy = {
					limit = {
						OR = {
							tier = tier_duchy
							tier = tier_kingdom
						}
						NOR = {
							this = title:d_weyyard
							this = title:d_charis
							this = title:d_contiere
						}
						set_variable = original_calradian_title_colors_var
					}
				}
			}
			title:k_battania = {
				every_in_de_jure_hierarchy = {
					limit = {
						OR = {
							tier = tier_duchy
							tier = tier_kingdom
						}
					}
					set_variable = dynamic_title_colors_var
				}
			}
			title:k_vlandia = {
				every_in_de_jure_hierarchy = {
					limit = {
						OR = {
							tier = tier_duchy
							tier = tier_kingdom
						}
					}
					set_variable = dynamic_title_colors_var
					set_variable = original_vlandian_title_colors_var
				}
			}
			title:k_wempire_k_3 = {
				every_in_de_jure_hierarchy = {
					limit = {
						tier = tier_duchy
						OR = {
							this = title:d_weyyard
							this = title:d_charis
							this = title:d_contiere
						}
					}
					set_variable = original_vlandian_title_colors_var
				}
			}
		}
		### GRANDEUR ###
		#Royal Court: Set starting Grandeur to be the same as Expected
		if = {
			limit = {
				has_dlc_feature = royal_court
			}
			every_character_with_royal_court = {
				set_current_court_grandeur = court_grandeur_minimum_expected
				apply_hold_court_grace_effect = yes
				# Stops Hold Court reminders at game start
				set_variable = {
					name = last_hold_court_date
					value = current_year
				}
			}
		}

		### STRUGGLES ###
		# if = {
		# 	limit = { current_date = 867.1.1 }

		# 	# Persian Struggle can be reimplemented for future Darshi content
		# }

		### REGENCIES ###
		# Pre-defined historic regencies setup.
		## NOTE: we do these first to avoid feed messages getting weird due to regents being replaced immediately after getting their position.
		## No Regents for Bannerlord or Warband Start Dates ##
		
		### FERTILE LANDS ###
		# For deserts that are supposed to be very fertile
		# title:c_ashabi = { add_county_modifier = fertile_desert_mountains_modifier } #TO-BE-ADDED; ASERA'S HOMELAND

		### HENDEKAPOLIS ###
		# title:c_ionia = { add_county_modifier = dodekapolis_modifier }
		# title:c_chios = { add_county_modifier = dodekapolis_modifier }
		# title:c_aeolis = { add_county_modifier = dodekapolis_modifier }
		# title:c_lesbos = { add_county_modifier = dodekapolis_modifier }

		### GREECE BACKWATER COUNTIES ### ## CK_COMPATCH
		# if = {
		# 	limit = { has_ep3_dlc_trigger = yes }
		# 	title:c_laconia = { add_county_modifier = backwater_county_modifier }
		# 	title:c_messenia = { add_county_modifier = backwater_county_modifier }
		# 	title:c_korinthos = { add_county_modifier = backwater_county_modifier }
		# 	title:c_achaia = { add_county_modifier = backwater_county_modifier }
		# 	title:c_cephalonia = { add_county_modifier = backwater_county_modifier }
		# 	title:c_attica = { add_county_modifier = backwater_county_modifier }
		# 	title:c_boeotia = { add_county_modifier = backwater_county_modifier }
		# 	title:c_aetolia = { add_county_modifier = backwater_county_modifier }
		# 	title:c_naxos = { add_county_modifier = backwater_county_modifier }
		# 	title:c_euboea = { add_county_modifier = backwater_county_modifier }
		# 	title:c_neopatras = { add_county_modifier = backwater_county_modifier }
		# 	title:c_demetrias = { add_county_modifier = backwater_county_modifier }
		# 	title:c_thessaliotis = { add_county_modifier = backwater_county_modifier }
		# }

		### Varangian Guard ###
		if = {
			limit = {
				has_ep3_dlc_trigger = yes
				current_date >= 976.8.10
			}
			title:e_calradian_empire = { set_variable = founded_varangian_guard }
		}

		### DEBUG GLOBAL VARIABLES ###
		# We set these here so that they present nicely and you can see when some variables register zero.

		# FP3 STRUGGLE (REMOVED)

		# UNITY (NO IRANIAN INTERMEZZO CONTENT)
		
		#LEGITIMACY CONFIG
		# 867.
		if = {
			limit = { game_start_date = 1084.5.1 }
			## Basileus Basileios was actually elected, so he's technically legitimate, but starts at level 2. With this he should be level 3.
			character:Nimp_O_1 = {
				add_legitimacy = game_start_legitimacy_gain
				dynasty = {
					add_dynasty_prestige_level = 2
					add_dynasty_prestige = 150
				}
			}
			character:Simp_P_1 = {
				add_legitimacy = game_start_legitimacy_gain
				dynasty = {
					add_dynasty_prestige_level = 4
					add_dynasty_prestige = 300
				}
			}
			character:Wimp_C_1 = {
				add_legitimacy = game_start_legitimacy_gain
				dynasty = {
					add_dynasty_prestige_level = 1
					add_dynasty_prestige = 75
				}
			}
			character:Battania_FG_1 = {
				add_legitimacy = 700
			}
			character:Sturgia_GR_1 = {
				add_legitimacy = 500
				dynasty = {
					add_dynasty_prestige_level = 1
				}
			}
			character:Aserai_BH_1 = {
				add_legitimacy = game_start_legitimacy_gain
				dynasty = {
					add_dynasty_prestige_level = 2
					add_dynasty_prestige = 100
				}
			}
			character:Khuzait_UK_1 = {
				add_legitimacy = 800
				dynasty = {
					add_dynasty_prestige_level = 2
					add_dynasty_prestige = 80
				}
			}
			character:Nimp_N_1 = {
				dynasty = {
					add_dynasty_prestige_level = 4
					add_dynasty_prestige = 525
				}
			}
		}
		# Cultural setup
		# if = {
		# 	limit = {
		# 		game_start_date = 1178.10.1
		# 	}
		# 	culture:norman = {
		# 		set_name_list = name_list_late_norman
		# 	}
		# }

		### EP3 BYZANTIUM IMPORTANT COUNTIES ###
		# if = {
		# 	limit = { has_ep3_dlc_trigger = yes }
		# 	title:c_antiocheia = {
		# 		set_important_location = {
		# 			title = title:e_calradian_empire
		# 			enter_realm_event = ep3_emperor_yearly.2000
		# 		}
		# 		set_important_location = {
		# 			title = title:e_roman_empire
		# 			enter_realm_event = ep3_emperor_yearly.2000
		# 		}
		# 	}
		# 	title:c_jerusalem = {
		# 		set_important_location = {
		# 			title = title:e_calradian_empire
		# 			enter_realm_event = ep3_emperor_yearly.2000
		# 		}
		# 		set_important_location = {
		# 			title = title:e_roman_empire
		# 			enter_realm_event = ep3_emperor_yearly.2000
		# 		}
		# 	}
		# 	title:c_alexandria = {
		# 		set_important_location = {
		# 			title = title:e_calradian_empire
		# 			enter_realm_event = ep3_emperor_yearly.2000
		# 		}
		# 		set_important_location = {
		# 			title = title:e_roman_empire
		# 			enter_realm_event = ep3_emperor_yearly.2000
		# 		}
		# 	}
		# 	title:c_abbadan = {
		# 		set_important_location = {
		# 			title = title:e_calradian_empire
		# 			enter_realm_event = ep3_emperor_yearly.2000
		# 		}
		# 		set_important_location = {
		# 			title = title:e_roman_empire
		# 			enter_realm_event = ep3_emperor_yearly.2000
		# 		}
		# 	}
		# 	title:c_edessa = {
		# 		set_important_location = {
		# 			title = title:e_calradian_empire
		# 			enter_realm_event = ep3_emperor_yearly.2000
		# 		}
		# 		set_important_location = {
		# 			title = title:e_roman_empire
		# 			enter_realm_event = ep3_emperor_yearly.2000
		# 		}
		# 	}
		# 	title:c_bari = {
		# 		set_important_location = {
		# 			title = title:e_calradian_empire
		# 			enter_realm_event = ep3_emperor_yearly.2000
		# 		}
		# 		set_important_location = {
		# 			title = title:e_roman_empire
		# 			enter_realm_event = ep3_emperor_yearly.2000
		# 		}
		# 	}
		# 	title:c_siracusa = {
		# 		set_important_location = {
		# 			title = title:e_calradian_empire
		# 			enter_realm_event = ep3_emperor_yearly.2000
		# 		}
		# 		set_important_location = {
		# 			title = title:e_roman_empire
		# 			enter_realm_event = ep3_emperor_yearly.2000
		# 		}
		# 	}
		# 	title:c_roma = {
		# 		set_important_location = {
		# 			title = title:e_calradian_empire
		# 			enter_realm_event = ep3_emperor_yearly.2000
		# 		}
		# 		set_important_location = {
		# 			title = title:e_roman_empire
		# 			enter_realm_event = ep3_emperor_yearly.2000
		# 		}
		# 	}
		# 	title:c_ravenna = {
		# 		set_important_location = {
		# 			title = title:e_calradian_empire
		# 			enter_realm_event = ep3_emperor_yearly.2000
		# 		}
		# 		set_important_location = {
		# 			title = title:e_roman_empire
		# 			enter_realm_event = ep3_emperor_yearly.2000
		# 		}
		# 	}
		# 	title:c_tunis = {
		# 		set_important_location = {
		# 			title = title:e_calradian_empire
		# 			enter_realm_event = ep3_emperor_yearly.2000
		# 		}
		# 		set_important_location = {
		# 			title = title:e_roman_empire
		# 			enter_realm_event = ep3_emperor_yearly.2000
		# 		}
		# 	}
		# 	title:c_tangiers = {
		# 		set_important_location = {
		# 			title = title:e_calradian_empire
		# 			enter_realm_event = ep3_emperor_yearly.2000
		# 		}
		# 		set_important_location = {
		# 			title = title:e_roman_empire
		# 			enter_realm_event = ep3_emperor_yearly.2000
		# 		}
		# 	}
		# 	title:c_murcia = {
		# 		set_important_location = {
		# 			title = title:e_calradian_empire
		# 			enter_realm_event = ep3_emperor_yearly.2000
		# 		}
		# 		set_important_location = {
		# 			title = title:e_roman_empire
		# 			enter_realm_event = ep3_emperor_yearly.2000
		# 		}
		# 	}
		# 	title:c_lombardia = {
		# 		set_important_location = {
		# 			title = title:e_calradian_empire
		# 			enter_realm_event = ep3_emperor_yearly.2000
		# 		}
		# 		set_important_location = {
		# 			title = title:e_roman_empire
		# 			enter_realm_event = ep3_emperor_yearly.2000
		# 		}
		# 	}
		# 	title:c_trier = {
		# 		set_important_location = {
		# 			title = title:e_calradian_empire
		# 			enter_realm_event = ep3_emperor_yearly.2000
		# 		}
		# 		set_important_location = {
		# 			title = title:e_roman_empire
		# 			enter_realm_event = ep3_emperor_yearly.2000
		# 		}
		# 	}
		# 	title:c_cumberland = {
		# 		set_important_location = {
		# 			title = title:e_calradian_empire
		# 			enter_realm_event = ep3_emperor_yearly.2000
		# 		}
		# 		set_important_location = {
		# 			title = title:e_roman_empire
		# 			enter_realm_event = ep3_emperor_yearly.2000
		# 		}
		# 	}
		# 	title:c_northumberland = {
		# 		set_important_location = {
		# 			title = title:e_calradian_empire
		# 			enter_realm_event = ep3_emperor_yearly.2000
		# 		}
		# 		set_important_location = {
		# 			title = title:e_roman_empire
		# 			enter_realm_event = ep3_emperor_yearly.2000
		# 		}
		# 	}
		# 	title:c_chandax = {
		# 		set_important_location = {
		# 			title = title:e_calradian_empire
		# 			enter_realm_event = ep3_emperor_yearly.2000
		# 		}
		# 		set_important_location = {
		# 			title = title:e_roman_empire
		# 			enter_realm_event = ep3_emperor_yearly.2000
		# 		}
		# 	}
		# 	title:c_tourraine = {
		# 		set_important_location = {
		# 			title = title:e_calradian_empire
		# 			enter_realm_event = ep3_emperor_yearly.2000
		# 		}
		# 		set_important_location = {
		# 			title = title:e_roman_empire
		# 			enter_realm_event = ep3_emperor_yearly.2000
		# 		}
		# 	}
		# 	title:c_byzantion = {
		# 		set_important_location = {
		# 			title = title:e_calradian_empire
		# 			enter_realm_event = roman_restoration.1200
		# 		}
		# 		set_important_location = {
		# 			title = title:e_roman_empire
		# 			enter_realm_event = roman_restoration.1200
		# 		}
		# 	}
		# }
		
		# Byzantine name game rule
		# title:e_calradian_empire = {
		# 	if = {
		# 		limit = {
		# 			has_game_rule = eastern_rome_name_of_byzantium
		# 		}
		# 		set_title_name = e_eastern_roman_empire
		# 	}
		# 	else_if = {
		# 		limit = {
		# 			has_game_rule = roman_empire_name_of_byzantium
		# 		}
		# 		set_title_name = e_roman_empire
		# 	}
		# 	else_if = {
		# 		limit = {
		# 			has_game_rule = romania_name_of_byzantium
		# 		}
		# 		set_title_name = e_romania_empire
		# 	}
		# 	else_if = {
		# 		limit = {
		# 			has_game_rule = empire_of_the_greeks_name_of_byzantium
		# 		}
		# 		set_title_name = e_empire_of_the_greeks
		# 	}
		# 	else_if = {
		# 		limit = {
		# 			has_game_rule = rhomaion_name_of_byzantium
		# 		}
		# 		set_title_name = e_rhomaion
		# 	}
		# 	else_if = {
		# 		limit = {
		# 			has_game_rule = unholy_roman_empire_name_of_byzantium
		# 		}
		# 		set_title_name = e_unholy_roman_empire
		# 	}
		# }
		
		# Admin - Let's give existing governors the Governor trait on game start
		every_independent_ruler = {
			limit = { government_allows = administrative }
			every_vassal = {
				limit = {
					is_governor = yes
					NOT = { has_trait = governor }
				}
				add_trait = governor
				add_trait_xp = {
					trait = governor
					value = {
						add = primary_title.title_held_years
						multiply = 2
					}
				}
			}
		}
	}
}

# Like on_game_start, except it is called once the host (or player, in single player) exits the lobby. Good for anything where you need to know who the players are, or what the game rules are
on_game_start_after_lobby = {
	effect = {
		# Make sure that Realm Priests are landed theocrats where it makes sense
		every_ruler = {
			limit = {
				highest_held_title_tier >= tier_duchy
			}
			if = {
				limit = {
					exists = cp:councillor_court_chaplain
					cp:councillor_court_chaplain = {
						is_ruler = no
					}
					faith = { has_doctrine = doctrine_clerical_succession_spiritual_fixed_appointment }
					any_vassal = {
						is_physically_able_adult = yes
						is_councillor = no
						government_has_flag = government_is_theocracy
						can_be_court_chaplain_trigger = { COURT_OWNER = liege }
						faith = liege.faith
					}
				}
				random_vassal = {
					limit = {
						is_physically_able_adult = yes
						is_councillor = no
						government_has_flag = government_is_theocracy
						can_be_court_chaplain_trigger = { COURT_OWNER = liege }
						faith = liege.faith
					}
					weight = {
						base = 1
						modifier = {
							add = 1000
							faith.religious_head ?= this
						}
						modifier = {
							add = learning
						}
						modifier = {
							add = primary_title.tier
						}
					}
					liege = {
						assign_councillor_type = {
							type = councillor_court_chaplain
							remove_existing_councillor = yes
							target = prev
						}
					}
				}
			}
			if = {
				limit = {
					is_landless_adventurer = yes
				}
				if = { limit = { has_realm_law = crown_authority_0 } remove_realm_law = crown_authority_0 }
			}
		}

		### GAME RULE: VIEW ON SAME-SEX RELATIONS
		if = {
			limit = { has_game_rule = accepted_same_sex_relations }
			game_rule_accepted_same_sex_relations_effect = yes
		}

		### GAME RULE: RANDOM RULER PLACEMENT
		if = {
			limit = { NOT = { has_game_rule = random_ruler_placement_off } }
			game_rule_random_ruler_placement_effect = yes
		}

		### GAME RULE: RANDOMIZE FAITH
		if = {
			limit = { has_game_rule = randomized_faiths_on }
			game_rule_randomize_faith_effect = yes
		}

		### GAME RULE: FAITH ACCEPTANCE
		if = {
			limit = { has_game_rule = full_faith_acceptance }
			game_rule_faith_acceptance_effect = yes
		}

		### GAME RULE: GENDER EQUALITY ###
		if = {
			limit = { has_game_rule = full_gender_equality }
			game_rule_full_gender_equality_effect = yes
		}
		else_if = {
			limit = { has_game_rule = inversed_gender_equality }
			game_rule_inversed_gender_equality_effect = yes
		}

		### GAME RULE: SEXUALITY DISTRIBUTION ###
		if = {
			limit = { NOT = { has_game_rule = sexuality_distribution_default } }
			game_rule_sexuality_distribution_effect = yes
		}
		else = { # So that children 10+ starts with a sexuality
			child_sexuality_distribution_effect = yes
		}

		### GAME RULE: STRUGGLE TOGGLES
		# struggle:iberian_struggle ?= {
		# 	if = {
		# 		limit = { has_game_rule = struggle_iberia_toggle_off }
		# 		end_struggle = yes
		# 	}
		# }
		# struggle:persian_struggle ?= {
		# 	if = {
		# 		limit = { has_game_rule = struggle_persia_toggle_off }
		# 		end_struggle = yes
		# 	}
		# }

		### GAME RULE: RULER OF MUNSTER
		# if = {
		# 	limit = {
		# 		game_start_date = 1066.9.15
		# 		has_game_rule = historicity_ruler_of_munster_historical_toirdelbach
		# 	}
		# 	create_title_and_vassal_change = {
		# 		type = conquest
		# 		save_scope_as = title_change
		# 	}
		# 	character:83355 = {
		# 		every_held_title = {
		# 			limit = { tier >= tier_county }
		# 			change_title_holder = {
		# 				holder = character:906
		# 				change = scope:title_change
		# 			}
		# 		}
		# 		pay_short_term_gold = {
		# 			target = character:83355
		# 			gold = gold
		# 		}
		# 	}
		# 	random_player = {
		# 		limit = { this = character:83355 }
		# 		set_player_character = character:906
		# 	}
		# 	resolve_title_and_vassal_change = scope:title_change
		# 	# Since Murchad is back to his historical self, he gets to suck.
		# 	character:83355 = {
		# 		add_diplomacy_skill = -10
		# 		remove_trait = gregarious
		# 		add_trait = craven
		# 		# Plus, usurpation rivalry — now Toidelbach has a perfectly good claim to the kingdom and will do a lot more with it than Murchad managed in his 5m in power, but by gameplay terms, this _is_ a usurpation.
		# 		set_relation_rival = {
		# 			target = character:906
		# 			reason = rival_usurper
		# 		}
		# 	}
		# 	# Alright, let's give Toirdelbach his alliance.
		# 	character:906 = {
		# 		add_opinion = {
		# 			modifier = perk_negotiated_alliance_opinion
		# 			target = character:922
		# 		}
		# 		reverse_add_opinion = {
		# 			modifier = event_negotiated_alliance_opinion
		# 			target = character:922
		# 		}
		# 		create_alliance = {
		# 			target = character:922
		# 			allied_through_owner = character:906
		# 			allied_through_target = character:922
		# 		}
		# 	}
		# }

		### GAME RULE: DETERMINISTIC CONQUEST
		# if = {
		# 	limit = {
		# 		OR = {
		# 			NOT = { has_game_rule = historicity_norman_conquest_default_random }
		# 			game_rule_rig_norman_conquest_for_hereward_trigger = yes
		# 		}
		# 	}
		# 	set_global_variable = deterministic_conquest_of_england_1066
		# 	# See if we should just teleport our combatants' armies into place.
		# 	trigger_event = {
		# 		id = game_rule.1151
		# 		trigger_on_next_date = 1066.09.25
		# 	}
		# 	trigger_event = {
		# 		id = game_rule.1152
		# 		trigger_on_next_date = 1066.10.14
		# 	}
		# }

		### 867 - MISC ###
		# Basileios has just murdered Michael III.
		# character:1700 ?= { trigger_event = bookmark.0211 }

		### GAME RULE: EXTRA ADMINS
		## We'll be doing some excessive triggers below in a bid to lightly future-proof + error-spam mods less, don't worry about it.
		### We handle players after the lobby.
		# Historic chars.
		apply_historic_administrative_game_rule_effect = yes
		# Players.
		if = {
			limit = { has_dlc_feature = roads_to_power }
			if = {
				limit = {
					NOT = { has_game_rule = historicity_extra_admin_player_wherever_gameplay_not_administrative }
				}
				if = {
					limit = { has_game_rule = historicity_extra_admin_player_wherever_alt_historic_always }
					every_player = {
						limit = {
							highest_held_title_tier >= tier_kingdom
							NOR = {
								government_has_flag = government_is_administrative
								government_has_flag = government_is_landless_adventurer
							}
						}
						convert_to_administrative_from_feudalism_game_start_effect = yes
					}
				}
				else_if = {
					limit = { has_game_rule = historicity_extra_admin_player_wherever_alt_historic_with_august_trait }
					every_player = {
						limit = {
							highest_held_title_tier >= tier_kingdom
							NOR = {
								government_has_flag = government_is_administrative
								government_has_flag = government_is_landless_adventurer
							}
							has_trait = august
						}
						convert_to_administrative_from_feudalism_game_start_effect = yes
					}
				}
			}
		}

		# Give Ruler Designer characters regencies.
		every_in_global_list = {
			variable = rd_chars_needing_regencies
			trigger_event = diarchy.0011
			# Aaaand clean the list.
			save_temporary_scope_as = char_temp
			remove_list_global_variable = {
				name = rd_chars_needing_regencies
				target = scope:char_temp
			}
		}

		### ACHIEVEMENT: FROM RAGS TO RICHES / CK EDIT - NO ACHIEVEMENTS
		# every_player = {
		# 	limit = { highest_held_title_tier = tier_county }
		# 	add_achievement_global_variable_effect = {
		# 		VARIABLE = achievement_rags_to_riches_valid
		# 		VALUE = yes
		# 	}
		# }
		### ACHIEVEMENT TRACKING FOR STARTING CHARACTERS / CK EDIT - NO ACHIEVEMENTS
		# if = { 
		# 	limit = { has_multiple_players = no }
		# 	every_player = {
		# 		# Base Title
		# 		if = {
		# 			limit = { 
		# 				exists = character:7757
		# 				this = character:7757
		# 			}
		# 			add_achievement_global_variable_effect = {
		# 				VARIABLE = started_give_a_dog_a_bone_achievement
		# 				VALUE = yes
		# 			}
		# 		}	
		# 		if = {
		# 			limit = { 
		# 				exists = character:1128
		# 				this = character:1128
		# 			}
		# 			add_achievement_global_variable_effect = {
		# 				VARIABLE = started_wily_as_the_fox_achievement
		# 				VALUE = yes
		# 			}
		# 		}
		# 		if = {
		# 			limit = {
		# 				OR = {
		# 					AND = {
		# 						exists = character:108501
		# 						this = character:108501
		# 					}
		# 					AND = {
		# 						exists = character:107500
		# 						this = character:107500
		# 					}
		# 					AND = {
		# 						exists = character:107501
		# 						this = character:107501
		# 					}
		# 					AND = {
		# 						exists = character:108500
		# 						this = character:108500
		# 					}
		# 					AND = {
		# 						exists = character:109500
		# 						this = character:109500
		# 					}
		# 				}
		# 			}
		# 			add_achievement_global_variable_effect = {
		# 				VARIABLE = started_sibling_rivalry_achievement
		# 				VALUE = yes
		# 			}
		# 		}
		# 		if = {
		# 			limit = {
		# 				OR = {
		# 					AND = {
		# 						exists = character:163108
		# 						this = character:163108
		# 					}
		# 					AND = {
		# 						exists = character:163110
		# 						this = character:163110
		# 					}
		# 					AND = {
		# 						exists = character:163111
		# 						this = character:163111
		# 					}
		# 					AND = {
		# 						exists = character:163112
		# 						this = character:163112
		# 					}
		# 					AND = {
		# 						exists = character:163119
		# 						this = character:163119
		# 					}
		# 				}
		# 			}
		# 			add_achievement_global_variable_effect = {
		# 				VARIABLE = started_blood_eagle_achievement
		# 				VALUE = yes
		# 			}
		# 		}
		# 		if = {
		# 			limit = {
		# 				exists = character:6448
		# 				this = character:6448
		# 			}
		# 			add_achievement_global_variable_effect = {
		# 				VARIABLE = started_kings_to_the_seventh_generation_achievement
		# 				VALUE = yes
		# 			}
		# 		}
		# 		if = {
		# 			limit = {
		# 				exists = character:140
		# 				this = character:140
		# 			}
		# 			add_achievement_global_variable_effect = {
		# 				VARIABLE = started_norman_yoke_achievement
		# 				VALUE = yes
		# 			}
		# 		}
		# 		if = {
		# 			limit = {
		# 				exists = character:522
		# 				this = character:522
		# 			}
		# 			add_achievement_global_variable_effect = {
		# 				VARIABLE = started_royal_dignity_achievement
		# 				VALUE = yes
		# 			}
		# 		}
		# 		if = {
		# 			limit = {
		# 				exists = character:40605
		# 				this = character:40605
		# 			}
		# 			add_achievement_global_variable_effect = {
		# 				VARIABLE = started_land_of_the_rus_achievement
		# 				VALUE = yes
		# 			}
		# 		}
		# 		if = {
		# 			limit = {
		# 				exists = character:251187
		# 				this = character:251187
		# 			}
		# 			add_achievement_global_variable_effect = {
		# 				VARIABLE = started_mother_of_us_all_achievement
		# 				VALUE = yes
		# 			}
		# 		}
		# 		if = {
		# 			limit = {
		# 				OR = {
		# 					culture = { has_cultural_pillar = heritage_iberian }
		# 					culture = culture:andalusian
		# 				}
		# 				has_religion = religion:calradian_religion
		# 			}
		# 			add_achievement_global_variable_effect = {
		# 				VARIABLE = started_reconquista_achievement
		# 				VALUE = yes
		# 			}
		# 		}
		# 		if = {
		# 			limit = {
		# 				culture = culture:irish
		# 				capital_province = { geographical_region = custom_ireland }
		# 			}
		# 			add_achievement_global_variable_effect = {
		# 				VARIABLE = started_the_emerald_isle_achievement
		# 				VALUE = yes
		# 			}
		# 		}
		# 		if = {
		# 			limit = {
		# 				OR = {
		# 					culture = culture:castilian
		# 					culture = culture:basque
		# 					culture = culture:portuguese
		# 					culture = culture:catalan
		# 					culture = culture:andalusian
		# 					culture = culture:visigothic
		# 					culture = culture:suebi
		# 				}
		# 				has_religion = religion:aserai_religion
		# 				capital_province = { geographical_region = region_vlandia_iberia }
		# 			}
		# 			add_achievement_global_variable_effect = {
		# 				VARIABLE = started_al_andalus_achievement
		# 				VALUE = yes
		# 			}
		# 		}
		# 		if = {
		# 			limit = { 
		# 				exists = character:159137
		# 				this = character:159137
		# 			}
		# 			add_achievement_global_variable_effect = {
		# 				VARIABLE = started_almost_there_achievement
		# 				VALUE = yes
		# 			}
		# 		}
		# 		if = {
		# 			limit = { 
		# 				exists = character:109607
		# 				this = character:109607
		# 			}
		# 			add_achievement_global_variable_effect = {
		# 				VARIABLE = started_last_count_first_king_achievement
		# 				VALUE = yes
		# 			}
		# 		}
		# 		if = {
		# 			limit = { 
		# 				exists = character:6878
		# 				this = character:6878
		# 			}
		# 			add_achievement_global_variable_effect = {
		# 				VARIABLE = started_going_places_achievement
		# 				VALUE = yes
		# 			}
		# 		}
		# 		# FP1
		# 		## far_from_home_achievement
		# 		if = {
		# 			limit = {
		# 				# Starting as a Norse pagan Norse-cultured character.
		# 				fp1_achievement_culture_plus_religion_norse_trigger = yes
		# 			}
		# 			add_achievement_global_variable_effect = {
		# 				VARIABLE = started_far_from_home_achievement
		# 				VALUE = yes
		# 			}
		# 		}
		# 		## miklagardariki_achievement
		# 		if = {
		# 			limit = {
		# 				# Starting as a Norse pagan Norse-cultured character.
		# 				fp1_achievement_culture_plus_religion_norse_trigger = yes
		# 			}
		# 			add_achievement_global_variable_effect = {
		# 				VARIABLE = started_miklagardariki_achievement
		# 				VALUE = yes
		# 			}
		# 		}
		# 		## canute_the_greater_achievement
		# 		add_achievement_global_variable_effect = {
		# 			VARIABLE = started_canute_the_greater_achievement
		# 			VALUE = yes
		# 		}
		# 		## king_of_all_the_isles_achievement
		# 		if = {
		# 			limit = {
		# 				# Starting as a Norse pagan Norse-cultured character.
		# 				fp1_achievement_culture_plus_religion_norse_trigger = yes
		# 			}
		# 			add_achievement_global_variable_effect = {
		# 				VARIABLE = started_king_of_all_the_isles_achievement
		# 				VALUE = yes
		# 			}
		# 		}
		# 		## faster_than_the_fox_achievement
		# 		if = {
		# 			limit = {
		# 				# Starting as a Norse pagan Norse-cultured character.
		# 				fp1_achievement_culture_plus_religion_norse_trigger = yes
		# 			}
		# 			add_achievement_global_variable_effect = {
		# 				VARIABLE = started_faster_than_the_fox_achievement
		# 				VALUE = yes
		# 			}
		# 		}
		# 		## volva_achievement
		# 		if = {
		# 			limit = {
		# 				# Starting as a Norse pagan Norse-cultured character.
		# 				fp1_achievement_culture_plus_religion_norse_trigger = yes
		# 			}
		# 			add_achievement_global_variable_effect = {
		# 				VARIABLE = started_volva_achievement
		# 				VALUE = yes
		# 			}
		# 		}
		# 		## saga_in_stone_achievement
		# 		add_achievement_global_variable_effect = {
		# 			VARIABLE = started_saga_in_stone_achievement
		# 			VALUE = yes
		# 		}
		# 		## first_of_the_crusader_kings_achievement
		# 		if = {
		# 			limit = {
		# 				# Starting as a Norse-cultured character.
		# 				fp1_achievement_culture_norse_trigger = yes
		# 			}
		# 			add_achievement_global_variable_effect = {
		# 				VARIABLE = started_first_of_the_crusader_kings_achievement
		# 				VALUE = yes
		# 			}
		# 		}
		# 		## vladimirs_second_choice_achievement
		# 		if = {
		# 			limit = {
		# 				# Starting as a Norse pagan Norse or Rus-cultured character.
		# 				fp1_achievement_culture_norse_or_rus_trigger = yes
		# 				fp1_achievement_religious_norse_trigger = yes
		# 			}
		# 			add_achievement_global_variable_effect = {
		# 				VARIABLE = started_vladimirs_second_choice_achievement
		# 				VALUE = yes
		# 			}
		# 		}
		# 		## a_dangerous_business_achievement
		# 		add_achievement_global_variable_effect = {
		# 			VARIABLE = started_a_dangerous_business_achievement
		# 			VALUE = yes
		# 		}
		# 		# EP1
		# 		##1 Patronage
		# 		add_achievement_global_variable_effect = {
		# 			VARIABLE = started_patronage_achievement
		# 			VALUE = yes
		# 		}
		# 		##2 Converging Paths
		# 		add_achievement_global_variable_effect = {
		# 			VARIABLE = started_converging_paths_achievement
		# 			VALUE = yes
		# 		}
		# 		##3 Changing course
		# 		add_achievement_global_variable_effect = {
		# 			VARIABLE = started_changing_course_achievement
		# 			VALUE = yes
		# 		}
		# 		##4 Hoarder
		# 		add_achievement_global_variable_effect = {
		# 			VARIABLE = started_hoarder_achievement
		# 			VALUE = yes
		# 		}
		# 		##5 creme de la creme
		# 		add_achievement_global_variable_effect = {
		# 			VARIABLE = started_creme_de_la_creme_achievement
		# 			VALUE = yes
		# 		}
		# 		##6 Give it back!
		# 		add_achievement_global_variable_effect = {
		# 			VARIABLE = started_polyglot_achievement
		# 			VALUE = yes
		# 		}
		# 		##7 Inspirational
		# 		add_achievement_global_variable_effect = {
		# 			VARIABLE = started_inspirational_achievement
		# 			VALUE = yes
		# 		}
		# 		##8 One of a Kind
		# 		add_achievement_global_variable_effect = {
		# 			VARIABLE = started_one_of_a_kind_achievement
		# 				VALUE = yes
		# 		}
		# 		##9 True Tolerance
		# 		add_achievement_global_variable_effect = {
		# 			VARIABLE = started_true_tolerance_achievement
		# 			VALUE = yes
		# 		}
		# 		##10 Delusions of Grandeur
		# 		add_achievement_global_variable_effect = {
		# 			VARIABLE = started_delusions_of_grandeur_achievement_achievement
		# 			VALUE = yes
		# 		}
		# 		##11 Bod Chen Po
		# 		if = {
		# 			limit = {
		# 				this.dynasty = dynasty:105800
		# 			}
		# 			add_achievement_global_variable_effect = {
		# 				VARIABLE = started_bod_chen_po_achievement
		# 				VALUE = yes
		# 			}
		# 		}
		# 		##12 Turkish Eagle
		# 		if = {
		# 			limit = {
		# 				has_title = title:c_samosata
		# 				this.house = house:house_seljuk # Seljuk
		# 			}
		# 			add_achievement_global_variable_effect = {
		# 				VARIABLE = started_turkish_eagle_achievement
		# 				VALUE = yes
		# 			}
		# 		}
		# 		##13 Rise of the Ghurids
		# 		if = {
		# 			limit = {
		# 				has_title = title:d_ghur
		# 				this.dynasty = dynasty:791 #Ghurid
		# 			}
		# 			add_achievement_global_variable_effect = {
		# 				VARIABLE = started_rise_of_the_ghurids_achievement
		# 				VALUE = yes
		# 			}
		# 		}
		# 		##14 Brave and Bold
		# 		if = {
		# 			limit = {
		# 				game_start_date < 868.1.1
		# 				this.dynasty = dynasty:699 #Piast
		# 			}
		# 			add_achievement_global_variable_effect = {
		# 				VARIABLE = started_brave_and_bold_achievement
		# 				VALUE = yes
		# 			}
		# 		}
		# 		##15 Lingua Franca
		# 		add_achievement_global_variable_effect = {
		# 			VARIABLE = started_lingua_franca_achievement
		# 			VALUE = yes
		# 		}
		# 		##16 Beta Israel
		# 		add_achievement_global_variable_effect = {
		# 			VARIABLE = started_beta_israel_achievement
		# 			VALUE = yes
		# 		}
		# 		## 17 They belong in a museum!
		# 		add_achievement_global_variable_effect = {
		# 			VARIABLE = started_they_belong_in_a_museum_achievement
		# 			VALUE = yes
		# 		}
		# 		##18 I made this!
		# 		add_achievement_global_variable_effect = {
		# 			VARIABLE = started_i_made_this_achievement
		# 			VALUE = yes
		# 		}
		# 		##19 Nobody Comes to Fika!
		# 		add_achievement_global_variable_effect = {
		# 			VARIABLE = started_nobody_comes_to_fika_achievement
		# 			VALUE = yes
		# 		}
		# 		## 20 The True Royal Court
		# 		add_achievement_global_variable_effect = {
		# 			VARIABLE = started_the_true_royal_court_achievement
		# 				VALUE = yes
		# 		}
		# 		# EP2
		# 		## 01. The Grandest Tour
		# 		add_achievement_global_variable_effect = {
		# 			VARIABLE = started_the_grandest_tour_achievement
		# 			VALUE = yes
		# 		}
		# 		## 02. Your Eternal Reward
		# 		add_achievement_global_variable_effect = {
		# 			VARIABLE = started_your_eternal_reward_achievement
		# 			VALUE = yes
		# 		}
		# 		## 03. Imperial March
		# 		add_achievement_global_variable_effect = {
		# 			VARIABLE = started_imperial_march_achievement
		# 			VALUE = yes
		# 		}
		# 		## 04. Black Dinner
		# 		add_achievement_global_variable_effect = {
		# 			VARIABLE = started_black_dinner_achievement
		# 			VALUE = yes
		# 		}
		# 		## 05. There and Back Again
		# 		add_achievement_global_variable_effect = {
		# 			VARIABLE = started_there_and_back_again_achievement
		# 			VALUE = yes
		# 		}
		# 		## 06. The Very Best
		# 		add_achievement_global_variable_effect = {
		# 			VARIABLE = started_the_very_best_achievement
		# 			VALUE = yes
		# 		}
		# 		## 07. Like No One Ever Was
		# 		add_achievement_global_variable_effect = {
		# 			VARIABLE = started_like_no_one_ever_was_achievement
		# 			VALUE = yes
		# 		}
		# 		## 08. A Thousand and One Night
		# 		add_achievement_global_variable_effect = {
		# 			VARIABLE = started_a_thousand_and_one_nights_achievement
		# 			VALUE = yes
		# 		}
		# 		## 09. A Knight's Tale
		# 		add_achievement_global_variable_effect = {
		# 			VARIABLE = started_a_knights_tale_achievement
		# 			VALUE = yes
		# 		}
		# 		## 10. Hunting Accident
		# 		add_achievement_global_variable_effect = {
		# 			VARIABLE = started_hunting_accident_achievement
		# 			VALUE = yes
		# 		}
		# 		## 11. Lions and Tigers and Bears, Oh My!
		# 		add_achievement_global_variable_effect = {
		# 			VARIABLE = started_lions_and_tigers_and_bears_oh_my_achievement
		# 			VALUE = yes
		# 		}
		# 		## 12. Fly, my Pretty!
		# 		add_achievement_global_variable_effect = {
		# 			VARIABLE = started_fly_my_pretty_achievement
		# 			VALUE = yes
		# 		}
		# 		## 13. Pathway to Heaven
		# 		add_achievement_global_variable_effect = {
		# 			VARIABLE = started_pathway_to_heaven_achievement
		# 			VALUE = yes
		# 		}
		# 		## 14. Sir Lance-a-Lot
		# 		add_achievement_global_variable_effect = {
		# 			VARIABLE = started_sir_lance_a_lot_achievement
		# 			VALUE = yes
		# 		}
		# 		## 15. I'm in my Element(s)
		# 		add_achievement_global_variable_effect = {
		# 			VARIABLE = started_im_in_my_elements_achievement
		# 			VALUE = yes
		# 		}
		# 		## 16. Ahab
		# 		add_achievement_global_variable_effect = {
		# 			VARIABLE = started_ahab_achievement
		# 			VALUE = yes
		# 		}
		# 		## 17. Little William Marshal
		# 		add_achievement_global_variable_effect = {
		# 			VARIABLE = started_little_william_marshal_achievement
		# 			VALUE = 0
		# 		}
		# 		add_achievement_global_variable_effect = {
		# 			VARIABLE = little_william_marshal_achievement_tally
		# 			VALUE = 0
		# 		}
		# 		## 18. A True & Perfect Knight
		# 		add_achievement_global_variable_effect = {
		# 			VARIABLE = started_a_true_and_perfect_knight_achievement
		# 			VALUE = yes
		# 		}
		# 		## 19. A.E.I.O.U & Me
		# 		if = {
		# 			limit = {
		# 				# Etichonen, of whom the Hapsburgs are a cadet - we check dynasty rather than house so that an accidental cadet doesn't screw you.
		# 				this.house ?= house:house_habsburg
		# 			}
		# 			add_achievement_global_variable_effect = {
		# 				VARIABLE = started_a_e_i_o_u_and_me_achievement
		# 				VALUE = yes
		# 			}
		# 		}
		# 		## 20. The Iron and Golden King
		# 		add_achievement_global_variable_effect = {
		# 			VARIABLE = started_the_iron_and_golden_king_achievement
		# 			VALUE = yes
		# 		}

		# 		### RULER DESIGNER ACHIEVEMENT BLOCKS ###
		# 		if = {
		# 			limit = {
		# 				num_virtuous_traits >= 3
		# 			}
		# 			add_achievement_flag_effect = { FLAG = rd_character_blocked_paragon_of_virtue_achievement_flag	}	
		# 		}
		# 		if = {
		# 			limit = {
		# 				any_child = {
		# 					count >= 10
		# 					is_alive = yes
		# 				}
		# 			}
		# 			add_achievement_flag_effect = { FLAG = rd_character_blocked_the_succession_is_safe_achievement_flag }	
		# 		}
		# 		if = {
		# 			limit = {
		# 				any_child = {
		# 					has_trait = inbred
		# 				}	
		# 			}
		# 			add_achievement_flag_effect = { FLAG = rd_character_blocked_keeping_it_in_the_family_achievement_flag }
		# 		}
		# 		if = {
		# 			limit = {
		# 				highest_held_title_tier >= tier_empire
		# 				should_be_naked_trigger = yes	
		# 			}
		# 			add_achievement_flag_effect = { FLAG = rd_character_blocked_the_emperors_new_clothes_achievement_flag }
		# 		}
		# 		if = {
		# 			limit = {
		# 				is_from_ruler_designer = yes
		# 				OR = {
		# 					fp1_achievement_culture_norse_trigger = yes
		# 					fp1_achievement_religious_norse_trigger = yes
		# 				}
		# 			}
		# 			add_to_global_unavailable_achievements_list_effect = { FLAG = flag:rd_character_blocked_far_from_home_achievement }
		# 			add_to_global_unavailable_achievements_list_effect = { FLAG = flag:rd_character_blocked_miklagardariki_achievement }
		# 			add_to_global_unavailable_achievements_list_effect = { FLAG = flag:rd_character_blocked_faster_than_the_fox_achievement }
		# 		}
		# 		if = {
		# 			limit = {
		# 				any_ruler = {
		# 					is_from_ruler_designer = yes
		# 				}
		# 			}
		# 			add_to_global_unavailable_achievements_list_effect = { FLAG = flag:rd_character_blocked_iberia_or_iberia_achievement }
		# 			add_to_global_unavailable_achievements_list_effect = { FLAG = flag:rd_character_blocked_el_cid_achievement }
		# 			add_achievement_global_variable_effect = {
		# 				VARIABLE = any_ruler_designed_character_achievement
		# 				VALUE = yes
		# 			}
		# 		}
		# 	}
		# }

		### ACHIEVEMENT (FP3): The Ummayad Strikes Back / CK EDIT - NO ACHIEVEMENTS
		# every_player = {
		# 	if = {
		# 		limit = {
		# 			dynasty = character:73683.dynasty
		# 			location = { geographical_region = region_vlandia_iberia }
		# 		}
		# 		set_global_variable = fp3_the_umma_strikes_back_achievement_tracker # Is not removed (sad!)
		# 	}
		# }

		### HOLD COURT STARTING GRACE
		every_character_with_royal_court = {
			set_variable = {
				name = hold_court_cooldown
	 			days = standard_hold_court_cooldown_time
	 		}
		}

		#Set starting cultural acceptance
		culture:sturgian = {
			change_cultural_acceptance = {
				target = culture:nord
				value = 35
				desc = cultural_acceptance_historical_relations
			}
			change_cultural_acceptance = {
				target = culture:vakken
				value = 15
				desc = cultural_acceptance_historical_relations
			}
			change_cultural_acceptance = {
				target = culture:iltanlar
				value = 5
				desc = cultural_acceptance_historical_relations
			}
		}
		culture:calradian = {
			change_cultural_acceptance = {
				target = culture:vlandian
				value = 25
				desc = cultural_acceptance_historical_relations
			}
		}
		culture:darshi = {
			change_cultural_acceptance = {
				target = culture:aserai
				value = 20
				desc = cultural_acceptance_historical_relations
			}
		}
		## CK_UPDATE, This is for a bookmark cultural tolerance/acceptance. Let's readapt this for Warband era 
		# if = {
		# 	limit = { current_date = 867.1.1 }
		# 	# West Slavic.
		# 	culture:pommeranian = {
		# 		change_cultural_acceptance = {
		# 			target = culture:czech
		# 			value = 50
		# 			desc = cultural_acceptance_historical_relations
		# 		}
		# 		change_cultural_acceptance = {
		# 			target = culture:polish
		# 			value = 50
		# 			desc = cultural_acceptance_historical_relations
		# 		}
		# 		change_cultural_acceptance = {
		# 			target = culture:polabian
		# 			value = 50
		# 			desc = cultural_acceptance_historical_relations
		# 		}
		# 		change_cultural_acceptance = {
		# 			target = culture:slovien
		# 			value = 50
		# 			desc = cultural_acceptance_historical_relations
		# 		}
		# 		change_cultural_acceptance = {
		# 			target = culture:carantanian
		# 			value = 50
		# 			desc = cultural_acceptance_historical_relations
		# 		}
		# 		change_cultural_acceptance = {
		# 			target = culture:russian
		# 			value = 50
		# 			desc = cultural_acceptance_historical_relations
		# 		}
		# 		change_cultural_acceptance = {
		# 			target = culture:ilmenian
		# 			value = 50
		# 			desc = cultural_acceptance_historical_relations
		# 		}
		# 		change_cultural_acceptance = {
		# 			target = culture:severian
		# 			value = 50
		# 			desc = cultural_acceptance_historical_relations
		# 		}
		# 		change_cultural_acceptance = {
		# 			target = culture:volhynian
		# 			value = 50
		# 			desc = cultural_acceptance_historical_relations
		# 		}
		# 		change_cultural_acceptance = {
		# 			target = culture:croatian
		# 			value = 50
		# 			desc = cultural_acceptance_historical_relations
		# 		}
		# 		change_cultural_acceptance = {
		# 			target = culture:bosnian
		# 			value = 50
		# 			desc = cultural_acceptance_historical_relations
		# 		}
		# 		change_cultural_acceptance = {
		# 			target = culture:serbian
		# 			value = 50
		# 			desc = cultural_acceptance_historical_relations
		# 		}
		# 		change_cultural_acceptance = {
		# 			target = culture:bulgarian
		# 			value = 50
		# 			desc = cultural_acceptance_historical_relations
		# 		}
		# 	}
		# 	culture:czech = {
		# 		change_cultural_acceptance = {
		# 			target = culture:polish
		# 			value = 50
		# 			desc = cultural_acceptance_historical_relations
		# 		}
		# 		change_cultural_acceptance = {
		# 			target = culture:polabian
		# 			value = 50
		# 			desc = cultural_acceptance_historical_relations
		# 		}
		# 		change_cultural_acceptance = {
		# 			target = culture:slovien
		# 			value = 50
		# 			desc = cultural_acceptance_historical_relations
		# 		}
		# 		change_cultural_acceptance = {
		# 			target = culture:carantanian
		# 			value = 50
		# 			desc = cultural_acceptance_historical_relations
		# 		}
		# 		change_cultural_acceptance = {
		# 			target = culture:russian
		# 			value = 50
		# 			desc = cultural_acceptance_historical_relations
		# 		}
		# 		change_cultural_acceptance = {
		# 			target = culture:ilmenian
		# 			value = 50
		# 			desc = cultural_acceptance_historical_relations
		# 		}
		# 		change_cultural_acceptance = {
		# 			target = culture:severian
		# 			value = 50
		# 			desc = cultural_acceptance_historical_relations
		# 		}
		# 		change_cultural_acceptance = {
		# 			target = culture:volhynian
		# 			value = 50
		# 			desc = cultural_acceptance_historical_relations
		# 		}
		# 		change_cultural_acceptance = {
		# 			target = culture:croatian
		# 			value = 50
		# 			desc = cultural_acceptance_historical_relations
		# 		}
		# 		change_cultural_acceptance = {
		# 			target = culture:bosnian
		# 			value = 50
		# 			desc = cultural_acceptance_historical_relations
		# 		}
		# 		change_cultural_acceptance = {
		# 			target = culture:serbian
		# 			value = 50
		# 			desc = cultural_acceptance_historical_relations
		# 		}
		# 		change_cultural_acceptance = {
		# 			target = culture:bulgarian
		# 			value = 50
		# 			desc = cultural_acceptance_historical_relations
		# 		}
		# 	}
		# 	culture:polish = {
		# 		change_cultural_acceptance = {
		# 			target = culture:polabian
		# 			value = 50
		# 			desc = cultural_acceptance_historical_relations
		# 		}
		# 		change_cultural_acceptance = {
		# 			target = culture:slovien
		# 			value = 50
		# 			desc = cultural_acceptance_historical_relations
		# 		}
		# 		change_cultural_acceptance = {
		# 			target = culture:carantanian
		# 			value = 50
		# 			desc = cultural_acceptance_historical_relations
		# 		}
		# 		change_cultural_acceptance = {
		# 			target = culture:russian
		# 			value = 50
		# 			desc = cultural_acceptance_historical_relations
		# 		}
		# 		change_cultural_acceptance = {
		# 			target = culture:ilmenian
		# 			value = 50
		# 			desc = cultural_acceptance_historical_relations
		# 		}
		# 		change_cultural_acceptance = {
		# 			target = culture:severian
		# 			value = 50
		# 			desc = cultural_acceptance_historical_relations
		# 		}
		# 		change_cultural_acceptance = {
		# 			target = culture:volhynian
		# 			value = 50
		# 			desc = cultural_acceptance_historical_relations
		# 		}
		# 		change_cultural_acceptance = {
		# 			target = culture:croatian
		# 			value = 50
		# 			desc = cultural_acceptance_historical_relations
		# 		}
		# 		change_cultural_acceptance = {
		# 			target = culture:bosnian
		# 			value = 50
		# 			desc = cultural_acceptance_historical_relations
		# 		}
		# 		change_cultural_acceptance = {
		# 			target = culture:serbian
		# 			value = 50
		# 			desc = cultural_acceptance_historical_relations
		# 		}
		# 		change_cultural_acceptance = {
		# 			target = culture:bulgarian
		# 			value = 50
		# 			desc = cultural_acceptance_historical_relations
		# 		}
		# 	}
		# 	culture:polabian = {
		# 		change_cultural_acceptance = {
		# 			target = culture:slovien
		# 			value = 50
		# 			desc = cultural_acceptance_historical_relations
		# 		}
		# 		change_cultural_acceptance = {
		# 			target = culture:carantanian
		# 			value = 50
		# 			desc = cultural_acceptance_historical_relations
		# 		}
		# 		change_cultural_acceptance = {
		# 			target = culture:russian
		# 			value = 50
		# 			desc = cultural_acceptance_historical_relations
		# 		}
		# 		change_cultural_acceptance = {
		# 			target = culture:ilmenian
		# 			value = 50
		# 			desc = cultural_acceptance_historical_relations
		# 		}
		# 		change_cultural_acceptance = {
		# 			target = culture:severian
		# 			value = 50
		# 			desc = cultural_acceptance_historical_relations
		# 		}
		# 		change_cultural_acceptance = {
		# 			target = culture:volhynian
		# 			value = 50
		# 			desc = cultural_acceptance_historical_relations
		# 		}
		# 		change_cultural_acceptance = {
		# 			target = culture:croatian
		# 			value = 50
		# 			desc = cultural_acceptance_historical_relations
		# 		}
		# 		change_cultural_acceptance = {
		# 			target = culture:bosnian
		# 			value = 50
		# 			desc = cultural_acceptance_historical_relations
		# 		}
		# 		change_cultural_acceptance = {
		# 			target = culture:serbian
		# 			value = 50
		# 			desc = cultural_acceptance_historical_relations
		# 		}
		# 		change_cultural_acceptance = {
		# 			target = culture:bulgarian
		# 			value = 50
		# 			desc = cultural_acceptance_historical_relations
		# 		}
		# 	}
		# 	culture:slovien = {
		# 		change_cultural_acceptance = {
		# 			target = culture:carantanian
		# 			value = 50
		# 			desc = cultural_acceptance_historical_relations
		# 		}
		# 		change_cultural_acceptance = {
		# 			target = culture:russian
		# 			value = 50
		# 			desc = cultural_acceptance_historical_relations
		# 		}
		# 		change_cultural_acceptance = {
		# 			target = culture:ilmenian
		# 			value = 50
		# 			desc = cultural_acceptance_historical_relations
		# 		}
		# 		change_cultural_acceptance = {
		# 			target = culture:severian
		# 			value = 50
		# 			desc = cultural_acceptance_historical_relations
		# 		}
		# 		change_cultural_acceptance = {
		# 			target = culture:volhynian
		# 			value = 50
		# 			desc = cultural_acceptance_historical_relations
		# 		}
		# 		change_cultural_acceptance = {
		# 			target = culture:croatian
		# 			value = 50
		# 			desc = cultural_acceptance_historical_relations
		# 		}
		# 		change_cultural_acceptance = {
		# 			target = culture:bosnian
		# 			value = 50
		# 			desc = cultural_acceptance_historical_relations
		# 		}
		# 		change_cultural_acceptance = {
		# 			target = culture:serbian
		# 			value = 50
		# 			desc = cultural_acceptance_historical_relations
		# 		}
		# 		change_cultural_acceptance = {
		# 			target = culture:bulgarian
		# 			value = 50
		# 			desc = cultural_acceptance_historical_relations
		# 		}
		# 	}
		# 	culture:carantanian = {
		# 		change_cultural_acceptance = {
		# 			target = culture:russian
		# 			value = 50
		# 			desc = cultural_acceptance_historical_relations
		# 		}
		# 		change_cultural_acceptance = {
		# 			target = culture:ilmenian
		# 			value = 50
		# 			desc = cultural_acceptance_historical_relations
		# 		}
		# 		change_cultural_acceptance = {
		# 			target = culture:severian
		# 			value = 50
		# 			desc = cultural_acceptance_historical_relations
		# 		}
		# 		change_cultural_acceptance = {
		# 			target = culture:volhynian
		# 			value = 50
		# 			desc = cultural_acceptance_historical_relations
		# 		}
		# 		change_cultural_acceptance = {
		# 			target = culture:croatian
		# 			value = 50
		# 			desc = cultural_acceptance_historical_relations
		# 		}
		# 		change_cultural_acceptance = {
		# 			target = culture:bosnian
		# 			value = 50
		# 			desc = cultural_acceptance_historical_relations
		# 		}
		# 		change_cultural_acceptance = {
		# 			target = culture:serbian
		# 			value = 50
		# 			desc = cultural_acceptance_historical_relations
		# 		}
		# 		change_cultural_acceptance = {
		# 			target = culture:bulgarian
		# 			value = 50
		# 			desc = cultural_acceptance_historical_relations
		# 		}
		# 	}
		# 	# South Slavic.
		# 	culture:croatian = {
		# 		change_cultural_acceptance = {
		# 			target = culture:russian
		# 			value = 50
		# 			desc = cultural_acceptance_historical_relations
		# 		}
		# 		change_cultural_acceptance = {
		# 			target = culture:ilmenian
		# 			value = 50
		# 			desc = cultural_acceptance_historical_relations
		# 		}
		# 		change_cultural_acceptance = {
		# 			target = culture:severian
		# 			value = 50
		# 			desc = cultural_acceptance_historical_relations
		# 		}
		# 		change_cultural_acceptance = {
		# 			target = culture:volhynian
		# 			value = 50
		# 			desc = cultural_acceptance_historical_relations
		# 		}
		# 		change_cultural_acceptance = {
		# 			target = culture:bosnian
		# 			value = 50
		# 			desc = cultural_acceptance_historical_relations
		# 		}
		# 		change_cultural_acceptance = {
		# 			target = culture:serbian
		# 			value = 50
		# 			desc = cultural_acceptance_historical_relations
		# 		}
		# 		change_cultural_acceptance = {
		# 			target = culture:bulgarian
		# 			value = 50
		# 			desc = cultural_acceptance_historical_relations
		# 		}
		# 	}
		# 	culture:bosnian = {
		# 		change_cultural_acceptance = {
		# 			target = culture:russian
		# 			value = 50
		# 			desc = cultural_acceptance_historical_relations
		# 		}
		# 		change_cultural_acceptance = {
		# 			target = culture:ilmenian
		# 			value = 50
		# 			desc = cultural_acceptance_historical_relations
		# 		}
		# 		change_cultural_acceptance = {
		# 			target = culture:severian
		# 			value = 50
		# 			desc = cultural_acceptance_historical_relations
		# 		}
		# 		change_cultural_acceptance = {
		# 			target = culture:volhynian
		# 			value = 50
		# 			desc = cultural_acceptance_historical_relations
		# 		}
		# 		change_cultural_acceptance = {
		# 			target = culture:serbian
		# 			value = 50
		# 			desc = cultural_acceptance_historical_relations
		# 		}
		# 		change_cultural_acceptance = {
		# 			target = culture:bulgarian
		# 			value = 50
		# 			desc = cultural_acceptance_historical_relations
		# 		}
		# 	}
		# 	culture:serbian = {
		# 		change_cultural_acceptance = {
		# 			target = culture:russian
		# 			value = 50
		# 			desc = cultural_acceptance_historical_relations
		# 		}
		# 		change_cultural_acceptance = {
		# 			target = culture:ilmenian
		# 			value = 50
		# 			desc = cultural_acceptance_historical_relations
		# 		}
		# 		change_cultural_acceptance = {
		# 			target = culture:severian
		# 			value = 50
		# 			desc = cultural_acceptance_historical_relations
		# 		}
		# 		change_cultural_acceptance = {
		# 			target = culture:volhynian
		# 			value = 50
		# 			desc = cultural_acceptance_historical_relations
		# 		}
		# 		change_cultural_acceptance = {
		# 			target = culture:bulgarian
		# 			value = 50
		# 			desc = cultural_acceptance_historical_relations
		# 		}
		# 	}
		# 	culture:bulgarian = {
		# 		change_cultural_acceptance = {
		# 			target = culture:russian
		# 			value = 50
		# 			desc = cultural_acceptance_historical_relations
		# 		}
		# 		change_cultural_acceptance = {
		# 			target = culture:ilmenian
		# 			value = 50
		# 			desc = cultural_acceptance_historical_relations
		# 		}
		# 		change_cultural_acceptance = {
		# 			target = culture:severian
		# 			value = 50
		# 			desc = cultural_acceptance_historical_relations
		# 		}
		# 		change_cultural_acceptance = {
		# 			target = culture:volhynian
		# 			value = 50
		# 			desc = cultural_acceptance_historical_relations
		# 		}
		# 	}
		# 	# East Slavic.
		# 	culture:russian = {
		# 		change_cultural_acceptance = {
		# 			target = culture:ilmenian
		# 			value = 50
		# 			desc = cultural_acceptance_historical_relations
		# 		}
		# 		change_cultural_acceptance = {
		# 			target = culture:severian
		# 			value = 50
		# 			desc = cultural_acceptance_historical_relations
		# 		}
		# 		change_cultural_acceptance = {
		# 			target = culture:volhynian
		# 			value = 50
		# 			desc = cultural_acceptance_historical_relations
		# 		}
		# 	}
		# 	culture:ilmenian = {
		# 		change_cultural_acceptance = {
		# 			target = culture:severian
		# 			value = 50
		# 			desc = cultural_acceptance_historical_relations
		# 		}
		# 		change_cultural_acceptance = {
		# 			target = culture:volhynian
		# 			value = 50
		# 			desc = cultural_acceptance_historical_relations
		# 		}
		# 	}
		# 	culture:severian = {
		# 		change_cultural_acceptance = {
		# 			target = culture:volhynian
		# 			value = 50
		# 			desc = cultural_acceptance_historical_relations
		# 		}
		# 	}
		# 	## Volhynian doesn't get its own box, because we've already applied acceptance to it bilaterally everywhere else.
		# }
		

		# Specific innovation unlock
		if = {
			limit = {
				game_start_date >= 976.8.10
			}
			every_culture_global = {
				limit = {
					OR = {
						has_cultural_pillar = heritage_darshi
						this = culture:aserai
					}
				}
				add_innovation = innovation_ghilman
			}
		}
		### CE1 LEGITIMACY SETUP ###
		every_ruler = {
			limit = {
				has_legitimacy = yes
			}
			add_legitimacy = base_legitimacy_value
		}

		###So player-controlled Rhage doesn't immediately abandon widow trait
		character:Simp_P_1 = {
		    if = {
		        limit = {
		    	    is_ai = no
		    	}
		    	add_character_flag = {
		    	    flag = recently_widowed
		    		years = 5
		    	}
		    }
		}
		# Give all Wimps, Nimps, and Simps their appropriate faction trait #
		if = {
			limit = {
				AND = {
					game_start_date = 1084.5.1 
					exists = title:e_southern_empire.holder
				}
			}
			title:e_southern_empire.holder = {
				every_vassal = {
					limit = {
						is_ai = yes
						culture = {
							has_cultural_pillar = heritage_calradian
						}
					}
					save_temporary_scope_as = sempire_game_start_vassal
					add_trait = ck_royalist
					if = {
						limit = {
							title:e_southern_empire.holder = {
								NOT = {
									is_rightful_liege_of = scope:sempire_game_start_vassal
								}
							}
						}
						vassal_contract_set_obligation_level = { type = special_contract level = 5 }
					}
				}
			}
		}
		if = {
			limit = {
				AND = {
					game_start_date = 1084.5.1 
					exists = title:e_northern_empire.holder
				}

			}
			title:e_northern_empire.holder = {
				every_vassal = {
					limit = {
						is_ai = yes
						culture = {
							has_cultural_pillar = heritage_calradian
						}
					}
					save_temporary_scope_as = nempire_game_start_vassal
					add_trait = ck_oligarch
					if = {
						limit = {
							title:e_northern_empire.holder = {
								NOT = {
									is_rightful_liege_of = scope:nempire_game_start_vassal
								}
							}
						}
						vassal_contract_set_obligation_level = { type = special_contract level = 5 }
					}
				}
			}
		}
		if = {
			limit = {
				AND = {
					game_start_date = 1084.5.1 
					exists = title:e_western_empire.holder
				}

			}
			title:e_western_empire.holder = {
				every_vassal = {
					limit = {
						is_ai = yes
						culture = {
							has_cultural_pillar = heritage_calradian
						}
					}
					save_temporary_scope_as = wempire_game_start_vassal
					add_trait = ck_militarist
					if = {
						limit = {
							title:e_western_empire.holder = {
								NOT = {
									is_rightful_liege_of = scope:wempire_game_start_vassal
								}
							}
						}
						vassal_contract_set_obligation_level = { type = special_contract level = 5 }
					}
				}
			}
		}

		### EP3 SETUP ###
		if = {
			limit = { has_ep3_dlc_trigger = yes }
			### EP3 LAAMP SETUP ###
			# Resources.
			every_independent_ruler = {
				limit = { is_landless_adventurer = yes }
				# Cash.
				add_gold = {
					value = {
						value = 0
						add = prestige
						add = piety
						divide = 10
					}
				}
				save_temporary_scope_as = adventurer_scope
				# Set CoA
				primary_title = { set_coa = scope:adventurer_scope.house }
				# Cleanup characters
				every_councillor = {
					if = {
						limit = {
							NOR = {
								has_council_position = councillor_court_chaplain
								has_council_position = councillor_spouse
							}
						}
						scope:adventurer_scope = {
							fire_councillor = prev
						}
						remove_opinion = {
							modifier = fired_from_council_opinion
							target = scope:adventurer_scope
						}
					}
					else_if = {
						limit = {
							NOR = {
								is_close_or_extended_family_of = prev
								has_relation_lover = prev
								has_relation_friend = prev
								is_consort_of = prev
								has_council_position = councillor_spouse
							}
						}
						death = {
							death_reason = death_vanished
						}
					}
				}
				# Evict everyone who isn't your family from your camp.
				every_courtier = {
					limit = {
						prev = { save_temporary_scope_as = char_temp }
						NOR = {
							dynasty ?= scope:char_temp.dynasty
							is_imprisoned_by = scope:char_temp
							# Plus any relations, who are presumably meant to be here.
							has_important_relationship_with_character_trigger = { CHARACTER = scope:char_temp }
							# Catch bastards and such that may be left over.
							is_close_or_extended_family_of = scope:char_temp
						}
					}
					move_to_pool = yes
				}
				# Courtiers.
				if = {
					limit = {
						AND = {
							is_ai = no
							has_game_rule = ck_backstory_enabled
							is_from_ruler_designer = yes
						}
					}
					trigger_event = ck_backstory.0001
				}
				else = {
					trigger_event = ep3_laamps.1001
				}
			}
			# Starting camp purposes.
			character:jawwal_landless_1 ?= {
				if = {
					limit = { is_alive = yes }
					add_realm_law_skip_effects = camp_purpose_explorers
				}
			}

			character:ember_laamp_1 ?= {
				if = {
					limit = { is_alive = yes }
					add_realm_law_skip_effects = camp_purpose_brigands
				}
			}

			character:west_isle_laamp_barcel ?= {
				if = {
					limit = { is_alive = yes }
					add_realm_law_skip_effects = camp_purpose_brigands
				}
			}

			character:vaegir_laamp_1 ?= {
				if = {
					limit = { is_alive = yes }
					add_realm_law_skip_effects = camp_purpose_mercenaries
				}
			}

			character:boar_laamp_1 ?= {
				if = {
					limit = { is_alive = yes }
					add_realm_law_skip_effects = camp_purpose_mercenaries
				}
			}

			character:brotherhood_laamp_1 ?= {
				if = {
					limit = { is_alive = yes }
					add_realm_law_skip_effects = camp_purpose_brigands
				}
			}

			character:hand_laamp_1 ?= {
				if = {
					limit = { is_alive = yes }
					add_realm_law_skip_effects = camp_purpose_brigands
				}
			}

			character:skold_laamp_1 ?= {
				if = {
					limit = { is_alive = yes }
					add_realm_law_skip_effects = camp_purpose_mercenaries
				}
				if = {
					limit = {
						is_alive = yes
						NOT = {
							has_character_flag = skolderbroda_male_only
						}
					}
					add_character_flag = skolderbroda_male_only
				}
			}

			character:legion_laamp_1 ?= {
				if = {
					limit = { is_alive = yes }
					add_realm_law_skip_effects = camp_purpose_mercenaries
				}
			}

			character:wolf_laamp_1 ?= {
				if = {
					limit = { is_alive = yes }
					add_realm_law_skip_effects = camp_purpose_brigands
				}
			}

			character:beni_laamp_1 ?= {
				if = {
					limit = { is_alive = yes }
					add_realm_law_skip_effects = camp_purpose_brigands
				}
			}

			character:khergit_laamp_1 ?= {
				if = {
					limit = { is_alive = yes }
					add_realm_law_skip_effects = camp_purpose_mercenaries
				}
			}

			character:ghilman_laamp_1 ?= {
				if = {
					limit = { is_alive = yes }
					add_realm_law_skip_effects = camp_purpose_mercenaries
				}
			}

			character:forest_laamp_1 ?= {
				if = {
					limit = { is_alive = yes }
					add_realm_law_skip_effects = camp_purpose_mercenaries
				}
			}

			character:khergit_laamp_2 ?= {
				if = {
					limit = { is_alive = yes }
					add_realm_law_skip_effects = camp_purpose_mercenaries
				}
			}
			character:lakerats_laamp_1 ?= {
				if = {
					limit = { is_alive = yes }
					add_realm_law_skip_effects = camp_purpose_brigands
				}
			}

			character:eleftheroi_laamp_1 ?= {
				if = {
					limit = { is_alive = yes }
					add_realm_law_skip_effects = camp_purpose_mercenaries
				}
			}
			
			every_independent_ruler = {
				limit = { is_landless_adventurer = yes }
				# C... food.
				domicile = { change_provisions = starting_provisions_value }
				# Contracts
				if = {
					limit = { is_ai = no }
					# Set up additional firing contracts.
					player_adventurer_contract_generation_on_wait_in_place_effect = yes
					#generate contracts if you are far away from your previous location
					player_adventurer_contract_generation_on_domicile_moved_effect = yes
				}
				else = {
					create_story = { type = story_adventurer_ai }
					trigger_event = {
						on_action = on_adventurer_ai_new_employer_arrival
						days = { 10 30 }
					}
				}
				# Sort our starting flavourisation.
				if = {
					limit = { has_realm_law = camp_purpose_mercenaries }
					set_variable = flavourise_camp_purpose_mercenaries
				}
				else_if = {
					limit = { has_realm_law = camp_purpose_wanderers }
					set_variable = flavourise_camp_purpose_wanderers
				}
				else_if = {
					limit = { has_realm_law = camp_purpose_scholars }
					set_variable = flavourise_camp_purpose_scholars
				}
				else_if = {
					limit = { has_realm_law = camp_purpose_explorers }
					set_variable = flavourise_camp_purpose_explorers
				}
				else_if = {
					limit = { has_realm_law = camp_purpose_brigands }
					set_variable = flavourise_camp_purpose_brigands
				}
				else_if = {
					limit = { has_realm_law = camp_purpose_legitimists }
					set_variable = flavourise_camp_purpose_legitimists
				}
				# And tally our numbers for performance purposes.
				add_to_global_variable_list = {
					name = laamps_tally
					target = this.primary_title
				}
            }
			### EP3 ADMIN SETUP ###
			every_independent_ruler = {
				limit = { government_allows = administrative }
				save_scope_as = top_liege
				### EP3 NOBLE FAMILIES & DOMICILE SETUP ###
				random_held_title = { # May be removed once every_noble_family includes liege (TIT-51212)
					limit = { is_noble_family_title = yes }
					set_coa = scope:top_liege.house
				}
				every_noble_family = {
					# Ensure Noble Family CoA match House
					set_coa = holder.house
					# Ensure holders of historical noble family titles are the default house heads
					holder ?= {
						save_scope_as = nf_holder
						if = {
							limit = { is_landed = yes }
							capital_province = { save_scope_as = domicile_location }
						}
						# TODO_CD_EP3: remove once TIT-51212 is resolved and confirmed
						house ?= {
							if = {
								limit = { house_head != scope:nf_holder }
								set_house_head = scope:nf_holder
							}
						}
					}
					set_color_from_title = scope:nf_holder.capital_county
				}
			}
		}
		if = {
			limit = {
				has_game_rule = ck_landed_backstory_enabled
			}
			every_ruler = {
				limit = {
					AND = {
						is_landless_adventurer = no 
						is_from_ruler_designer = yes
						is_ai = no
					}
				}	
				trigger_event = ck_backstory.0001
			}
		}
		# Byzantium naming
		# title:e_calradian_empire = {
		# 	if = {
		# 		limit = {
		# 			has_game_rule = eastern_rome_name_of_byzantium
		# 		}
		# 		set_title_name = e_eastern_roman_empire
		# 	}
		# 	else_if = {
		# 		limit = {
		# 			has_game_rule = roman_empire_name_of_byzantium
		# 		}
		# 		set_title_name = e_roman_empire
		# 	}
		# 	else_if = {
		# 		limit = {
		# 			has_game_rule = romania_name_of_byzantium
		# 		}
		# 		set_title_name = e_romania_empire
		# 	}
		# 	else_if = {
		# 		limit = {
		# 			has_game_rule = empire_of_the_greeks_name_of_byzantium
		# 		}
		# 		set_title_name = e_empire_of_the_greeks
		# 	}
		# 	else_if = {
		# 		limit = {
		# 			has_game_rule = rhomaion_name_of_byzantium
		# 		}
		# 		set_title_name = e_rhomaion
		# 	}
		# 	else_if = {
		# 		limit = {
		# 			has_game_rule = unholy_roman_empire_name_of_byzantium
		# 		}
		# 		set_title_name = e_unholy_roman_empire
		# 	}
		# }
		# Saharan stuff.
		every_county_in_region = {
			region = custom_sahara_proper
			# Every county is in the region, not every province of every county, so we go to county to avoid iterating over every world province _then_ check which ones are in the region.
			every_county_province = { apply_saharan_provisions_debuff_effect = yes }
		}
		# 1066 Buildings
		if = {
			limit = {
				game_start_date >= 976.8.10
				game_start_date < 1178.10.1
			}
			every_province = {
				limit = {
					has_holding = yes
				}
				generate_building = yes
				brewery_counter_start_effect = yes
			}
			every_domicile = {
				if = {
					limit = {
						owner ?= { is_alive = yes }
						is_domicile_type = estate
					}
					add_domicile_building = estate_main_02
					random_list = {
						10 = {
							add_domicile_building = temple_small_01
						}
						10 = {
							add_domicile_building = barracks_01
						}
						10 = {
							add_domicile_building = watchtower_01
						}
						10 = {
							add_domicile_building = vineyard_01
						}
						10 = {
							add_domicile_building = guardhouse_01
						}
						10 = {
							add_domicile_building = garden_01
						}
					}
					random_list = {
						10 = {
							add_domicile_building = storage_01
						}
						10 = {
							add_domicile_building = grain_field_01
						}
						10 = {
							add_domicile_building = stable_01
						}
						10 = {
							add_domicile_building = workshop_01
						}
						10 = {
							add_domicile_building = market_01
						}
						10 = {
							add_domicile_building = grazing_land_01
						}
						10 = {
							add_domicile_building = olive_01
						}
					}
					random_list = {
						10 = {
							add_domicile_building = living_quarters_01
						}
						10 = {
							add_domicile_building = trophy_room_01
						}
						10 = {
							add_domicile_building = office_01
						}
						10 = {
							add_domicile_building = courtyard_01
						}
						10 = {
							add_domicile_building = prison_01
						}
						10 = {
							add_domicile_building = servants_quarters_01
						}
						10 = {
							add_domicile_building = library_01
						}
						10 = {
							add_domicile_building = bath_01
						}
						10 = {
							add_domicile_building = guest_room_01
						}
						10 = {
							add_domicile_building = wine_cellar_01
						}
					}
				}
			}
		}
		# 1178 Buildings
		if = {
			limit = {
				game_start_date >= 1178.10.1
			}
			every_province = {
				limit = {
					has_holding = yes
				}
				generate_building = yes
				generate_building = yes
				generate_building = yes
				generate_building = yes
				generate_building = yes
				generate_building = yes
				if = {
					limit = {
						county.development_level >= 8
					}
					generate_building = yes
					generate_building = yes
				}
				if = {
					limit = {
						county.development_level >= 10
					}
					generate_building = yes
				}
				if = {
					limit = {
						county.development_level >= 12
					}
					generate_building = yes
				}
				if = {
					limit = {
						county.development_level >= 14
					}
					generate_building = yes
					generate_building = yes
				}
				if = {
					limit = {
						county.development_level >= 16
					}
					generate_building = yes
				}
				if = {
					limit = {
						county.development_level >= 18
					}
					generate_building = yes
				}
				if = {
					limit = {
						county.development_level >= 20
					}
					generate_building = yes
				}
				if = {
					limit = {
						county.development_level >= 25
					}
					generate_building = yes
					generate_building = yes
					generate_building = yes
				}
				brewery_counter_start_effect = yes
			}
			every_domicile = {
				#if = { # Left in if we want adventurers to spawn with stuff
				#	limit = {
				#		is_domicile_type = camp
				#	}
				#	add_domicile_building = camp_main_02
				#	add_domicile_building = camp_main_03
				#	random_list = {
				#		10 = {
				#			add_domicile_building = supply_tent_01
				#			add_domicile_building = supply_tent_02
				#			random_list = {
				#				10 = {
				#					add_domicile_building = supply_tent_sutler
				#				}
				#				10 = {
				#					add_domicile_building = supply_tent_mender
				#				}
				#				10 = {
				#					add_domicile_building = supply_tent_smithy
				#				}
				#				10 = {
				#					add_domicile_building = supply_tent_arsenal
				#				}
				#			}
				#		}
				#		10 = {
				#			add_domicile_building = barber_tent_01
				#			add_domicile_building = barber_tent_02
				#			random_list = {
				#				10 = {
				#					add_domicile_building = barber_tent_surgeons_tools
				#				}
				#				10 = {
				#					add_domicile_building = barber_tent_dentists_tools
				#				}
				#				10 = {
				#					add_domicile_building = barber_tent_torturers_tools
				#				}
				#			}
				#		}
				#		10 = {
				#			add_domicile_building = baggage_train_01
				#			add_domicile_building = baggage_train_02
				#			random_list = {
				#				10 = {
				#					add_domicile_building = baggage_train_ample_steeds
				#				}
				#				10 = {
				#					add_domicile_building = baggage_train_porters
				#				}
				#				10 = {
				#					add_domicile_building = baggage_train_trackers
				#				}
				#				10 = {
				#					add_domicile_building = baggage_train_kennel
				#				}
				#			}
				#		}
				#	}
				#	random_list = {
				#		10 = {
				#			add_domicile_building = mess_tent_01
				#			add_domicile_building = mess_tent_02
				#			random_list = {
				#				10 = {
				#					add_domicile_building = mess_tent_herbalists
				#				}
				#				10 = {
				#					add_domicile_building = mess_tent_brewers
				#				}
				#				10 = {
				#					add_domicile_building = mess_tent_curers
				#				}
				#				10 = {
				#					add_domicile_building = mess_tent_bakers
				#				}
				#				10 = {
				#					add_domicile_building = mess_tent_cooks
				#				}
				#			}
				#		}
				#		10 = {
				#			add_domicile_building = camp_fire_01
				#			add_domicile_building = camp_fire_02
				#			random_list = {
				#				10 = {
				#					add_domicile_building = camp_fire_trailing_musicians
				#				}
				#				10 = {
				#					add_domicile_building = camp_fire_wandering_poets
				#				}
				#				10 = {
				#					add_domicile_building = camp_fire_capering_fools
				#				}
				#				10 = {
				#					add_domicile_building = camp_fire_libations_for_the_lost
				#				}
				#			}
				#		}
				#	}
				#	random_list = {
				#		10 = {
				#			add_domicile_building = camp_perimeter_01
				#			add_domicile_building = camp_perimeter_02
				#			random_list = {
				#				10 = {
				#					add_domicile_building = camp_perimeter_good_siting
				#				}
				#				10 = {
				#					add_domicile_building = camp_perimeter_fixed_layout
				#				}
				#			}
				#		}
				#		10 = {
				#			add_domicile_building = proving_grounds_01
				#			add_domicile_building = proving_grounds_02
				#		}
				#	}
				#}
				if = {
					limit = {
						is_domicile_type = estate
					}
					add_domicile_building = estate_main_02
					add_domicile_building = estate_main_03
					random_list = {
						10 = {
							add_domicile_building = temple_small_01
							add_domicile_building = temple_small_02
						}
						10 = {
							add_domicile_building = barracks_01
							add_domicile_building = barracks_02
						}
						10 = {
							add_domicile_building = watchtower_01
							add_domicile_building = watchtower_02
						}
						10 = {
							add_domicile_building = vineyard_01
							add_domicile_building = vineyard_02
						}
					}
					random_list = {
						10 = {
							add_domicile_building = guardhouse_01
							add_domicile_building = guardhouse_02
						}
						10 = {
							add_domicile_building = garden_01
							add_domicile_building = garden_02
						}
						10 = {
							add_domicile_building = storage_01
							add_domicile_building = storage_02
						}
						10 = {
							add_domicile_building = grain_field_01
							add_domicile_building = grain_field_02
						}
					}
					random_list = {
						10 = {
							add_domicile_building = stable_01
							add_domicile_building = stable_02
						}
						10 = {
							add_domicile_building = workshop_01
							add_domicile_building = workshop_02
						}
						10 = {
							add_domicile_building = market_01
							add_domicile_building = market_02
						}
						10 = {
							add_domicile_building = grazing_land_01
							add_domicile_building = grazing_land_02
						}
						10 = {
							add_domicile_building = olive_01
							add_domicile_building = olive_02
						}
					}
					random_list = {
						10 = {
							add_domicile_building = living_quarters_01
							add_domicile_building = living_quarters_02
						}
						10 = {
							add_domicile_building = trophy_room_01
							add_domicile_building = trophy_room_02
						}
						10 = {
							add_domicile_building = office_01
							add_domicile_building = office_02
						}
					}
					random_list = {
						10 = {
							add_domicile_building = servants_quarters_01
							add_domicile_building = servants_quarters_02
						}
						10 = {
							add_domicile_building = library_01
							add_domicile_building = library_02
						}
						10 = {
							add_domicile_building = bath_01
							add_domicile_building = bath_02
						}
					}
					random_list = {
						10 = {
							add_domicile_building = guest_room_01
							add_domicile_building = guest_room_02
						}
						10 = {
							add_domicile_building = wine_cellar_01
							add_domicile_building = wine_cellar_02
						}
						10 = {
							add_domicile_building = courtyard_01
							add_domicile_building = courtyard_02
						}
						10 = {
							add_domicile_building = prison_01
							add_domicile_building = prison_02
						}
					}
				}
			}
		}
		if = {
			limit = {
				game_start_date >= 1084.5.1
			}
			title:d_laamp_embers = { set_coa = laamp_embers }
			title:d_laamp_boar = { set_coa = laamp_boars }
			title:d_laamp_vaegirs = { set_coa = laamp_vaegirs }
			title:d_laamp_brotherhood = { set_coa = laamp_brotherhood_coa }
			title:d_laamp_hand = { set_coa = laamp_hand_coa }
			title:d_laamp_skold = { set_coa = laamp_skold_coa }
			title:d_laamp_legion = { set_coa = laamp_legion_coa }
			title:d_laamp_wolfskins = { set_coa = laamp_wolfskins_coa }
			title:d_laamp_shumsan = { set_coa = laamp_jawwal_coa }
			title:d_laamp_beni = { set_coa = laamp_beni_coa }
			title:d_laamp_ghilman = { set_coa = ghilman_coa }
			title:d_laamp_lakerats = { set_coa = lakerats_coa }
			title:d_laamp_karakhergit = { set_coa = karakhergit_coa }
			title:d_laamp_eleftheroi = { set_coa = eleftheroi_coa }
			title:d_laamp_forest_people = { set_coa = forest_people_coa }
			title:d_laamp_khergit_1 = { set_coa = laamp_khergit_1 }
		}
		# Purge family titles if Admin isn't enabled
		if = {
			limit = {
				NOT = { has_dlc_feature = roads_to_power }
			}
			every_ruler = {
				save_temporary_scope_as = this_ruler
				every_held_title = {
					limit = {
						has_title_law = noble_family_succession_law
					}
					scope:this_ruler = {
						destroy_title = prev
					}
				}
			}
		}
		# Conquerors
		# character:144133 ?= {
		# 	if = {
		# 		limit = {
		# 			is_alive = yes
		# 			NOT = { has_game_rule = no_conquerors_frequency }
		# 		}
		# 		create_story = story_conqueror
		# 	}
		# }
		# character:144141 ?= {
		# 	if = {
		# 		limit = {
		# 			is_alive = yes
		# 			NOT = { has_game_rule = no_conquerors_frequency }
		# 		}
		# 		create_story = story_conqueror
		# 	}
		# }
		# character:175080 ?= {
		# 	if = {
		# 		limit = {
		# 			is_alive = yes
		# 			NOT = { has_game_rule = no_conquerors_frequency }
		# 		}
		# 		create_story = story_conqueror
		# 	}
		# }
		# character:226000 ?= {
		# 	if = {
		# 		limit = {
		# 			is_alive = yes
		# 			NOT = { has_game_rule = no_conquerors_frequency }
		# 		}
		# 		create_story = story_conqueror
		# 	}
		# }
	}

	events = {
		game_rule.1000	#Autopopulate families.
		# game_rule.1011	#Hungarian Migration management.
		historical_artifacts.0023			# Historical Artifacts Generator
	}


}

#$CHARACTER$.house = {
#			save_scope_as = character_house
#
#			add_unity_value = {
#				value = {
#					value = $VALUE$
#					if = { # House heads have a larger impact on unity
#						limit = { house_head = $CHARACTER$ }
#						multiply = unity_house_head_multiplier_value
#					}
#				}
#				character = $CHARACTER$
#				desc = $DESC$
#			}
#		}
