# Historical Artifacts Creation #

set_artifact_rarity_common = {
	save_scope_value_as = {
		name = quality
		value = 15
	}
	save_scope_value_as = {
		name = wealth
		value = 15
	}
}

set_artifact_rarity_masterwork = {
	save_scope_value_as = {
		name = quality
		value = 30
	}
	save_scope_value_as = {
		name = wealth
		value = 30
	}
}

set_artifact_rarity_famed = {
	save_scope_value_as = {
		name = quality
		value = 70
	}
	save_scope_value_as = {
		name = wealth
		value = 70
	}
}

set_artifact_rarity_illustrious = {
	save_scope_value_as = {
		name = quality
		value = 100
	}
	save_scope_value_as = {
		name = wealth
		value = 100
	}
}

create_artifact_pedestal_christian_relic_effect_hist = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	get_artifact_quality_effect = yes
	get_artifact_wealth_effect = yes

	# Identify which relic it is
	random_list = {
		10 = {
			trigger = {
				OR = {
					faith = faith:darusan
					faith = faith:ember_flame
				}
			}
			save_scope_value_as = {
				name = christian_relic_name
				value = flag:nail
			}
		}
		10 = {
			trigger = {
				OR = {
					faith = faith:darusan
					faith = faith:ember_flame
				}
			}
			save_scope_value_as = {
				name = christian_relic_name
				value = flag:thorn
			}
		}
		10 = {
			trigger = {
				AND = {
					faith = faith:calradic
					NOT = {
						any_artifact = {
							has_variable = christian_sandals
						}
					}
				}
			}
			save_scope_value_as = {
				name = christian_relic_name
				value = flag:sandals
			}
		}
		10 = {
			trigger = {
				AND = {
					OR = {
						faith = faith:darusan
						faith = faith:ember_flame
					}
					NOT = {
						any_artifact = {
							has_variable = christian_girdle
						}
					}
				}
			}
			save_scope_value_as = {
				name = christian_relic_name
				value = flag:girdle
			}
		}
		10 = {
			trigger = {
				NOT = {
					any_artifact = {
						has_variable = christian_lance
					}
				}
			}
			save_scope_value_as = {
				name = christian_relic_name
				value = flag:lance
			}
		}
		10 = {
			trigger = {
				AND = {
					OR = {
						faith = faith:darusan
						faith = faith:ember_flame
					}
					NOT = {
						any_artifact = {
							has_variable = christian_skull
						}
					}
				}
			}
			save_scope_value_as = {
				name = christian_relic_name
				value = flag:skull
			}
		}
		10 = {
			trigger = {
				AND = {
					OR = {
						faith = faith:western_calradic
						faith = faith:hetjur
					}
					NOT = {
						any_artifact = {
							count > 5
							has_variable = christian_arm
						}
					}
				}
			}
			save_scope_value_as = {
				name = christian_relic_name
				value = flag:arm
			}
		}
		10 = {
			trigger = {
				AND = {
					OR = {
						faith = faith:western_calradic
						faith = faith:hetjur
					}
					NOT = {
						any_artifact = {
							has_variable = christian_loincloth
						}
					}
				}
			}
			save_scope_value_as = {
				name = christian_relic_name
				value = flag:loincloth
			}
		}
		10 = {
			trigger = {
				OR = {
					faith = faith:darusan
					faith = faith:ember_flame
				}
			}
			save_scope_value_as = {
				name = christian_relic_name
				value = flag:cross
			}
		}
		10 = {
			trigger = {
				AND = {
					OR = {
						faith = faith:darusan
						faith = faith:ember_flame
					}
					NOT = {
						any_artifact = {
							has_variable = christian_crown
						}
					}
				}
			}
			save_scope_value_as = {
				name = christian_relic_name
				value = flag:crown
			}
		}
		10 = {
			trigger = {
				AND = {
					OR = {
						faith = faith:darusan
						faith = faith:ember_flame
					}
					NOT = {
						any_artifact = {
							has_variable = christian_veil
						}
					}
				}
			}
			save_scope_value_as = {
				name = christian_relic_name
				value = flag:veronica
			}
		}
	}

	# Create the artifact
	if = {
		limit = {
			exists = scope:christian_relic_name
			scope:christian_relic_name = flag:lance
		}
		set_artifact_rarity_illustrious = yes
		create_artifact = {	
			name = artifact_pedestal_spear_destiny_name_ck
			description = artifact_pedestal_spear_destiny_ck
			type = pedestal
			template = christian_artifact_template
			visuals = pedestal_longinus
			wealth = scope:wealth
			quality = scope:quality
			history = {
				type = created_before_history
			}
			modifier = artifact_placeholder_modifier
			save_scope_as = newly_created_artifact
			decaying = no
		}
	}
	else_if = {
		limit = {
			exists = scope:christian_relic_name
			OR = {
				scope:christian_relic_name = flag:sandals
				scope:christian_relic_name = flag:girdle
				scope:christian_relic_name = flag:loincloth
				scope:christian_relic_name = flag:crown
				scope:christian_relic_name = flag:veronica
			}
		}
		set_artifact_rarity_illustrious = yes
		create_artifact = {
			name = artifact_pedestal_reliquary_christian_name
			description = artifact_pedestal_reliquary_christian_description
			type = pedestal
			wealth = scope:wealth
			quality = scope:quality
			template = christian_artifact_template
			visuals = pedestal_christian_relic
			history = {
				type = created_before_history
			}
			modifier = artifact_placeholder_modifier
			save_scope_as = newly_created_artifact
		}
	}
	else_if = {
		limit = {
			OR = {
				scope:owner.faith = faith:darusan
				scope:owner.faith = faith:ember_flame
			}
			exists = scope:christian_relic_name
			scope:christian_relic_name = flag:skull
		}
		create_artifact = {
			name = artifact_pedestal_reliquary_christian_name
			description = artifact_pedestal_reliquary_christian_description
			type = pedestal
			wealth = scope:wealth
			quality = scope:quality
			template = christian_artifact_template
			visuals = human_skull
			history = {
				type = created_before_history
			}
			modifier = artifact_placeholder_modifier
			save_scope_as = newly_created_artifact
		}
	}
	else = {
		create_artifact = {
			name = artifact_pedestal_reliquary_christian_name
			description = artifact_pedestal_reliquary_christian_description
			type = pedestal
			wealth = scope:wealth
			quality = scope:quality
			template = christian_artifact_template
			visuals = reliquary
			history = {
				type = created_before_history
			}
			modifier = artifact_placeholder_modifier
			save_scope_as = newly_created_artifact
		}
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = {
			name = relic
			value = flag:christian
		}
		if = {
			limit = {
				exists = scope:christian_relic_name
				scope:christian_relic_name = flag:veronica
			}
			set_variable = christian_veil
		}
		else_if = {
			limit = {
				exists = scope:christian_relic_name
				scope:christian_relic_name = flag:crown
			}
			set_variable = christian_crown
		}
		else_if = {
			limit = {
				exists = scope:christian_relic_name
				scope:christian_relic_name = flag:loincloth
			}
			set_variable = christian_loincloth
		}
		else_if = {
			limit = {
				exists = scope:christian_relic_name
				scope:christian_relic_name = flag:lance
			}
			set_variable = christian_lance
		}
		else_if = {
			limit = {
				exists = scope:christian_relic_name
				scope:christian_relic_name = flag:arm
			}
			set_variable = christian_arm
		}
		else_if = {
			limit = {
				exists = scope:christian_relic_name
				scope:christian_relic_name = flag:sandals
			}
			set_variable = christian_sandals
		}
		else_if = {
			limit = {
				exists = scope:christian_relic_name
				scope:christian_relic_name = flag:girdle
			}
			set_variable = christian_girdle
		}
		else_if = {
			limit = {
				exists = scope:christian_relic_name
				scope:christian_relic_name = flag:skull
			}
			set_variable = christian_skull
		}
		add_scaled_artifact_modifier_piety_effect = yes
		add_scaled_artifact_modifier_grandeur_small_effect = yes
		if = {
			limit = {
				OR = {
					rarity = famed
					rarity = illustrious
				}
			}
			add_2_scaled_artifact_modifier_devotion_effect = yes
			
		}
		else = {
			add_scaled_artifact_modifier_devotion_effect = yes
		}
		add_artifact_modifier = artifact_monthly_prestige_penalty_modifier #overwrite default creation modifier
		save_scope_as = epic
	}
}

create_artifact_pedestal_islamic_relic_effect_hist = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	get_artifact_quality_effect = yes
	get_artifact_wealth_effect = yes

	# Identify which relic it is
	random_list = {
		10 = {
			save_scope_value_as = {
				name = islam_relic_name
				value = flag:hair
			}
		}
		10 = {
			trigger = {
				NOT = {
					any_artifact = {
						has_variable = islam_cloak
					}
				}
			}
			save_scope_value_as = {
				name = islam_relic_name
				value = flag:cloak
			}
		}
		10 = {
			trigger = {
				NOT = {
					any_artifact = {
						has_variable = islam_hand
					}
				}
			}
			save_scope_value_as = {
				name = islam_relic_name
				value = flag:hand
			}
		}
		10 = {
			trigger = {
				NOT = {
					any_artifact = {
						has_variable = islam_keys
					}
				}
			}
			save_scope_value_as = {
				name = islam_relic_name
				value = flag:keys
			}
		}
		10 = {
			save_scope_value_as = {
				name = islam_relic_name
				value = flag:tooth
			}
		}
		10 = {
			trigger = {
				NOT = {
					any_artifact = {
						has_variable = islam_seal
					}
				}
			}
			save_scope_value_as = {
				name = islam_relic_name
				value = flag:seal
			}
		}
		10 = {
			trigger = {
				NOT = {
					any_artifact = {
						has_variable = islam_banner
					}
				}
			}
			save_scope_value_as = {
				name = islam_relic_name
				value = flag:banner
			}
		}
	}

	# Create the artifact
	if = {
		limit = {
			exists = scope:islam_relic_name
			OR = {
				scope:islam_relic_name = flag:cloak
				scope:islam_relic_name = flag:hand
				scope:islam_relic_name = flag:keys
				scope:islam_relic_name = flag:seal
			}
		}
		set_artifact_rarity_illustrious = yes
		create_artifact = {	
			name = artifact_pedestal_reliquary_aserai_name
			description = artifact_pedestal_reliquary_aserai_description
			type = pedestal
			template = islam_artifact_template
			visuals = pedestal_islamic_relic
			wealth = scope:wealth
			quality = scope:quality
			history = {
				type = created_before_history
			}
			modifier = artifact_placeholder_modifier
			save_scope_as = newly_created_artifact
		}
	}	
	else = {
		create_artifact = {	
			name = artifact_pedestal_reliquary_aserai_name
			description = artifact_pedestal_reliquary_aserai_description
			type = pedestal
			template = islam_artifact_template
			visuals = reliquary
			wealth = scope:wealth
			quality = scope:quality
			history = {
				type = created_before_history
			}
			modifier = artifact_placeholder_modifier
			save_scope_as = newly_created_artifact
		}
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = {
			name = relic
			value = flag:islamic
		}
		add_scaled_artifact_modifier_piety_effect = yes
		add_scaled_artifact_modifier_grandeur_small_effect = yes
		if = {
			limit = {
				OR = {
					rarity = famed
					rarity = illustrious
				}
			}
			add_2_scaled_artifact_modifier_devotion_effect = yes
			
		}
		else = {
			add_scaled_artifact_modifier_devotion_effect = yes
		}
		add_artifact_modifier = artifact_monthly_prestige_penalty_modifier #overwrite default creation modifier
		if = {
			limit = {
				exists = scope:islam_relic_name
				scope:islam_relic_name = flag:cloak
			}
			set_variable = islam_cloak
		}
		else_if = {
			limit = {
				exists = scope:islam_relic_name
				scope:islam_relic_name = flag:seal
			}
			set_variable = islam_seal
		}
		else_if = {
			limit = {
				exists = scope:islam_relic_name
				scope:islam_relic_name = flag:keys
			}
			set_variable = islam_keys
		}
		else_if = {
			limit = {
				exists = scope:islam_relic_name
				scope:islam_relic_name = flag:hand
			}
			set_variable = islam_hand
		}
		else_if = {
			limit = {
				exists = scope:islam_relic_name
				scope:islam_relic_name = flag:banner
			}
			set_variable = islam_banner
		}
		add_scaled_artifact_modifier_devotion_effect = yes
		save_scope_as = epic
	}
}

create_artifact_pedestal_buddhism_relic_effect_hist = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	get_artifact_quality_effect = yes
	get_artifact_wealth_effect = yes

	# Identify which relic it is
	random_list = {
		10 = {
			save_scope_value_as = {
				name = buddhism_relic_name
				value = flag:tooth
			}
		}
		10 = {
			save_scope_value_as = {
				name = buddhism_relic_name
				value = flag:bone
			}
		}
		10 = {
			trigger = {
				NOT = {
					any_artifact = {
						has_variable = buddhism_robe
					}
				}
			}
			save_scope_value_as = {
				name = buddhism_relic_name
				value = flag:robe
			}
		}
		10 = {
			trigger = {
				NOT = {
					any_artifact = {
						has_variable = buddhism_bowl
					}
				}
			}
			save_scope_value_as = {
				name = buddhism_relic_name
				value = flag:bowl
			}
		}
		10 = {
			trigger = {
				NOT = {
					any_artifact = {
						has_variable = buddhism_tongue
					}
				}
			}
			save_scope_value_as = {
				name = buddhism_relic_name
				value = flag:tongue
			}
		}
		10 = {
			save_scope_value_as = {
				name = buddhism_relic_name
				value = flag:hair
			}
		}
		10 = {
			save_scope_value_as = {
				name = buddhism_relic_name
				value = flag:sarira
			}
		}
		10 = {
			save_scope_value_as = {
				name = buddhism_relic_name
				value = flag:bo
			}
		}
	}

	# Create the artifact
	if = {
		limit = {
			exists = scope:buddhism_relic_name
			OR = {
				scope:buddhism_relic_name = flag:robe
				scope:buddhism_relic_name = flag:bowl
				scope:buddhism_relic_name = flag:tongue
			}
		}
		set_artifact_rarity_illustrious = yes
		create_artifact = {	
			name = artifact_pedestal_reliquary_buddhism_name
			description = artifact_pedestal_reliquary_buddhism_description
			type = pedestal
			template = battanian_x_artifact_template
			visuals = pedestal_buddhism_relic
			wealth = scope:wealth
			quality = scope:quality
			history = {
				type = created_before_history
			}
			modifier = artifact_placeholder_modifier
			save_scope_as = newly_created_artifact
		}
	}
	else_if = {
		limit = {
			exists = scope:buddhism_relic_name
			scope:buddhism_relic_name = flag:tooth
		}
		set_artifact_rarity_illustrious = yes
		create_artifact = {	
			name = artifact_pedestal_reliquary_buddhism_name
			description = artifact_pedestal_reliquary_buddhism_description
			type = pedestal
			template = battanian_x_artifact_template
			visuals = buddha_tooth
			wealth = scope:wealth
			quality = scope:quality
			history = {
				type = created_before_history
			}
			modifier = artifact_placeholder_modifier
			save_scope_as = newly_created_artifact
		}
	}
	else = {
		create_artifact = {	
			name = artifact_pedestal_reliquary_buddhism_name
			description = artifact_pedestal_reliquary_buddhism_description
			type = pedestal
			template = battanian_x_artifact_template
			visuals = pedestal_buddhism_relic
			wealth = scope:wealth
			quality = scope:quality
			history = {
				type = created_before_history
			}
			modifier = artifact_placeholder_modifier
			save_scope_as = newly_created_artifact
		}
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = {
			name = relic
			value = flag:buddhism
		}
		if = {
			limit = {
				exists = scope:buddhism_relic_name
				scope:buddhism_relic_name = flag:tongue
			}
			set_variable = buddhism_tongue
		}
		else_if = {
			limit = {
				exists = scope:buddhism_relic_name
				scope:buddhism_relic_name = flag:bowl
			}
			set_variable = buddhism_bowl
		}
		else_if = {
			limit = {
				exists = scope:buddhism_relic_name
				scope:buddhism_relic_name = flag:robe
			}
			set_variable = buddhism_robe
		}
		add_scaled_artifact_modifier_piety_effect = yes
		add_scaled_artifact_modifier_grandeur_small_effect = yes
		if = {
			limit = {
				OR = {
					rarity = famed
					rarity = illustrious
				}
			}
			add_2_scaled_artifact_modifier_devotion_effect = yes
			
		}
		else = {
			add_scaled_artifact_modifier_devotion_effect = yes
		}
		add_artifact_modifier = artifact_monthly_prestige_penalty_modifier #overwrite default creation modifier
		save_scope_as = epic
	}
}

create_artifact_pedestal_branch_relic_zoroastr_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	set_artifact_rarity_illustrious = yes

	# Identify which relic it is
	random_list = {
		10 = {
			save_scope_value_as = {
				name = branch_name
				value = flag:haoma
			}
		}
		10 = {
			save_scope_value_as = {
				name = branch_name
				value = flag:cypress
			}
		}
	}

	# Create the artifact
	create_artifact = {	
		name = artifact_pedestal_branch_name
		description = artifact_pedestal_branch_description
		type = pedestal
		visuals = pedestal_branch_relic_zoroastr
		wealth = scope:wealth
		quality = scope:quality
		template = branch_zoroastr_template
		history = {
			type = created_before_history
		}
		modifier = artifact_placeholder_modifier
		save_scope_as = newly_created_artifact
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = {
			name = relic
			value = flag:zoroastr
		}
		add_scaled_artifact_modifier_piety_effect = yes
		add_scaled_artifact_modifier_grandeur_small_effect = yes
		if = {
			limit = {
				OR = {
					rarity = famed
					rarity = illustrious
				}
			}
			add_2_scaled_artifact_modifier_devotion_effect = yes
			
		}
		else = {
			add_scaled_artifact_modifier_devotion_effect = yes
		}
		add_artifact_modifier = artifact_monthly_prestige_penalty_modifier #overwrite default creation modifier
		save_scope_as = epic
	}
}

create_artifact_pedestal_branch_relic_germanic_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	set_artifact_rarity_illustrious = yes

	# Identify which relic it is
	random_list = {
		10 = {
			save_scope_value_as = {
				name = branch_name
				value = flag:thor
			}
		}
		10 = {
			save_scope_value_as = {
				name = branch_name
				value = flag:uppsala
			}
		}
	}

	# Create the artifact
	create_artifact = {	
		name = artifact_pedestal_branch_name
		description = artifact_pedestal_branch_description
		type = pedestal
		template = branch_germanic_template
		visuals = pedestal_branch_relic_germanic
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created_before_history
		}
		modifier = artifact_placeholder_modifier
		save_scope_as = newly_created_artifact
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = {
			name = relic
			value = flag:germanic
		}
		add_scaled_artifact_modifier_piety_effect = yes
		add_scaled_artifact_modifier_grandeur_small_effect = yes
		if = {
			limit = {
				OR = {
					rarity = famed
					rarity = illustrious
				}
			}
			add_2_scaled_artifact_modifier_devotion_effect = yes
			
		}
		else = {
			add_scaled_artifact_modifier_devotion_effect = yes
		}
		save_scope_as = epic
	}
}

create_artifact_pedestal_branch_relic_slavic_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	set_artifact_rarity_illustrious = yes

	save_scope_value_as = {
		name = branch_name
		value = flag:alatyr
	}

	# Create the artifact
	create_artifact = {	
		name = artifact_pedestal_branch_name
		description = artifact_pedestal_branch_description
		type = pedestal
		template = branch_slavic_template
		visuals = pedestal_branch_relic_slavic
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created_before_history
		}
		modifier = artifact_placeholder_modifier
		save_scope_as = newly_created_artifact
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = {
			name = relic
			value = flag:slavic
		}
		add_scaled_artifact_modifier_piety_effect = yes
		add_scaled_artifact_modifier_grandeur_small_effect = yes
		if = {
			limit = {
				OR = {
					rarity = famed
					rarity = illustrious
				}
			}
			add_2_scaled_artifact_modifier_devotion_effect = yes
			
		}
		else = {
			add_scaled_artifact_modifier_devotion_effect = yes
		}
		save_scope_as = epic
	}
}

# No Africa artifacts... yet

create_artifact_pedestal_branch_relic_hinduism_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	set_artifact_rarity_illustrious = yes

	save_scope_value_as = {
		name = branch_name
		value = flag:kalpavriksha
	}

	# Create the artifact
	create_artifact = {	
		name = artifact_pedestal_branch_name
		description = artifact_pedestal_branch_description
		type = pedestal
		template = branch_hinduism_template
		visuals = pedestal_branch_relic_hinduism
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created_before_history
		}
		modifier = artifact_placeholder_modifier
		save_scope_as = newly_created_artifact
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = {
			name = relic
			value = flag:hinduism
		}
		add_scaled_artifact_modifier_piety_effect = yes
		add_scaled_artifact_modifier_grandeur_small_effect = yes
		if = {
			limit = {
				OR = {
					rarity = famed
					rarity = illustrious
				}
			}
			add_2_scaled_artifact_modifier_devotion_effect = yes
			
		}
		else = {
			add_scaled_artifact_modifier_devotion_effect = yes
		}
		save_scope_as = epic
	}
}

create_artifact_pedestal_branch_relic_general_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	set_artifact_rarity_illustrious = yes

	save_scope_value_as = {
		name = branch_name
		value = flag:general
	}

	# Create the artifact
	create_artifact = {	
		name = artifact_pedestal_branch_name
		description = artifact_pedestal_branch_description
		type = pedestal
		template = branch_general_template
		visuals = pedestal_branch_relic_hinduism
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created_before_history
		}
		modifier = artifact_placeholder_modifier
		save_scope_as = newly_created_artifact
	}

	scope:newly_created_artifact = {
		set_variable = {	#This is needed to determine what religion the branch will work for.
			name = relic_religion
			value = $RELIGION$
		}
		set_variable = { name = historical_unique_artifact value = yes }
		add_scaled_artifact_modifier_piety_effect = yes
		add_scaled_artifact_modifier_grandeur_small_effect = yes
		if = {
			limit = {
				OR = {
					rarity = famed
					rarity = illustrious
				}
			}
			add_2_scaled_artifact_modifier_devotion_effect = yes
			
		}
		else = {
			add_scaled_artifact_modifier_devotion_effect = yes
		}
		save_scope_as = epic
	}
}

#Common Artifacts

## No Excalibur in Calradian, if there is then at least have a single legitimate sword.

## No Edmund Head. wtf man?

## No Indian Artifacts

#Masterwork Artifacts

## CK_UPDATE. Future tribal Nahasan artifact
# create_artifact_ibeji_effect = {
# 	# Get the character the artifact is being made for.
# 	$OWNER$ = { save_scope_as = owner }
# 	# Not really used, but if we don't set the scopes we get errors in the feature selection
# 	set_artifact_rarity_masterwork = yes

# 	# Create the artifact
# 	create_artifact = {	
# 		name = artifact_ibeji_name
# 		description = artifact_ibeji_description
# 		template = general_unique_template
# 		type = pedestal
# 		visuals = medium_box
# 		wealth = scope:wealth
# 		quality = scope:quality
# 		history = {
# 			type = created_before_history
# 		}
# 		modifier = ibeji_modifier
# 		save_scope_as = newly_created_artifact
# 	}

# 	scope:newly_created_artifact = {
# 		set_variable = { name = historical_unique_artifact value = yes }
# 		set_variable = ibeji
# 		add_scaled_artifact_modifier_devotion_effect = yes
# 		save_scope_as = epic
# 	}
# }

# create_artifact_chinese_caligraphy_effect = {
# 	# Get the character the artifact is being made for.
# 	$OWNER$ = { save_scope_as = owner }
# 	# Not really used, but if we don't set the scopes we get errors in the feature selection
# 	set_artifact_rarity_masterwork = yes

# 	# Create the artifact
# 	create_artifact = {
# 		type = pedestal
# 		visuals = scroll
# 		wealth = scope:wealth
# 		template = general_unique_template
# 		quality = scope:quality
# 		history = {
# 			type = created_before_history
# 		}
# 		modifier = caligraphy_modifier
# 		save_scope_as = newly_created_artifact
# 		name = artifact_chinese_caligraphy_name
# 		description = artifact_chinese_caligraphy_description
# 	}

# 	scope:newly_created_artifact = {
# 		set_variable = { name = historical_unique_artifact value = yes }
# 		set_variable = chinese_caligraphy
# 		add_2_scaled_artifact_modifier_rulership_effect = yes
# 		save_scope_as = epic
# 	}
# }

# create_artifact_throne_charlemagne_effect = { ### Rename to Throne of Calradios. Left at Charas where he first landed CK_UPDATE
# 	# Get the character the artifact is being made for.
# 	$OWNER$ = { save_scope_as = owner }
# 	# Not really used, but if we don't set the scopes we get errors in the feature selection
# 	set_artifact_rarity_illustrious = yes

# 	# Create the artifact
# 	create_artifact = {	
# 		name = artifact_throne_charlemagne_name
# 		description = artifact_throne_charlemagne_description
# 		type = throne_special
# 		visuals = throne_charlemagne
# 		wealth = scope:wealth
# 		quality = scope:quality
# 		template = throne_charlemagne_template
# 		history = {
# 			type = created
# 			date = 800.12.25
# 			recipient = character:6392 #Karl I the Great
# 			location = province:2092 #Aachen
# 		}
# 		modifier = throne_charlemagne_modifier
# 		save_scope_as = newly_created_artifact
# 		decaying = no
# 	}

# 	scope:newly_created_artifact = {
# 		set_variable = { name = historical_unique_artifact value = yes }
# 		set_variable = charlamagne_throne
# 		# k_lotharingia history copied manually because it is destroyed before 1066
# 		add_artifact_history = {
# 			type = inherited
# 			date = 814.1.2
# 			recipient = character:90095 #Louis I
# 		}
# 		add_artifact_history = {
# 			type = inherited
# 			date = 817.1.1
# 			recipient = character:30227 #Lothair I
# 		}
# 		add_artifact_title_history = {
# 			target = title:e_hre
# 			date = 973.5.7
# 		}
# 		add_scaled_artifact_modifier_majesty_effect = yes
# 		add_scaled_artifact_modifier_rulership_effect = yes
# 		save_scope_as = epic
# 		save_scope_value_as = {
# 			name = throne
# 			value = yes
# 		}
# 	}
# }

# No Solomon


create_artifact_byz_throne_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {	
		name = artifact_byz_throne_name_ck
		description = artifact_byz_throne_description_ck
		type = throne_special
		visuals = ep3_throne_of_solomon
		wealth = scope:wealth
		quality = scope:quality
		template = byz_throne_template
		history = {
			type = created_before_history
		}
		modifier = byz_throne_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		#set_variable = byz_throne_of_solomon
		save_scope_as = epic
		save_scope_value_as = {
			name = throne
			value = yes
		}
		add_artifact_title_history = {
			target = title:e_calradian_empire
			date = 104.3.12
		}
	}
}

create_artifact_throne_scone_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {	
		name = artifact_throne_stone_scone_name_ck
		description = artifact_throne_stone_scone_ck
		type = throne_special
		visuals = throne_scone
		wealth = scope:wealth
		quality = scope:quality
		template = throne_scone_template
		history = {
			type = created_before_history #type = created # CK_BATTANIA CK_UPDATE vvvv
			# date = 239 
			# recipient = character:Battania_UH_1 # Aeril fen Uthelhain (Eventually add a line of Battanian kings CK_UPDATE
			# location = province:245 #Scone
		}
		modifier = throne_scone_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = throne_scone
		save_scope_as = epic
		add_scaled_artifact_modifier_rulership_effect = yes
		save_scope_value_as = {
			name = throne
			value = yes
		}
		add_artifact_title_history = {
			target = title:k_battania
			date = 319.8.4
		}
	}
}



## No Pentapyrgion

## No Monomachus Crown


create_artifact_khanda_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_masterwork = yes

	# Create the artifact
	create_artifact = {	
		name = artifact_khanda_name
		description = artifact_khanda_description
		template = branch_hinduism_template
		type = pedestal
		visuals = wall_khanda_sword
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created_before_history
		}
		modifier = khanda_modifier
		save_scope_as = newly_created_artifact
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = khanda
		set_variable = {
			name = relic
			value = flag:hinduism
		}
		save_scope_as = epic
	}
}

create_artifact_aruval_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_masterwork = yes

	# Create the artifact
	create_artifact = {	
		name = artifact_aruval_name
		description = artifact_aruval_description
		type = pedestal
		visuals = wall_khanda_sword
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created_before_history
		}
		template = branch_hinduism_template
		modifier = aruval_modifier
		save_scope_as = newly_created_artifact
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = aruval
		set_variable = {
			name = relic
			value = flag:hinduism
		}
		save_scope_as = epic
	}
}

create_artifact_cintamani_hindu_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }

	set_artifact_rarity_famed = yes

	# Create the artifact
	create_artifact = {	
		name = artifact_cintamani_name
		description = artifact_cintamani_hindu_description
		type = pedestal
		visuals = rock
		wealth = scope:wealth
		quality = scope:quality
		template = branch_hinduism_template
		history = {
			type = created_before_history
		}
		modifier = cintamani_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = cintamani_hindu
		set_variable = {
			name = relic
			value = flag:hinduism
		}
	}
}

create_artifact_pedestal_shankha_conch_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_famed = yes

	# Create the artifact
	create_artifact = {	
		name = artifact_shankha_conch_name
		description = artifact_shankha_conch_description
		template = branch_hinduism_template
		type = pedestal
		visuals = small_box
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created_before_history
		}
		modifier = shankha_conch_modifier
		save_scope_as = newly_created_artifact
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = conch
		set_variable = {
			name = relic
			value = flag:hinduism
		}
		save_scope_as = epic
	}
}


create_artifact_dagger_of_rostam_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {	
		name = artifact_dagger_of_sam_name
		description = artifact_dagger_of_sam_description
		type = pedestal
		visuals = dagger_court
		template = general_unique_template
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created_before_history
		}
		modifier = rustam_dagger_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = dagger_of_rostam
		save_scope_as = epic
	}
}


create_artifact_zomorrodnegar_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {	
		name = artifact_zomorrodnegar_name
		description = artifact_zomorrodnegar_description
		type = pedestal
		visuals = sword_court
		template = general_unique_template
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created_before_history
		}
		modifier = zomorrodnegar_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = zomorrodnegar
		save_scope_as = epic
	}
}

# create_artifact_kaves_apron_effect = {
# 	# Get the character the artifact is being made for.
# 	$OWNER$ = { save_scope_as = owner }
# 	# Not really used, but if we don't set the scopes we get errors in the feature selection
# 	set_artifact_rarity_illustrious = yes

# 	# Create the artifact
# 	create_artifact = {	
# 		name = artifact_kaves_apron_name
# 		description = artifact_kaves_apron_description
# 		type = wall_big
# 		visuals = banner
# 		visuals_source = dynasty:jamshid
# 		template = general_unique_template
# 		wealth = scope:wealth
# 		quality = scope:quality
# 		history = {
# 			type = created_before_history
# 		}
# 		modifier = kaves_apron_modifier
# 		save_scope_as = newly_created_artifact
# 		decaying = no
# 	}

# 	scope:newly_created_artifact = {
# 		set_variable = { name = historical_unique_artifact value = yes }
# 		set_variable = kaves_apron
# 		save_scope_as = epic
# 	}
# }

create_artifact_afarganyu_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {	
		name = afarganyu_name
		description = artifact_afarganyu_description
		template = branch_zoroastr_template
		type = urn
		visuals = urn
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created_before_history
		}
		modifier = afarganyu_modifier
		save_scope_as = newly_created_artifact
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = {
			name = relic
			value = flag:zoroastr
		}
		save_scope_as = epic
	}
}

create_artifact_pedestal_cup_jamshid_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {	
		name = artifact_pedestal_jamshid_name
		description = artifact_pedestal_cup_jamshid
		type = pedestal
		template = cup_jamshid_template
		visuals = pedestal_cup_jamshid
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created_before_history
		}
		modifier = cup_jamshid_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = cup_jamshid
		save_scope_as = epic
	}
}

#Famed Artifacts

# No REICHSKRONE IN CALRADIA


# create_artifact_wall_banner_edessa_effect = {
# 	# Get the character the artifact is being made for.
# 	$OWNER$ = { save_scope_as = owner }
# 	# Not really used, but if we don't set the scopes we get errors in the feature selection
# 	set_artifact_rarity_illustrious = yes

# 	# Create the artifact
# 	create_artifact = {
# 		name = artifact_wall_big_edessa_name
# 		description = artifact_wall_big_edessa
# 		type = pedestal
# 		visuals = reliquary
# 		wealth = scope:wealth
# 		quality = scope:quality
# 		template = edessa_template
# 		history = {
# 			type = created_before_history
# 			location = province:1458 #Edessa
# 		}
# 		modifier = banner_of_edessa_modifier
# 		save_scope_as = newly_created_artifact
# 		decaying = no
# 	}

# 	scope:newly_created_artifact = {
# 		set_variable = { name = historical_unique_artifact value = yes }
# 		set_variable = banner_edessa
# 		set_variable = {
# 			name = relic
# 			value = flag:christian
# 		}
# 		save_scope_as = epic
# 	}
# }

# create_artifact_wall_muhammad_sword_effect = {
# 	# Get the character the artifact is being made for.
# 	$OWNER$ = { save_scope_as = owner }
# 	# Not really used, but if we don't set the scopes we get errors in the feature selection
# 	set_artifact_rarity_famed = yes

# 	# Identify which sword it is
# 	random_list = {
# 		10 = {
# 			trigger = {
# 				NOT = {
# 					any_artifact = {
# 						has_variable = sword_muhammad_aladb
# 					}
# 				}
# 			}
# 			save_scope_value_as = {
# 				name = muhammad_sword_name
# 				value = flag:aladb
# 			}
# 			set_variable = sword_muhammad_aladb
# 		}
# 		10 = {
# 			trigger = {
# 				NOT = {
# 					any_artifact = {
# 						has_variable = sword_muhammad_almathur
# 					}
# 				}
# 			}
# 			save_scope_value_as = {
# 				name = muhammad_sword_name
# 				value = flag:almathur
# 			}
# 			set_variable = sword_muhammad_almathur
# 		}
# 		10 = {
# 			trigger = {
# 				NOT = {
# 					any_artifact = {
# 						has_variable = sword_muhammad_arrasub
# 					}
# 				}
# 			}
# 			save_scope_value_as = {
# 				name = muhammad_sword_name
# 				value = flag:arrasub
# 			}
# 			set_variable = sword_muhammad_arrasub
# 		}
# 		10 = {
# 			trigger = {
# 				NOT = {
# 					any_artifact = {
# 						has_variable = sword_muhammad_albattar
# 					}
# 				}
# 			}
# 			save_scope_value_as = {
# 				name = muhammad_sword_name
# 				value = flag:albattar
# 			}
# 			set_variable = sword_muhammad_albattar
# 		}
# 		10 = {
# 			trigger = {
# 				NOT = {
# 					any_artifact = {
# 						has_variable = sword_muhammad_haft
# 					}
# 				}
# 			}
# 			save_scope_value_as = {
# 				name = muhammad_sword_name
# 				value = flag:haft
# 			}
# 			set_variable = sword_muhammad_haft
# 		}
# 		10 = {
# 			trigger = {
# 				NOT = {
# 					any_artifact = {
# 						has_variable = sword_muhammad_qali
# 					}
# 				}
# 			}
# 			save_scope_value_as = {
# 				name = muhammad_sword_name
# 				value = flag:qali
# 			}
# 			set_variable = sword_muhammad_qali
# 		}
# 		10 = {
# 			trigger = {
# 				NOT = {
# 					any_artifact = {
# 						has_variable = sword_muhammad_dhu
# 					}
# 				}
# 			}
# 			save_scope_value_as = {
# 				name = muhammad_sword_name
# 				value = flag:dhu
# 			}
# 			set_variable = sword_muhammad_dhu
# 		}
# 		10 = {
# 			trigger = {
# 				NOT = {
# 					any_artifact = {
# 						has_variable = sword_muhammad_mikhdham
# 					}
# 				}
# 			}
# 			save_scope_value_as = {
# 				name = muhammad_sword_name
# 				value = flag:mikhdham
# 			}
# 			set_variable = sword_muhammad_mikhdham
# 		}
# 		10 = {
# 			trigger = {
# 				NOT = {
# 					any_artifact = {
# 						has_variable = sword_muhammad_alqadib
# 					}
# 				}
# 			}
# 			save_scope_value_as = {
# 				name = muhammad_sword_name
# 				value = flag:alqadib
# 			}
# 			set_variable = sword_muhammad_alqadib
# 		}
# 	}

# 	# Create the artifact
# 	create_artifact = {	
# 		name = artifact_wall_sword_muhammad_name
# 		description = artifact_wall_sword_muhammad
# 		type = pedestal
# 		visuals = wall_muhammad_sword
# 		wealth = scope:wealth
# 		quality = scope:quality
# 		template = muhammad_sword_template
# 		history = {
# 			type = created_before_history
# 		}
# 		modifier = muhammed_sword_modifier
# 		save_scope_as = newly_created_artifact
# 		decaying = no
# 	}

# 	scope:newly_created_artifact = {
# 		set_variable = { name = historical_unique_artifact value = yes }
# 		set_variable = sword_of_muhammad
# 		save_scope_as = muhammad_sword
# 		set_variable = {
# 			name = relic
# 			value = flag:islamic
# 		}
# 		random_list = {
# 			pick = 2
# 			unique = yes
# 			10 = {
# 				add_artifact_modifier = muhammed_sword_1_modifier
# 			}
# 			10 = {
# 				add_artifact_modifier = muhammed_sword_2_modifier
# 			}
# 			10 = {
# 				add_artifact_modifier = muhammed_sword_3_modifier
# 			}
# 			10 = {
# 				add_artifact_modifier = muhammed_sword_4_modifier
# 			}
# 			10 = {
# 				add_artifact_modifier = muhammed_sword_5_modifier
# 			}
# 			10 = {
# 				add_artifact_modifier = muhammed_sword_6_modifier
# 			}
# 			10 = {
# 				add_artifact_modifier = muhammed_sword_7_modifier
# 			}
# 			10 = {
# 				add_artifact_modifier = muhammed_sword_8_modifier
# 			}
# 		}
# 	}
# 	if = {
# 		limit = {
# 			scope:muhammad_sword_name = flag:aladb
# 		}
# 		scope:muhammad_sword = {
# 			add_artifact_history = {
# 				type = given
# 				date = 624.3.13
# 				recipient = character:33922 #Muhammad the Prophet
# 			}
# 		}
# 	}
# 	if = {
# 		limit = {
# 			scope:muhammad_sword_name = flag:almathur
# 		}
# 		scope:muhammad_sword = {
# 			add_artifact_history = {
# 				type = inherited
# 				date = 570.6.1
# 				recipient = character:33922 #Muhammad the Prophet
# 			}
# 		}
# 	}
# 	if = {
# 		limit = {
# 			scope:muhammad_sword_name = flag:arrasub
# 		}
# 		scope:muhammad_sword = {
# 			add_artifact_history = {
# 				type = inherited
# 				date = 570.6.1
# 				recipient = character:33922 #Muhammad the Prophet
# 			}
# 		}
# 	}
# 	if = {
# 		limit = {
# 			OR = {
# 				scope:muhammad_sword_name = flag:albattar
# 				scope:muhammad_sword_name = flag:haft
# 				scope:muhammad_sword_name = flag:qali
# 			}
# 		}
# 		scope:muhammad_sword = {
# 			add_artifact_history = {
# 				type = conquest
# 				date = 622.5.1
# 				recipient = character:33922 #Muhammad the Prophet
# 				location = province:718
# 			}
# 		}
# 	}
# 	if = {
# 		limit = {
# 			scope:muhammad_sword_name = flag:dhu
# 		}
# 		scope:muhammad_sword = {
# 			add_artifact_history = {
# 				type = conquest
# 				date = 624.3.13
# 				recipient = character:33922 #Muhammad the Prophet
# 				location = province:6210 #Al-Jar
# 			}
# 		}
# 	}
# 	if = {
# 		limit = {
# 			scope:muhammad_sword_name = flag:mikhdham
# 		}
# 		scope:muhammad_sword = {
# 			add_artifact_history = {
# 				type = given
# 				date = 610.1.1
# 				recipient = character:33922 #Muhammad the Prophet
# 			}
# 		}
# 	}
# 	if = {
# 		limit = {
# 			scope:muhammad_sword_name = flag:alqadib
# 		}
# 		scope:muhammad_sword = {
# 			add_artifact_history = {
# 				type = given
# 				date = 610.1.1
# 				recipient = character:33922 #Muhammad the Prophet
# 			}
# 		}
# 	}
# 	scope:muhammad_sword = {
# 		save_scope_as = epic
# 	}
# }



# create_artifact_wall_sword_attila_effect = { ### Rename this. CK_UPDATE
# 	# Get the character the artifact is being made for.
# 	$OWNER$ = { save_scope_as = owner }
# 	# Not really used, but if we don't set the scopes we get errors in the feature selection
# 	set_artifact_rarity_illustrious = yes

# 	# Create the artifact
# 	create_artifact = {	
# 		name = artifact_wall_sword_attila_name
# 		description = artifact_wall_sword_attila_description
# 		type = pedestal
# 		template = attila_template
# 		visuals = wall_sword_attila
# 		wealth = scope:wealth
# 		quality = scope:quality
# 		history = {
# 			type = created_before_history
# 		}
# 		modifier = attila_sword_modifier
# 		save_scope_as = newly_created_artifact
# 		decaying = no
# 	}

# 	scope:newly_created_artifact = {
# 		set_variable = { name = historical_unique_artifact value = yes }
# 		set_variable = sword_attila
# 		save_scope_as = epic
# 	}
# }


# create_artifact_pedestal_crown_iron_effect = { # Recreate the Iron Crown for later CK_UPDATE 
# 	# Get the character the artifact is being made for.
# 	$OWNER$ = { save_scope_as = owner }
# 	# Not really used, but if we don't set the scopes we get errors in the feature selection
# 	set_artifact_rarity_illustrious = yes

# 	# Create the artifact
# 	create_artifact = {	
# 		name = artifact_pedestal_crown_iron_name
# 		description = artifact_pedestal_crown_iron
# 		type = pedestal
# 		template = crown_iron_template
# 		visuals = pedestal_crown_iron
# 		wealth = scope:wealth
# 		quality = scope:quality
# 		history = {
# 			type = created
# 			date = 313.2.1
# 			recipient = character:70523 #Konstantinos I the Great
# 			location = province:902 #Constantinople
# 		}
# 		modifier = iron_crown_modifier
# 		save_scope_as = newly_created_artifact
# 		decaying = no
# 	}

# 	scope:newly_created_artifact = {
# 		set_variable = { name = historical_unique_artifact value = yes }
# 		set_variable = iron_crown
# 		add_artifact_history = {
# 			type = given
# 			date = 600.1.1
# 			actor = character:7893
# 			recipient = character:190171
# 			location = province:2475
# 		}
# 		add_artifact_history = {
# 			type = given
# 			date = 774.7.10
# 			recipient = character:6392
# 			location = province:2475
# 		}
# 		add_artifact_history = {
# 			type = given
# 			date = 781.1.1
# 			recipient = character:6394
# 			location = province:2475
# 		}
# 		add_artifact_history = {
# 			type = inherited
# 			date = 810.1.1
# 			recipient = character:6396
# 			location = province:2475
# 		}
# 		add_artifact_history = {
# 			type = inherited
# 			date = 818.4.17
# 			recipient = character:90095
# 			location = province:2475
# 		}
# 		add_artifact_history = {
# 			type = inherited
# 			date = 887.1.1
# 			recipient = character:71901
# 			location = province:2475
# 		}
# 		# k_italy history copied manually because it is destroyed before 1066
# 		add_artifact_history = {
# 			type = inherited
# 			date = 896.1.1
# 			recipient = character:167969 #Liutfrido
# 		}
# 		add_artifact_history = {
# 			type = inherited
# 			date = 905.3.1
# 			recipient = character:167970 #Gotofredo
# 		}
# 		add_artifact_history = {
# 			type = inherited
# 			date = 910.8.4
# 			recipient = character:167971 #Gausberto
# 		}
# 		add_artifact_history = {
# 			type = inherited
# 			date = 940.1.1
# 			recipient = character:167972 #Uberto
# 		}
# 		add_artifact_history = {
# 			type = inherited
# 			date = 941.11.1
# 			recipient = character:167973 #Adalberto
# 		}
# 		add_artifact_history = {
# 			type = inherited
# 			date = 967.1.1
# 			recipient = character:7727 #Aleramo Aleramicci
# 		}
# 		add_artifact_history = {
# 			type = inherited
# 			date = 991.1.1
# 			recipient = character:7728 #Ottone I
# 		}
# 		add_artifact_history = {
# 			type = inherited
# 			date = 991.6.1
# 			recipient = character:7729 #Guglielmo I
# 		}
# 		add_artifact_history = {
# 			type = inherited
# 			date = 941.11.1
# 			recipient = character:167973 #Adalberto
# 		}
# 		add_artifact_title_history = {
# 			target = title:e_hre
# 			date = 1039.2.4
# 		}
# 		save_scope_as = epic
# 	}
# }

## CK EDIT: NO create_artifact_nikephoros_crown_effect

# No Shanka

# No Charlemagne

## no Essen Crown

## No Indian Artifacts

# No Shiite Caliphate

# No Vanilla Weapon artifacts

## No Curtana

# No West/Southern European artifacts

#### Illustrious Artifacts ####

# No Harp or Joyeuse

# create_artifact_papal_tiara_effect = {  ### CK_WARBAND CK_DARUSAN CK_TO_DO CK_PRIORITY
# 	# Get the character the artifact is being made for.
# 	$OWNER$ = { save_scope_as = owner }
# 	set_artifact_rarity_illustrious = yes

# 	# Create the artifact
# 	create_artifact = {	
# 		name = papal_tiara_name
# 		description = papal_tiara_description
# 		template = papal_tiara_template
# 		type = helmet
# 		visuals = pope_tiara
# 		wealth = scope:wealth
# 		quality = scope:quality
# 		history = {
# 			type = created
# 			date = 800.1.1
# 			recipient = character:7862 #Leo III - fictitious date, probably somewhere between the 8th and 9th centuries
# 			location = province:2575 #Rome
# 		}
# 		modifier = artifact_monthly_piety_4_modifier
# 		save_scope_as = newly_created_artifact
# 		decaying = no
# 	}

# 	scope:newly_created_artifact = {
# 		set_variable = { name = historical_unique_artifact value = yes }
# 		set_variable = {
# 			name = relic
# 			value = flag:christian
# 		}
# 		set_variable = {
# 			name = artifact_succession_title
# 			value = title:k_papal_state
# 		}
# 		set_variable = {
# 			name = pope_hat
# 			value = yes
# 		}
# 		add_artifact_title_history = {
# 			target = title:k_papal_state
# 			date = 816.6.12
# 		}
# 		add_artifact_modifier = artifact_monthly_learning_lifestyle_xp_2_modifier
# 	}
# }

# No Indian Artifacts

# No Shiite Caliphate

# No Shiite Caliphate

create_artifact_arms_of_alexander_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {	
		name = artifact_arms_of_alix_name
		description = artifact_arms_of_alix_description
		template = general_unique_template
		type = pedestal
		visuals = pedestal_alexander_armor
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created_before_history
		}
		modifier = alexander_the_great_armor_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = arms_of_alex
		save_scope_as = epic
	}
}

## No Indian Artifacts



create_artifact_sculpture_babr_e_bayan_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {	
		name = artifact_sculpture_armor_babr_name
		description = artifact_sculpture_armor_babr_ck
		type = sculpture
		template = babr_template
		visuals = sculpture_babr_e_bayan
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created_before_history
		}
		modifier = babr_e_bayan_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = babr_e_bayan
		save_scope_as = epic
	}	
}

create_artifact_pedestal_justinian_effect = { ### Rename the crown to Crown of Calradios  CK_UPDATE
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {	
		name = artifact_pedestal_crown_calradios_name
		description = artifact_pedestal_crown_calradios
		type = pedestal
		template = justinian_template
		visuals = pedestal_justinian
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created
			date = 68.10.14
			recipient = character:Simp_P_1 # Calradios the Great / RHAGAEA IS PLACEHOLDER. CK_UPDATE
			location = province:902 # Lycaron
		}
		modifier = justinian_crown_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = crown_of_justinian ## NEED TO RENAME THE ACTUAL HEADGEAR ITSELF! CK_UPDATE CK_LOCALIZATION
		add_artifact_title_history = {
			target = title:e_calradian_empire
			date = 68.10.14
		}
		save_scope_as = epic
	}	
}


## Vakken ##

create_artifact_sledovik_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {	
		name = artifact_sledovik_name
		description = artifact_sledovik_description
		visuals = rock
		type = pedestal
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created_before_history
		}
		template = relic_finno_ugric_template
		modifier = sledovik_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = {
			name = relic
			value = flag:vakken_religion
		}
		add_artifact_modifier = artifact_court_grandeur_baseline_add_2_modifier
		save_scope_as = epic
	}
}

create_artifact_kantele_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_famed = yes

	# Create the artifact
	create_artifact = {	
		name = artifact_kantele_name
		description = artifact_kantele_description
		visuals = pedestal_david_harp
		type = pedestal
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created_before_history
		}
		template = relic_finno_ugric_template
		modifier = kantele_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = kantele
		set_variable = {
			name = relic
			value = flag:vakken_religion
		}
		save_scope_as = epic
	}
}

## Darshi ##

create_artifact_wall_banner_kaviani_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {	
		name = artifact_wall_banner_kaviani_name
		description = artifact_wall_banner_kaviani
		type = wall_big
		template = kaviani_template
		visuals = banner
		visuals_source = dynasty:jamshid
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created_before_history
		}
		modifier = banner_kaviani_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = banner_kaviani
		save_scope_as = epic
	}
}

create_artifact_peacock_throne_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		type = throne_special
		template = general_unique_template
		visuals = throne_peacock
		wealth = scope:wealth
		quality = scope:quality
		name = peacock_throne_name
		description = peacock_throne_description
		history = {
			type = created_before_history
		}
		modifier = peacock_throne_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = peacock_throne
		save_scope_as = epic
	}
}

create_artifact_spear_of_the_prophet_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {	
		name = artifact_spear_of_the_prophet_name
		description = artifact_spear_of_the_prophet_description
		type = pedestal
		visuals = spear_court
		template = islam_artifact_template
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created_before_history
		}
		modifier = spear_prophet_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = spear_of_the_prophet
		save_scope_as = epic
		set_variable = {
			name = artifact_succession_title
			value = title:e_nahasa
		}
	}
}

# create_artifact_mantle_of_the_prophet_effect = {
# 	# Get the character the artifact is being made for.
# 	$OWNER$ = { save_scope_as = owner }
# 	# Not really used, but if we don't set the scopes we get errors in the feature selection
# 	set_artifact_rarity_illustrious = yes

# 	# Create the artifact
# 	create_artifact = {	
# 		name = artifact_mantle_of_the_prophet_islam_name
# 		description = artifact_mantle_of_the_prophet_description
# 		template = islam_artifact_template
# 		type = regalia_simple
# 		visuals = regalia
# 		wealth = scope:wealth
# 		quality = scope:quality
# 		history = {
# 			type = created_before_history
# 		}
# 		modifier = mantle_prophet_modifier
# 		save_scope_as = newly_created_artifact
# 		decaying = no
# 	}

# 	scope:newly_created_artifact = {
# 		set_variable = { name = historical_unique_artifact value = yes }
# 		set_variable = {
# 			name = relic
# 			value = flag:islamic
# 		}
# 		set_variable = mantle_of_prophet
# 		save_scope_as = epic
# 		set_variable = {
# 			name = artifact_succession_title
# 			value = title:d_sunni
# 		}
# 	}
# }

create_artifact_sculpture_babr_e_bayan_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {	
		name = artifact_sculpture_armor_babr_name
		description = artifact_sculpture_armor_babr
		type = sculpture
		template = babr_template
		visuals = sculpture_babr_e_bayan
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created_before_history
		}
		modifier = babr_e_bayan_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = babr_e_bayan
		save_scope_as = epic
	}	
}

create_artifact_pedestal_justinian_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {	
		name = artifact_pedestal_crown_justinian_name
		description = artifact_pedestal_crown_justinian
		type = pedestal
		template = justinian_template
		visuals = pedestal_justinian
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created_before_history #type = created
			# date = 527.4.1
			# recipient = character:70512 #Justinian the Great / CK_CALRADIAN CK_CALRADIA CK_ANTIQUITY CK_UPDATE - change this to Calradios once we have him in the history (NOTE THE ARTIFACT CREATION DATE BELOW)
			# location = province:902 #Constantinople
		}
		modifier = justinian_crown_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = crown_of_justinian
		add_artifact_title_history = {
			target = title:e_calradian_empire
			date = 104.3.12
		}
		save_scope_as = epic
	}	
}

create_artifact_statue_constantine_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_famed = yes

	# Create the artifact
	create_artifact = {	
		name = artifact_statue_constantine_name
		description = artifact_statue_constantine
		type = sculpture
		visuals = statue_constantine
		wealth = scope:wealth
		quality = scope:quality
		template = statue_constantine_template
		history = {
			type = created_before_history #type = created
			# date = 330.1.1
			# recipient = character:70523 #Constantine the Great - Catomenys, the emperor who expelled the first wave of Balions, but they later returned in smaller numbers to take contracts under Valandion as one of their first warlords
			# location = province:902 #Constantinople
		}
		modifier = statue_constantine_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = statue_constantine
		save_scope_as = epic
		add_artifact_title_history = {
			target = title:e_calradian_empire
			date = 875.7.16
		}
	}
}

create_artifact_tree_automa_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {	
		name = artifact_tree_automa_name
		description = artifact_tree_automa
		type = pedestal
		visuals = tree_automa
		wealth = scope:wealth
		quality = scope:quality
		template = tree_automa_template
		history = {
			type = created_before_history
		}
		modifier = tree_automa_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		#set_variable = tree_automa
		save_scope_as = epic
		add_artifact_title_history = {
			target = title:e_calradian_empire
			date = 879.12.28
		}
	}
}

# create_artifact_statue_four_tetrarchs_effect = {
# 	# Get the character the artifact is being made for.
# 	$OWNER$ = { save_scope_as = owner }
# 	set_artifact_rarity_famed = yes

# 	# Create the artifact
# 	create_artifact = {	
# 		name = artifact_statue_four_tetrarchs_name
# 		description = artifact_statue_four_tetrarchs_desc
# 		type = wall_small
# 		visuals = statue_four_tetarchs
# 		wealth = scope:wealth
# 		quality = scope:quality
# 		template = tree_automa_template
# 		history = {
# 			type = created_before_history
# 		}
# 		modifier = statue_four_tetrarchs_modifier
# 		save_scope_as = newly_created_artifact
# 		decaying = no
# 	}

# 	scope:newly_created_artifact = {
# 		set_variable = { name = historical_unique_artifact value = yes }
# 		save_scope_as = epic
# 		add_artifact_title_history = {
# 			target = title:e_byzantium
# 			date = 940.1.1
# 		}
# 	}
# }

create_artifact_statue_roman_woman_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	set_artifact_rarity_famed = yes

	# Create the artifact
	create_artifact = {	
		name = artifact_statue_roman_woman_name
		description = artifact_statue_roman_woman_desc
		type = sculpture
		visuals = statue_roman_woman
		wealth = scope:wealth
		quality = scope:quality
		template = statue_roman_woman_template
		history = {
			type = created_before_history
		}
		modifier = statue_roman_woman_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		save_scope_as = epic
		add_artifact_title_history = {
			target = title:e_calradian_empire
			date = 940.1.1
		}
	}
}

create_artifact_hydraulic_organ_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {	
		name = artifact_hydraulic_organ_name
		description = artifact_hydraulic_organ_desc
		type = sculpture
		visuals = hydraulic_organ
		wealth = scope:wealth
		quality = scope:quality
		template = hydraulic_organ_template
		history = {
			type = created_before_history
		}
		modifier = hydraulic_organ_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		save_scope_as = epic
		add_artifact_title_history = {
			target = title:e_calradian_empire
			date = 940.1.1
		}
	}
}
