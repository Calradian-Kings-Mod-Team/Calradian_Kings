
ClaimThroneMythicalFounder = {
	type = character
	random_valid = yes

	text = {
		localization_key = MythicalFounder_calradios
		trigger = {
			var:mythical_founder = flag:calradios_founder
		}
	}
	text = {
		localization_key = MythicalFounder_gundar
		trigger = {
			var:mythical_founder = flag:gundar_founder
		}
	}
	text = {
		localization_key = MythicalFounder_wilund
		trigger = {
			var:mythical_founder = flag:wilund_founder
		}
	}
	text = {
		localization_key = MythicalFounder_asera
		trigger = {
			var:mythical_founder = flag:asera_founder
		}
	}
	text = {
		localization_key = MythicalFounder_kannic
		trigger = {
			var:mythical_founder = flag:kannic_founders
		}
	}
}

ClaimThroneMythicalFounderHerselfHimself = {
	type = character

	# Structured with extra ORs for the sake of clarity

	text = {
		localization_key = MythicalFounder_himself
		trigger = {
			OR = {
				var:mythical_founder = flag:calradios_founder
				var:mythical_founder = flag:gundar_founder
				var:mythical_founder = flag:wilund_founder
				var:mythical_founder = flag:asera_founder
			}
		}
	}

	# text = { ## Fill out with any future female legendary founders of lands
	# 	localization_key = MythicalFounder_herself
	# 	trigger = {
	# 	}
	# }

	text = {
		localization_key = MythicalFounder_themselves
		trigger = {			
			var:mythical_founder = flag:kannic_founders
		}

		fallback = yes
	}
}

TitleRelationToMe = {
	type = character

	text = {
		localization_key = TitleRelationToMe_Your_PrimaryTitle
		trigger = {
			primary_title = scope:second
		}
	}

	text = {
		localization_key = TitleRelationToMe_Your_Title
		trigger = {
			root = scope:second.holder
		}
	}

	text = {
		localization_key = TitleRelationToMe_PrimaryTitle
		trigger = {
			scope:second.holder = { save_temporary_scope_as = title_holder }
			exists = scope:title_holder
			has_relation_to = scope:title_holder
			scope:title_holder.primary_title = scope:second
		}
	}

	text = {
		localization_key = TitleRelationToMe_Title
		trigger = {
			scope:second.holder = { save_temporary_scope_as = title_holder }
			exists = scope:title_holder
			has_relation_to = scope:title_holder
		}
	}

	text = {
		localization_key = TitleRelationToMe_None
		fallback = yes
	}
}

GetQueenKing = {
	type = character

	text = {
		localization_key = king
		trigger = { is_male = yes }
	}
	text = {
		localization_key = king_female
		trigger = { is_female = yes }
	}
}

# GetPrincelyElector1 = { ## No Princely Electorate in Calradia. Perhaps not at the moment, Balion? CK_UPDATE
# 	type = landed_title

# 	text = {
# 		localization_key = get_hre_elector_1
# 		trigger = {
# 			title:e_hre = { has_variable = hre_elector_1 }
# 		}
# 	}
# }

# GetPrincelyElector2 = {
# 	type = landed_title

# 	text = {
# 		localization_key = get_hre_elector_2
# 		trigger = {
# 			title:e_hre = { has_variable = hre_elector_2 }
# 		}
# 	}
# }

# GetPrincelyElector3 = {
# 	type = landed_title

# 	text = {
# 		localization_key = get_hre_elector_3
# 		trigger = {
# 			title:e_hre = { has_variable = hre_elector_3 }
# 		}
# 	}
# }

# GetPrincelyElector4 = {
# 	type = landed_title

# 	text = {
# 		localization_key = get_hre_elector_4
# 		trigger = {
# 			title:e_hre = { has_variable = hre_elector_4 }
# 		}
# 	}
# }

# GetPrincelyElector5 = {
# 	type = landed_title

# 	text = {
# 		localization_key = get_hre_elector_5
# 		trigger = {
# 			title:e_hre = { has_variable = hre_elector_5 }
# 		}
# 	}
# }

# GetPrincelyElector6 = {
# 	type = landed_title

# 	text = {
# 		localization_key = get_hre_elector_6
# 		trigger = {
# 			title:e_hre = { has_variable = hre_elector_6 }
# 		}
# 	}
# }

# GetPrincelyElector7 = {
# 	type = landed_title

# 	text = {
# 		localization_key = get_hre_elector_7
# 		trigger = {
# 			title:e_hre = { has_variable = hre_elector_7 }
# 		}
# 	}
# }

GetTierIcon = {
	type = landed_title

	text = {
		localization_key = empire_icon
		trigger = {
			tier = tier_empire
		}
	}

	text = {
		localization_key = kingdom_icon
		trigger = {
			tier = tier_kingdom
		}
	}

	text = {
		localization_key = duchy_icon
		trigger = {
			tier = tier_duchy
		}
	}

	text = {
		localization_key = county_icon
		trigger = {
			tier = tier_county
		}
	}

	text = {
		localization_key = barony_icon
		trigger = {
			tier = tier_barony
		}
	}
}

GetPrimaryTitleTierIcon = {
	type = character

	text = {
		localization_key = empire_icon
		trigger = {
			primary_title.tier = tier_empire
		}
	}

	text = {
		localization_key = kingdom_icon
		trigger = {
			primary_title.tier = tier_kingdom
		}
	}

	text = {
		localization_key = duchy_icon
		trigger = {
			primary_title.tier = tier_duchy
		}
	}

	text = {
		localization_key = county_icon
		trigger = {
			primary_title.tier = tier_county
		}
	}

	text = {
		localization_key = barony_icon
		trigger = {
			primary_title.tier = tier_barony
		}
	}

	text = {
		localization_key = current_situation_blank
	}
}

GetSuccessionLinePositionCurrentSituation = {
	type = character

	text = {
		localization_key = in_line_of_succession_short_current_situation
		trigger = {
			scope:second.primary_title ?= {
				place_in_line_of_succession = {
					target = root
					value <= 20
				}
			}
		}
	}

	text = {
		localization_key = current_situation_blank
	}
}

GetSuccessionLinePositionLongCurrentSituation = {
	type = character

	text = {
		localization_key = in_line_of_succession_long_current_situation
		trigger = {
			scope:second.primary_title ?= {
				place_in_line_of_succession = {
					target = root
					value <= 20
				}
			}
		}
	}

	text = {
		localization_key = current_situation_blank
	}
}

GetInOrOutsideRealm = {
	type = character

	text = {
		localization_key = not_in_realm_current_situation
		trigger = {
			scope:second = {
				is_independent_ruler = no
				any_liege_or_above = {
					this = root
				}
			}
		}
	}

	text = {
		localization_key = in_realm_current_situation
	}
}

GetInOrOutsideRealmAllianceInfo = {
	type = character

	text = {
		localization_key = in_realm_alliance_current_situation
		trigger = {
			scope:second = {
				is_independent_ruler = no
				any_liege_or_above = {
					this = root
				}
			}
		}
	}

	text = {
		localization_key = not_in_realm_alliance_current_situation
	}
}

GetIncumbentOrNone = {
	type = landed_title

	text = {
		localization_key = GetIncumbentOrNone.holder
		trigger = { exists = holder }
	}
	text = {
		localization_key = GetIncumbentOrNone.uncreated
		trigger = { always = no }
		fallback = yes
	}
}

GetIncumbentOrNone_Possessive = {
	type = landed_title

	text = {
		localization_key = CHARACTER_HERHIS_HER
		trigger = {
			holder ?= { is_female = yes }
		}
	}
	text = {
		localization_key = CHARACTER_HERHIS_HIS
		trigger = {
			holder ?= { is_female = yes }
		}
	}
	text = {
		localization_key = CHARACTER_HERHIS_ITS
		trigger = { always = no }
		fallback = yes
	}
}
