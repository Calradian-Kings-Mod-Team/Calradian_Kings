activity_battanian_coronation = {
	is_shown = {
		highest_held_title_tier > tier_kingdom
		is_landed = yes
		OR = {
			# Battanians are only able to be crowned at the Rock of Glanys
			culture = {
				has_cultural_pillar = heritage_battanian
			}
			# Battanians hold reverence to custom and its ties to religious customs as well, meaning the Rock of Glanys is a holy site
			religion = religion:battanian_religion
		}
		trigger_if = {
			limit = {
				is_ai = yes
			}
			is_at_war = no
			short_term_gold >= RICE_activity_cost
		}
	}

	#can_start = {
	#	any_realm_county = { this = title:c_shazhou }
	#}

	can_start_showing_failures_only = {
		is_available_adult = yes
	}

	is_valid = {
		NOT = {
			has_variable = activity_invalidated
		}
		scope:host = {
			is_landed = yes
			is_adult = yes
			NOT = { is_incapable = yes }
		}
		any_realm_county = { this = title:c_dunglanys }
		# If no one shows up
		# trigger_if = {
		# 	limit = {
		# 		is_current_phase_active = yes
		# 	}
		# 	has_attending_activity_guests = yes
		# }
	}

	on_invalidated = {
		# Host becomes unlanded
		if = {
			limit = {
				scope:host = {
					is_landed_or_landless_administrative = no
				}
			}
			scope:activity = {
				activity_type = { save_scope_as = activity_type }
			}
			every_attending_character = {
				trigger_event = activity_system.0320
			}
		}
		else_if = {
			limit = {
				scope:host = { is_incapable = yes }
			}
			scope:activity = {
				activity_type = { save_scope_as = activity_type }
			}
			scope:host = {
				trigger_event = activity_system.0330
			}
			every_attending_character = {
				limit = { NOT = { this = scope:host } }
				trigger_event = activity_system.0331
			}
		}
		# Host is imprisoned
		else_if = {
			limit = {
				scope:host = { is_imprisoned = yes } 
			}
			scope:host = { trigger_event = bp2_adult_education.0005 }
		}
		# if = { # No one shows up
		# 	limit = {
		# 		has_attending_activity_guests = no
		# 	}
		# 	scope:activity = {
		# 		activity_type = { save_scope_as = activity_type }
		# 		activity_location = { save_scope_as = location }
		# 	}
		# 	scope:host = { trigger_event = activity_system.0100 }
		# }
	}

	on_host_death = {
		scope:activity = {
			set_variable = {
				name = activity_invalidated
			}
		}
	}

	province_filter = realm
	
	is_location_valid = {
		limit = {
			title:c_dunglanys.holder.top_liege = scope:host
			exists = barony
		}
		custom_tooltip = {
			text = activity_location_dunglanys
			barony = title:b_dunglanys
		}
	}

	ai_province_filter = realm
	wait_time_before_start = { months = 1 }

	province_description = {
		#Does this have a temple holding?
		triggered_desc = {
			trigger = {
				county = title:c_dunglanys
			}
			desc = activity_rock_of_glanys_desc
		}
	}

	# desc is only shown in debug AI watch window
	ai_will_do = {
		value = 50
		
		# How much do you care about your faith not liking this?
		if = {
			limit = {
				OR = {
					has_trait = cynical
					has_trait = callous
				}
			}
			add = -5
		}
		if = {
			limit = {
				OR = {
					has_trait = zealous
					has_trait = just
					has_trait = diligent
				}
			}
			add = 25
		}
		
		#Can you actually afford this?
		if = {
			limit = {
				NOT = { can_make_expensive_purchase_trigger = { PRICE = calking_battanian_coronation_costs } }
			}
			add = -50
		}
	}

	###################
	# OPTIONS
	###################

	###################
	# OPTIONS
	###################

	special_option_category = special_type

	options = {

		#########
		# SECULAR VS RELIGIOUS
		#########

		# Special type HAS to be "special_type" to pop up the pretty art
		special_type = {
			battanian_secular_coronation = {
				# Normally, default = yes will make one option the default
				default = yes
				ai_will_do = {
					value = 10
				}
			}
			# Only available if following an appropriate religion
			battanian_religious_coronation = {
				default = {
					faith = { has_doctrine = tenet_ancestor_worship }
				}		
				is_valid = {
					AND = {
						religion = religion:battanian_religion
						has_trait = zealous
					}
				}
				ai_will_do = {
					value = 10
					if = {
						limit = {
							has_trait = zealous
						}
						add = 20
					}
					if = {
						limit = {
							has_trait = cynical
						}
						add = -30
					}
				}
			}
		}

		#########
		# SIZE OF OFFERING OPTION
		#########
		batt_coronation_accomodations = {
			batt_coronation_accomodations_low = {
				cost = {
					gold = {
						add = {
							value = 30
							desc = batt_coronation_accomodations_cost
						}
					}
				}			
				ai_will_do = {
					value = 15
				}
			}
			batt_coronation_accomodations_modest = {
				cost = { 
					gold = {
						add = {
							value = 80
							desc = batt_coronation_accomodations_cost
						}
					}
				}				
				ai_will_do = {
					value = 5
					if = {
						limit = {
							short_term_gold <= 80
						}
						subtract = {
							value = 10
						}
					}
				}
			}
			batt_coronation_accomodations_excellent = {
				cost = { 
					gold = {
						add = {
							value = 120
							desc = batt_coronation_accomodations_cost
						}
					}
				}				
				ai_will_do = {
					value = 10
					if = {
						limit = {
							short_term_gold <= 120
						}
						subtract = {
							value = 15
						}
					}
				}
			}
		}

	}

	###################
	# PHASES
	###################

	phases = {
		RICE_venerate_ancestors_veneration_phase = {
			is_predefined = yes

			on_enter_phase = {
				# if = {
				# 	limit = {
				# 		this = scope:host
				# 	}
				# 	trigger_event = tarim_basin.0058
				# }	
			}
			
			on_phase_active = {
				if = {
					limit = {
						this = scope:host
					}
					trigger_event = RICE_ancestor_worship.0002
				}		
			}

			on_end = {
				# Run conclusion stuff here
				# if = {
				# 	limit = { this = scope:host }
				# 	scope:activity = { progress_activity_phase_after = { weeks = 2 } }
				# }
			}
		}
	}

	max_guest_arrival_delay_time = { months = 1 }


	ai_check_interval = 48

	ai_will_select_province = {
		value = 10
		# if = {
		# 	limit = {
		# 		this = scope:host.capital_province
		# 	}
		# 	add = {
		# 		value = 30
		# 		desc = "Capital Province preferred"
		# 	}
		# }
	}
	

	max_province_icons = 3

	
	province_score = {
		value = 0
		# BUILDINGS
		if = {
			limit = { has_holding_type = church_holding }
			add = 25
		}
	}
	
	cost = {
		gold = {
			add = {
				value = 0
				add = {
					value = RICE_activity_cost
					desc = hunt_base_cost
				}
			}
			if = {
				limit = {
					scope:province ?= {
						has_holding_type = church_holding
					}
				}
				subtract = {
					value = 25
					desc = activity_RICE_venerate_ancestors_temple_holding_reduced_cost
				}
			}
		}
	}

	ui_predicted_cost = {
		gold = {
			value = RICE_activity_cost

			# Make it a multiple of 5 (rounded up)
			divide = 5 
			ceiling = yes 
			multiply = 5
		}
	}
	cooldown = { years = 100 }
	###################
	# ACTIVITY-SPECIFIC PULSES
	###################
	
	pulse_actions = {

	}

	on_start = {
		
	}

	# Once you arrive at the springs, trigger the relevant event(s)
	on_leave_travel_state = {

	}

	on_enter_passive_state = {	
		
	}
	

	###################
	# GUEST HANDLING
	###################

	max_guests = 15

	allow_zero_guest_invites = yes

	guest_invite_rules = {
		rules = {

			# Family.
			1 = activity_invite_rule_close_family
			2 = activity_invite_rule_extended_family

			# Misc landless.
			3 = activity_invite_rule_courtiers # Courtiers doesn't include knights
			4 = activity_invite_rule_knights

			# Misc landed
			5 = activity_invite_rule_vassals
		}
		defaults = {
			2 = activity_invite_rule_courtiers
			3 = activity_invite_rule_knights
			1 = activity_invite_rule_extended_family
			1 = activity_invite_rule_close_family
			4 = activity_invite_rule_vassals
		}
	}

	can_be_activity_guest = {
		is_adult = yes
		is_available = yes
		in_diplomatic_range = scope:host
		OR = {
			is_landed = no
			is_ai = yes
		}
		dynasty = scope:host.dynasty
	}

	host_intents = {
		intents = { RICE_venerate_ancestors_respect_intent }
		default = RICE_venerate_ancestors_respect_intent
	}

	guest_intents = {
		intents = { RICE_venerate_ancestors_respect_intent }
		default = RICE_venerate_ancestors_respect_intent
	}

	guest_join_chance = {
		base = 0
		base_activity_modifier = yes

		# Scripted Modifiers
		activity_guest_shared_ai_accept_modifier = yes
	}
	
	on_complete = {
		if = {
			limit = { this = scope:host }
			create_character_memory = {
				type = RICE_venerate_ancestors_host_memory
			}
			scope:host = {
				RICE_venerate_ancestors_completed_log_entry_effect = yes
			}
		}
		else = {			
			create_character_memory = {
				type = RICE_venerate_ancestors_guest_memory
				participants = {
					host = scope:host
				}
			}
		}
	}

	### Graphics
	# map_entity = {
	# 	trigger = {
	# 		activity_location.culture = {
	# 			OR = {
	# 				has_graphical_mena_culture_group_trigger = yes
	# 				has_graphical_steppe_culture_group_trigger = yes
	# 				has_graphical_african_culture_group_trigger = yes
	# 			}
	# 		}
	# 	}
	# 	reference = "building_mena_feast_01_entity"
	# }

	# map_entity = {
	# 	trigger = {
	# 		activity_location.culture = {
	# 			has_graphical_india_culture_group_trigger = yes
	# 		}
	# 	}
	# 	reference = "building_indian_feast_01_entity"
	# }
	
	# map_entity = "building_western_feast_01_entity"

	# Travel
	# background = {
	# 	trigger = {
	# 		activity_location = {
	# 			OR = {
	# 				geographical_region = world_middle_east
	# 				geographical_region = world_middle_east_persia
	# 				geographical_region = world_steppe
	# 				geographical_region = world_india
	# 				geographical_region = world_tibet
	# 			}
	# 		}
	# 	}
	# 	texture = "gfx/interface/illustrations/event_scenes/RICE_pamir_valley.dds"
	# 	environment = "environment_event_desert"
	# 	ambience = "event:/SFX/Events/Backgrounds/mountains_day"
	# }

	#Fallback
	background = {
		trigger = {
			OR = {
				scope:host = {
					has_government = tribal_government
					faith = {
						religion = { is_in_family = rf_pagan }
					}
				}
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/ep2_holysite_tribal.dds"
		environment = "environment_event_garden"
		ambience = "event:/DLC/FP1/SFX/Events/event_temple"
	}
	background = {
		texture = "gfx/interface/illustrations/event_scenes/temple.dds"
		environment = "environment_event_temple"
		ambience = "event:/SFX/Events/Backgrounds/temple_generic"
	}


	window_characters = {

		guest = {
			camera = camera_body
			
			effect = {
				every_attending_character = {
					limit = {
						scope:host.location = scope:activity.activity_location
					}
					add_to_list = characters
				}
			}

			scripted_animation = {
				animation = throne_room_bow_1
			}
		}

		guest = {
			camera = camera_body
			
			effect = {
				every_attending_character = {
					limit = {
						scope:host.location = scope:activity.activity_location
					}
					add_to_list = characters
				}
			}

			scripted_animation = {
				animation = throne_room_bow_2
			}
		}
		
		host = {
			camera = camera_body
			
			effect = {
				if = {
					limit = {
						scope:host.location = scope:activity.activity_location
					}
					scope:host = {
						add_to_list = characters
					}
				}
			}

			scripted_animation = {
				animation = personality_zealous
			}
		}
		
		travel_host = {
			camera = camera_body
			
			effect = {
				if = {
					limit = {
						NOT = {
							scope:host.location = scope:activity.activity_location
						}
					}
					scope:host = {
						add_to_list = characters
					}
				}
			}

			scripted_animation = {
				animation = jockey_walk
			}
		}

		guest = {
			camera = camera_body
			
			effect = {
				every_attending_character = {
					limit = {
						NOT = {
							scope:host.location = scope:activity.activity_location
						}
					}
					add_to_list = characters
				}
			}

			scripted_animation = {
				animation = jockey_walk
			}
		}

		guest = {
			camera = camera_body
			
			effect = {
				every_attending_character = {
					limit = {
						NOT = {
							scope:host.location = scope:activity.activity_location
						}
					}
					add_to_list = characters
				}
			}

			scripted_animation = {
				animation = jockey_walk
			}
		}
	}
}
