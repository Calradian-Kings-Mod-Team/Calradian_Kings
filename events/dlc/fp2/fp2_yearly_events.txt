namespace = fp2_yearly

### EVENT LIST ####################################################################
## XXXX	- XXXX	YYY by ZZZ
## 1001	- 1001	Chess Two by Daniel Moore
## 1002	- 1002	Compromising Position by Daniel Moore
## 1003	- 1003	Tilting at Giants by Daniel Moore
## 1004	- 1004	The Hawk of Quarysh by Daniel Moore
## 1005	- 1005	Lost Viking by Daniel Moore
## 1006	- 1007	Viking Cheese by Daniel Moore
## 1008	- 1008	Consuming the Cheese by Daniel Moore
## 2020	- 2020	Açò es or, xata! by Hugo Cortell
## 2025	- 2025	Suffering From Success by Hugo Cortell
## 3000 - 3000	Neighboring Muslims are growing rice by Alexander Oltner
## 3001	- 3001	You commission your epitaph by Veronica Pazos
## 3002	- 3002	Oh my god they were roommates by Veronica Pazos
## 3003	- 3003	Best friend throws a terrible party by Veronica Pazos
## 4001	- 4001	You fancy a little siesta by Nick Meredith
## 4002	- 4002	County is increasingly religiously intertwined by Nick Meredith
## 4003	- 4003	The road to Santiago is under threat from bandits by Nick Meredith
## 4004	- 4004	Talented Mozarab offers their services by Nick Meredith
## 4005	- 4005	Mozarabs in a city ask for their own quarter by Nick Meredith
## 4006	- 4006	Mozarabs ask for permission to build churches by Nick Meredith
## 4007	- 4007	Finding a shell on the road to Santiago by Nick Meredith
## 4008	- 4008	Folk stories around the fireside by Nick Meredith
## 4009	- 4009	Visiting the Malato Tree by Nick Meredith
## 4010	- 4010	Finding a Verraco by Nick Meredith
## 8000 - 8000	Destroying the Vineyards by Ola Jentzsch
## 8001	- 8001	Assembling the Cortes by Ola Jentzsch
## 8002	- 8002	Dietary Dilemma By Ola Jentzsch
## 8003	- 8003	Flight of Fancy By Ola Jentzsch
## 8004	- 8004	Trasnlation Schools By Ola Jentzsch
## 8005 - 8005	Under the Stone Pine by Ola Jentzsch
## 8006	- 8006	Saqaliba Settlers by Ola Jentzsch
## 9000 - 9002	Conversos and Jewish events By James Beaumont
## 9005 - 9005	Toledan Nights By James Beaumont
## 9006 - 9006	Local bishop mad his church faces the wrong way By James Beaumont
###################################################################################
# A lot of effort went into the readability of these lists and headers			  #
# In fact, now there have been two whole passes of file organization			  #
###################################################################################

###################################
# Chess Two
# By Daniel Moore
###################################
# fp2_yearly.1001 - No West Iberia

###################################
# Compromising Position
# By Daniel Moore
###################################
# Edited out for now #
# fp2_yearly.1002 = {
# 	type = character_event
# 	title = fp2_yearly.1002.t
# 	desc = fp2_yearly.1002.desc
# 	theme = seduction
# 	left_portrait = {
# 		character = root
# 		animation = shock

# 	}

# 	right_portrait = {
# 		character = scope:deviant_courtier
# 		animation = prisondungeon
# 	}

	# trigger = {
	# 	has_fp2_dlc_trigger = yes
	# 	is_adult = yes
	# 	is_landed_or_landless_administrative = yes
	# 	any_courtier = { is_available_healthy_ai_adult = yes }

# 		NOT = {
# 			has_character_flag = fp2_yearly.1002
# 		}
# 	}

# 	immediate = {
# 		add_character_flag = fp2_yearly.1002

# 		random_courtier = {
# 			limit = {
# 				is_available_healthy_ai_adult = yes
# 				OR = {
# 					has_trait = deviant
# 					any_secret = {
# 						secret_type = secret_deviant
# 					}
# 				}
# 			}

# 			save_scope_as = deviant_courtier
# 		}


# 		if = {
# 			limit = {
# 				NOT = { exists = scope:deviant_courtier}
# 			}
# 			hidden_effect = {
# 				random_courtier = {
# 					limit = {
# 						is_available_healthy_ai_adult = yes
# 					}

# 					give_deviant_secret_or_trait_effect = yes
# 					save_scope_as = deviant_courtier
# 				}
# 			}
# 		}

# 		scope:deviant_courtier = {

# 			add_character_flag = {
# 				flag = is_naked
# 				days = 1
# 			}

# 			add_character_flag = {
# 				flag = temporarily_blinded
# 				days = 1
# 			}
# 		}
# 	}


# 	option = {
# 		name = fp2_yearly.1002.b
# 		scope:deviant_courtier = {
# 			random_secret = {
# 				limit = { secret_type = secret_deviant}
# 				reveal_to = root
# 			}
# 		}
# 		ai_chance = {
# 			base = 100
# 			ai_value_modifier = {
# 				ai_vengefulness = 1
# 				ai_honor = -1
# 			}
# 		}

# 		stress_impact = {
# 			deviant = medium_stress_gain
# 		}

# 	}

# 	option = {
# 		name = fp2_yearly.1002.c
# 		stress_impact = {
# 			deviant = medium_stress_loss
# 		}

# 		if = {
# 			limit = {
# 				NOT = {
# 					any_secret = {
# 						secret_type = secret_deviant
# 					}
# 				}
# 			}
# 			give_deviant_secret_or_trait_effect = yes
# 		}

# 		ai_chance = {
# 			base = 100
# 			ai_value_modifier = {
# 				ai_sociability = 1
# 				ai_energy = 1
# 				ai_zeal = -1
# 			}
# 		}
# 	}

# 	option = {
# 		name = fp2_yearly.1002.a
# 		ai_chance = {
# 			base = 100
# 			ai_value_modifier = {
# 				ai_honor = 1
# 			}
# 		}

# 		stress_impact = {
# 			deviant = medium_stress_gain

# 		}
# 	}

# }

###################################
# Tilting at Giants
# By Daniel Moore
###################################
### No West Iberia fp2_yearly.1003
### No Hawks or Muslims or Abbasids fp2_yearly.1004
### No Vikings fp2_yearly.1005
### No Viking Cheese fp2_yearly.1006 fp2_yearly.1007

###################################
# Consuming the Cheese
# By Daniel Moore
###################################
fp2_yearly.1008 = {
	type = character_event
	title = fp2_yearly.1008.t
	desc = fp2_yearly.1008.desc
	theme = realm
	override_background = { reference = bp1_wine_cellar }
	left_portrait = {
		character = root
		animation = ecstasy

	}

	trigger = {
		any_artifact = {
			has_variable = has_cheese_artifact
		}

	}

	immediate = {

		random_artifact = {
			limit = {
				has_variable = has_cheese_artifact
			}
			save_scope_as = cheese_artifact
		}

	}

	option = {
		name = fp2_yearly.1008.a
		add_stress = scope:cheese_artifact.cheese_artifact_strength

		destroy_artifact = scope:cheese_artifact

	}

	option = {
		name = fp2_yearly.1008.b
	}

}

###################################
# Açò es or, xata!
# By Hugo Cortell
###################################
# (hurray for UTF8)
###################################

# No Valenica - fp2_yearly.2020 

# No Iberia - fp2_yearly.2025

# No Iberian Struggle for Rice Fields - fp2_yearly.3000

# Modified for Perassic Sea bordering religions (Calradian/Aserai)
fp2_yearly.3001 = {
	type = character_event
	title = fp2_flavor.3001.t
	desc = fp2_flavor.3001.desc

	theme = death
	left_portrait = {
		character = ROOT
		animation = worry
	}
	override_background = { reference = throne_room }

	trigger = {
		has_fp2_dlc_trigger = yes
		is_landed = yes
		is_available_even_at_war_adult = yes
		capital_province = {
			geographical_region = world_calradia_south
		}
		OR = {
			AND = {
				age >= 45
				has_trait = wounded_2
			}
			AND = {
				age >= 45
				has_trait = ill
			}
			has_trait = wounded_3
			has_trait = cancer
			age >= 75
		}
		NOT = { has_character_flag = had_event_fp2_flavor_3001 }
		OR = {
			religion = religion:calradian_religion
			religion = religion:aserai_religion
		}
	}

	immediate = {
		play_music_cue = "mx_cue_illness"
		add_character_flag = had_event_fp2_flavor_3001
		religion = {
			save_scope_as = fp2_flavor_3001_religion
		}
	}

	option = { #your own official language (Latin/Hebrew/Arabic)
		name = fp2_flavor.3001.a
		add_piety = minor_piety_gain
		add_prestige = minor_prestige_gain

		ai_chance = {
			base = 10
			modifier = {
				add = 10
				has_trait = zealous
			}
			ai_value_modifier = {
				ai_zeal = 1
			}
		}
	}

	option = { #Vulgar (Romance) language
		name = fp2_flavor.3001.b
		add_piety = medium_piety_loss
		every_vassal = {
			limit = {
				religion = root.religion
			}
			custom = custom.every_vassal
			add_opinion = {
				target = ROOT
				modifier = reputation_opinion
				opinion = 20
			}
		}

		ai_chance = {
			base = 5
			modifier = {
				add = 10
				OR = {
					has_trait = compassionate
					has_trait = humble
				}
			}
			ai_value_modifier = {
				ai_compassion = 1
			}
		}
	}

	option = { #your language + vulgar (Latin + Castillian / Hebrew + Sephardí / Arabic + Mozarabic )
		name = fp2_flavor.3001.c
		stress_impact = {
			base = minor_stress_loss
			zealous = medium_stress_gain
		}

		ai_chance = {
			base = 20
			modifier = {
				add = -10
				has_trait = zealous
			}
			ai_value_modifier = {
				ai_zeal = -1
			}
		}
	}

	option = { #all of them! (vulgar + Latin + Hebrew + Arabic)
		name = fp2_flavor.3001.d
		add_character_modifier = {
			modifier = fp2_epitaph_modifier
			years = 5
		}
		add_piety = minor_piety_loss
		stress_impact = {
			base = minor_stress_impact_gain
			zealous = minor_stress_impact_gain
		}

		ai_chance = {
			base = 5
			modifier = {
				add = -10
				has_trait = zealous
			}
			modifier = {
				add = 10
				has_trait = compassionate
			}
			ai_value_modifier = {
				ai_zeal = -1
				ai_compassion = 1
			}
		}
	}
}

##################################################
# And They Were Roommates
# (oh my god they were roommates)
# by Veronica Pazos
# (idea by Baudelaire Welch)
# 3002 - 3002
##################################################
fp2_yearly.3002 = {
	type = character_event
	title = fp2_flavor.3011.t
	desc = fp2_flavor.3011.desc

	theme = seduction
	left_portrait = {
		character = ROOT
		animation = ecstasy
	}
	right_portrait = {
		character = scope:fp2_flavor_3011_best_friend
		animation = flirtation
	}
	override_background = { reference = bedchamber }

	trigger = {
		has_fp2_dlc_trigger = yes
		is_playable_character = yes
		is_available_even_at_war_adult = yes
		any_relation = { #you have a best friend!
			type = best_friend
			is_available_healthy_ai_adult = yes
			can_set_relation_lover_trigger = { CHARACTER = ROOT } #you're attracted to each other's genre
			NOT = { has_trait = celibate }
			NOT = { is_consort_of = root }
			might_cheat_on_every_partner_trigger = yes
			trigger_if = {
				limit = { relation_with_character_is_incestuous_in_my_faith_trigger = { CHARACTER = root } }
				OR = {
					has_perk = subtle_desire_perk
					accepts_incest_with_trigger = { CHARACTER = root }
				}
			}
		}
	}

	weight_multiplier  = {
		modifier = {
			add = 0.5
			has_trait = lustful
		}
	}

	immediate = {
		random_relation = {
			type = best_friend
			limit = {
				is_available_healthy_ai_adult = yes
				can_set_relation_lover_trigger = { CHARACTER = ROOT }
				NOT = { has_trait = celibate }
				NOT = { is_consort_of = root }
				might_cheat_on_every_partner_trigger = yes
				trigger_if = {
					limit = { relation_with_character_is_incestuous_in_my_faith_trigger = { CHARACTER = root } }
					OR = {
						has_perk = subtle_desire_perk
						accepts_incest_with_trigger = { CHARACTER = root }
					}
				}
			}
			save_scope_as = fp2_flavor_3011_best_friend
		}
	}

	option = { #become their lover
		name = fp2_flavor.3011.a

		trigger = {
			NOT = { has_trait = celibate }
			OR = {
				has_perk = unshackled_lust_perk
				is_attracted_to_gender_of = root
			}
			trigger_if = {
				limit = { relation_with_character_is_incestuous_in_my_faith_trigger = { CHARACTER = scope:fp2_flavor_3011_best_friend } }
				OR = {
					has_perk = subtle_desire_perk
					accepts_incest_with_trigger = { CHARACTER = scope:fp2_flavor_3011_best_friend }
				}
			}
		}

		set_relation_lover = scope:fp2_flavor_3011_best_friend
		if = { #if you're in a homosexual relationship and your faith disapproves this stresses you
			limit = {
				OR = {
					AND = {
						is_female = yes
						scope:fp2_flavor_3011_best_friend = {
							is_female = yes
						}
						NOT = { faith = { has_doctrine = doctrine_homosexuality_accepted } }
					}
					AND = {
						is_male = yes
						scope:fp2_flavor_3011_best_friend = {
							is_male = yes
						}
						NOT = { faith = { has_doctrine = doctrine_homosexuality_accepted } }
					}
				}
			}
			stress_impact = {
				base = medium_stress_impact_gain
				zealous = medium_stress_impact_gain #some extra stress
			}
		}
		if = { #your spouse finds this weird
			limit = {
				exists = primary_spouse
			}
			primary_spouse = {
				add_opinion = {
					target = ROOT
					modifier = suspicion_opinion
					opinion = -25
				}
			}
		}

		ai_chance = {
			base = 10
			modifier = {
				add = 10
				has_trait = lustful
			}
			modifier = {
				add = -5
				has_trait = chaste
			}
			modifier = {
				add = -5
				exists = primary_spouse
			}
			ai_value_modifier = {
				ai_zeal = -1
			}
		}
	}

	option = { #allowe them to move in but stay as friends
		name = fp2_flavor.3011.b
		stress_impact = {
			base = medium_stress_loss
			lustful = medium_stress_impact_gain
		}
		if = {
			limit = {
				exists = primary_spouse
			}
			primary_spouse = {
				add_opinion = {
					target = ROOT
					modifier = suspicion_opinion
					opinion = -20
				}
			}
		}

		ai_chance = {
			base = 10
			modifier = {
				add = -5
				has_trait = lustful
			}
			modifier = {
				add = -2
				has_trait = chaste
			}
			modifier = {
				add = 5
				has_trait = compassionate
			}
			modifier = {
				add = -5
				exists = primary_spouse
			}
			ai_value_modifier = {
				ai_compassion = 0.25
			}
		}
	}

	option = { #nah im good
		name = {
			trigger = {
				exists = primary_spouse
			}
			text = fp2_flavor.3011.c_spouse
		}
		name = {
			trigger = {
				NOT = { exists = primary_spouse }
			}
			text = fp2_flavor.3011.c
		}
		stress_impact = {
			base = medium_stress_impact_gain #you get stressed at losing your bff
			lustful = minor_stress_impact_gain
			callous = minor_stress_loss
			chaste = minor_stress_loss
		}
		scope:fp2_flavor_3011_best_friend = {
			add_opinion = {
				target = ROOT
				modifier = rejected_opinion
			}
		}

		ai_chance = {
			base = 10
			modifier = {
				add = -5
				has_trait = lustful
			}
			modifier = {
				add = 10
				has_trait = chaste
			}
			modifier = {
				add = -5
				has_trait = compassionate
			}
			modifier = {
				add = 5
				exists = primary_spouse
			}
			ai_value_modifier = {
				ai_compassion = -0.5
			}
		}
	}
}

##################################################
# A Flavorful Evening
# by Veronica Pazos
# (idea by Ewan Cowhig Croft)
# 3003 - 3003
##################################################
fp2_yearly.3003 = {
	type = character_event
	title = fp2_flavor.3021.t
	desc = fp2_flavor.3021.desc

	theme = feast_activity
	left_portrait = {
		character = scope:fp2_flavor_3021_best_friend
		animation = ecstasy
	}
	right_portrait = {
		character = ROOT
		animation = stress
	}
	override_background = { reference = feast }

	trigger = {
		has_fp2_dlc_trigger = yes
		is_available_for_activity_trigger = yes
		any_relation = { #you have a best friend!
			type = best_friend
			is_available_healthy_ai_adult = yes
		}
	}

	weight_multiplier  = {
		modifier = {
			add = 0.5
			trigger_if = {
				limit = { exists = scope:fp2_flavor_3021_best_friend }
				scope:fp2_flavor_3021_best_friend = {
					OR = {
						has_trait = gregarious
						has_trait = gluttonous
					}
				}
			}
		}
	}

	immediate = {
		random_relation = {
			type = best_friend
			limit = {
				is_available_healthy_ai_adult = yes
			}
			save_scope_as = fp2_flavor_3021_best_friend
		}
	}

	option = { #pretend nothing's wrong
		name = fp2_flavor.3021.a
		stress_impact = {
			base = medium_stress_impact_gain
			compassionate = minor_stress_impact_gain
			honest = minor_stress_impact_gain
			eccentric = minor_stress_impact_gain
			deceitful = minor_stress_loss
		}

		ai_chance = {
			base = 10
			modifier = {
				add = 10
				has_trait = deceitful
			}
			modifier = {
				add = -10
				has_trait = honest
			}
			modifier = {
				add = -5
				has_trait = brave
			}
			ai_value_modifier = {
				ai_boldness = -1
				ai_rationality = -0.5
				ai_compassion = 0.5
			}
		}
	}

	option = { #try to gently tell them
		name = fp2_flavor.3021.b
		duel = {
			skill = diplomacy
			value = 5
			50 = {
				desc = fp2_flavor.3021.b.success_tt
				compare_modifier = {
					value = {
						value = scope:duel_value
						if = {
							limit = { has_trait = deceitful }
							add = 5
						}
						if = {
							limit = { intrigue >= medium_skill_rating }
							add = 5
						}
						if = {
							limit = { scope:fp2_flavor_3021_best_friend = { has_trait = forgiving } }
							add = 5
						}
						if = {
							limit = { scope:fp2_flavor_3021_best_friend = { has_trait = trusting } }
							add = 5
						}
						if = {
							limit = { scope:fp2_flavor_3021_best_friend = { opinion = { target = ROOT value >= high_positive_opinion } } }
							add = 5
						}
					}
				}
				send_interface_toast = {
					title = fp2_flavor.3021.b.success
					left_icon = ROOT
					stress_impact = {
						base = minor_stress_impact_gain
						compassionate = minor_stress_impact_gain
						honest = minor_stress_impact_gain
						deceitful = minor_stress_loss
					}
				}
			}
			50 = { #they don't
				send_interface_toast = {
					title = fp2_flavor.3021.b.fail
					left_icon = ROOT
					scope:fp2_flavor_3021_best_friend = {
						add_opinion = {
							target = ROOT
							modifier = insult_opinion
							opinion = -20
						}
					}
					stress_impact = {
						base = medium_stress_impact_gain
						compassionate = minor_stress_impact_gain
						honest = minor_stress_impact_gain
						deceitful = minor_stress_loss
					}
				}
			}
		}

		ai_chance = {
			base = 10
			modifier = {
				add = 10
				has_trait = compassionate
			}
			modifier = {
				add = -5
				has_trait = deceitful
			}
			ai_value_modifier = {
				ai_boldness = -1
				ai_rationality = 0.5
				ai_compassion = 1
			}
		}
	}

	option = { #directly tell them
		name = fp2_flavor.3021.c
		random_list = {
			25 = { #they take it well
				modifier = {
					add = 5
					has_trait = honest
				}
				modifier = {
					add = 5
					diplomacy >= medium_skill_rating
				}
				modifier = {
					add = 5
					scope:fp2_flavor_3021_best_friend = {
						has_trait = honest
					}
				}
			}
			75 = { #they dont (and they think you're being rude
				scope:fp2_flavor_3021_best_friend = {
					add_opinion = {
						target = ROOT
						modifier = insult_opinion
						opinion = -30
					}
				}
				stress_impact = {
					base = medium_stress_impact_gain
				}
			}
		}

		ai_chance = {
			base = 10
			modifier = {
				add = 10
				has_trait = brave
			}
			modifier = {
				add = -5
				has_trait = deceitful
			}
			ai_value_modifier = {
				ai_boldness = 1
				ai_rationality = 0.5
				ai_compassion = -1
			}
		}
	}

	option = { #ghost them
		name = fp2_flavor.3021.d
		scope:fp2_flavor_3021_best_friend = { #they REALLY dislike you
			add_opinion = {
				target = ROOT
				modifier = insult_opinion
				opinion = -50
			}
		}
		stress_impact = {
			base = minor_stress_loss
			brave = minor_stress_impact_gain
			honest = minor_stress_impact_gain
		}

		ai_chance = {
			base = 10
			modifier = {
				add = -10
				has_trait = brave
			}
			modifier = {
				add = -5
				has_trait = honest
			}
			ai_value_modifier = {
				ai_boldness = -1
				ai_rationality = -0.5
				ai_compassion = -1
			}
		}
	}
}

###################################
# You fancy a little siesta
# By Nick Meredith
###################################
#          Perassic Nap           #
###################################
fp2_yearly.4001 = {
	type = character_event
	title = fp2_yearly.4001.t
	desc = fp2_yearly.4001.desc
	theme = mental_health
	override_background = { reference = bedchamber }
	left_portrait = {
		character = root
		animation = boredom
	}

	trigger = {
		#DLC check
		has_fp2_dlc_trigger = yes

		#Standard check
		is_playable_character = yes
		is_available_at_peace_adult = yes

		#is Calradian or Nahasan
		OR = {
			culture = { has_cultural_pillar = heritage_calradian }
			culture = { has_cultural_pillar = heritage_nahasi }
		}
		#has more than 5 stress
		stress > 5

		#and capital is located in Perassic region
		capital_province = {
			geographical_region = region_perassic
		}
	}

	option = { #No, I have work to do!
		name = fp2_yearly.4001.a

		add_prestige = minor_prestige_gain

		stress_impact = {
			base = medium_stress_impact_gain
			lazy = medium_stress_impact_gain
			diligent = major_stress_impact_loss
		}

		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				has_trait = lazy
			}
		}
	}

	option = { #a little nap can't hurt anyone
		name = fp2_yearly.4001.b

		stress_impact = {
			base = minor_stress_impact_loss
			diligent = massive_stress_impact_gain
		}

		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				has_trait = diligent
			}
		}
	}
}

###################################
# County is increasingly religiously intertwined
# By Nick Meredith
###################################
#  Adjusted for Perassic Region   #
###################################
fp2_yearly.4002 = {
	type = character_event
	title = fp2_yearly.4002.t
	desc = fp2_yearly.4002.desc
	theme = faith
	left_portrait = {
		character = root
		animation = stress
	}
	right_portrait = {
		character = scope:realm_priest
		animation = worry
	}

	cooldown = { years = 30 }

	trigger = {

		#DLC check
		has_fp2_dlc_trigger = yes

		#Standard check
		is_available_at_peace_adult = yes

		#is Calradian or Nahasan
		OR = {
			culture = { has_cultural_pillar = heritage_calradian }
			culture = { has_cultural_pillar = heritage_nahasi }
		}
		#has a court chaplain
		exists = cp:councillor_court_chaplain

		#has a county that doesn't match your faith
		any_directly_owned_province = {
			NOT = {
				faith = root.faith
			}
		}

		#and capital is located on coast of Perassic
		capital_province = {
			geographical_region = region_perassic
		}
	}

	immediate = {
		random_directly_owned_province = {
			limit = {
				NOT = {
					faith = root.faith
				}
			}
			save_scope_as = interfaith_province
		}
		cp:councillor_court_chaplain = {
				save_scope_as = realm_priest
		}
	}

	option = { #I welcome a multifaith community.
		name = fp2_yearly.4002.a

		add_character_modifier = {
			modifier = fp2_multifaith_county_modifier
			years = 10
		}

		scope:realm_priest = {
			add_opinion = {
				target = liege
				modifier = annoyed_opinion
				opinion = -30
			}
		}

		stress_impact = {
			zealous = major_stress_gain
			cynical = minor_stress_loss
			arrogant = medium_stress_gain
			impatient = medium_stress_gain
			arbitrary = minor_stress_gain
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				OR = {
					has_trait = zealous
					has_trait = impatient
					has_trait = arrogant
				}
			}
		}
	}

	option = { #This must be stopped!
		name = fp2_yearly.4002.b

		add_piety = minor_piety_gain

		scope:interfaith_province.county = {
			change_county_control = medium_county_control_loss
			set_county_faith = root.faith
			add_county_modifier = {
				modifier = fp2_religious_strife_modifier
				years = 10
			}
		}

		scope:realm_priest = {
			add_opinion = {
				target = liege
				modifier = respect_opinion
				opinion = 40
			}
		}

		stress_impact = {
			zealous = medium_stress_loss
			cynical = medium_stress_gain
			forgiving = major_stress_gain
			just = medium_stress_gain
			stubborn = minor_stress_gain
			content = minor_stress_gain
			patient = minor_stress_gain
			trusting = minor_stress_gain
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				OR = {
					has_trait = cynical
					has_trait = forgiving
					has_trait = just
				}
			}
		}
	}
}

# Santiago does not exist - fp2_yearly.4003 #

# Mozarabs don't exist - fp2_yearly.4004, fp2_yearly.4005, fp2_yearly.4006

# Santiago still doesn't exist, and what the hell is this event - fp2_yearly.4007

###################################
# Folk stories around the fireside
# By Nick Meredith
########################################
# I like this one, so we're keeping it #
########################################
fp2_yearly.4008 = {
	type = character_event
	title = fp2_yearly.4008.t

	override_background = { reference = bp1_bonfire }

	desc = {
		desc = fp2_yearly.4008.desc.intro
			random_valid = {
				triggered_desc = {
					trigger = { culture = culture:aserai }
					desc = fp2_yearly.4008.desc.asera.a
				}
				triggered_desc = {
					trigger = { culture = culture:aserai }
					desc = fp2_yearly.4008.desc.asera.b
				}
				triggered_desc = {
					trigger = { 
						culture = {
							has_cultural_pillar = heritage_calradian
						} 
					}
					desc = fp2_yearly.4008.desc.calradian.a
				}
				triggered_desc = {
					trigger = { 
						culture = {
							has_cultural_pillar = heritage_calradian
						} 
					}
					desc = fp2_yearly.4008.desc.calradian.b
				}
			}
		desc = fp2_yearly.4008.desc.ending
	}

	theme = friendly

	left_portrait = {
		character = root
		animation = scheme
	}
	right_portrait = {
		character = scope:old_crone
		animation = throne_room_conversation_1
	}

	trigger = {

		#DLC check
		has_fp2_dlc_trigger = yes

		#Standard check
		is_landed_or_landless_administrative = yes
		is_available_at_peace_adult = yes

		#You are Calradian or Nahasan
		OR = {
			culture = { has_cultural_pillar = heritage_calradian }
			culture = { has_cultural_pillar = heritage_nahasi }
		}

		#and capital is located in Perassic Region
		capital_province = {
			geographical_region = region_perassic
		}
	}

	immediate = {
		if = {
			limit = {
				any_pool_character = {
					province = root.capital_province
					age = { 50 80 }
					culture = { has_cultural_pillar = heritage_nahasi }
					is_available_healthy_ai_adult = yes
				}
			}
			random_pool_character = {
				province = root.capital_province
				limit = {
					age = { 50 80 }
					culture = { has_cultural_pillar = heritage_nahasi }
					is_available_healthy_ai_adult = yes
				}
				save_scope_as = old_crone
			}
		}

		else = {
			create_character = {
				age = { 50 80 }
				location = root.capital_province
				gender = female

				trait = poet

				random_traits = yes

				culture = root.culture
				faith = root.faith

				dynasty = none

				save_scope_as = old_crone
			}
		}
	}

	option = { #What a fun old story!
		name = fp2_yearly.4008.a

		add_stress = minor_stress_loss

		ai_chance = {
			base = 100
		}
	}

	option = { #Gimme a lil prestige for not believe in ghosts
		name = fp2_yearly.4008.b

		add_prestige = minor_prestige_value

		stress_impact = {
			cynical = miniscule_stress_impact_loss
			arrogant = miniscule_stress_impact_loss
			stubborn = miniscule_stress_impact_loss
		}

		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				OR = {
					has_trait = cynical
					has_trait = arrogant
					has_trait = stubborn
				}
			}
		}
	}

	option = { #Invite her to your court
		name = fp2_yearly.4008.c

		trigger = { #Make sure they have Royal Court but no poet
			has_ep1_dlc_trigger = yes
			can_appoint_char_to_court_position = {
				CHAR = scope:old_crone
				COURT_POS = court_poet_court_position
			}
		}

		hidden_effect = {
			add_courtier = scope:old_crone
			scope:old_crone = {
				add_trait = whole_of_body
			}
		}

		court_position_grant_effect = {
	 		EMPLOYER = root
	 		CANDIDATE = scope:old_crone
	 		POS = court_poet
	 	}

		reverse_add_opinion = {
			modifier = grateful_opinion
			target = scope:old_crone
			opinion = 50
		}

		ai_chance = {
			base = 100
		}
	}
}

# No Basque - fp2_yearly.4009

# Vettones - fp2_yearly.4010

# No Islam/Aserai Have Vineyards - fp2_yearly.8000

# No Cortes - fp2_yearly.8001 / scripted_trigger people_loving_councillor_trigger


###################################
# Dietary Dilemma
# By Ola Jentzsch
###################################
#  Let's Cook Some Whale, Jesse!  #
###################################
fp2_yearly.8002 = {
	type = character_event
	title = fp2_yearly.8002.t
	desc = fp2_yearly.8002.desc
	theme = faith
	override_background = { reference = council_chamber }

	left_portrait = {
		character = root
		animation = boredom
	}
	right_portrait = {
		character = scope:preoccupied_ulama
		animation = worry
	}

	trigger = {
		has_fp2_dlc_trigger = yes
		any_realm_province = { is_coastal = yes	}

		OR = {
			has_religion = religion:aserai_religion
			has_religion = religion:calradian_religion
		}

		faith = {
			OR = {
				has_doctrine = tenet_religious_legal_pronouncements
				has_doctrine = tenet_literalism
				has_doctrine = tenet_adaptive
			}
		}

		any_held_title = { is_head_of_faith = no }

		exists = cp:councillor_court_chaplain
	}

	cooldown = { years = 50 }

	immediate = {

		cp:councillor_court_chaplain = { save_scope_as = preoccupied_ulama }

		random_realm_province = {
			limit = {
				is_coastal = yes
			}
			save_scope_as = beached_whale_province
		}
	}

	option = { #Make a ruling
		name = fp2_yearly.8002.a
		trigger = {
			OR = {
				# has_trait = sayyid - No sayyid or crusader kings in Calradia
				# has_trait = crusader_king
				has_trait = order_member
				piety_level >= 4
				learning >= very_high_skill_rating
			}
		}

		add_character_modifier = {
			modifier = lay_ruler_issued_fatwa_modifier
			years = 10
		}

		scope:preoccupied_ulama = {
			add_opinion = {
				target = root
				opinion = -10
				modifier = dismissed_me_opinion
			}
		}

		ai_chance = { #rational AIs pick this option
			base = 10
			ai_value_modifier = {
		   		ai_boldness = 0.5
		   		ai_rationality = 0.9
				ai_zeal = -0.7
			}
   		}

		stress_impact = {
			# Craven character's don't wanna take the risk, and humble and trusting doesn't want to undermine the ulama
			craven = minor_stress_impact_gain
			humble = minor_stress_impact_gain
			trusting = minor_stress_impact_gain
		}
	}

	option = { #Just go to town on it
		name = fp2_yearly.8002.b

		scope:preoccupied_ulama = {
			add_opinion = {
				target = root
				opinion = -10
				modifier = dismissed_me_opinion
			}
		}

		random_list = {
			60 = {
				modifier = {
					add = 30
					has_trait = whole_of_body
				}
				send_interface_toast = {
					left_icon = root
					title = healthy_whale_toast
					add_character_modifier = {
						modifier = mystery_meat_health_benefits_modifier
						years = 10
					}
				}
			}
			40 = {
				send_interface_toast = {
					left_icon = root
					title = unhealthy_whale_toast
					add_character_modifier = {
						modifier = mystery_meat_unhealth_benefits_modifier
						years = 10
					}
				}
			}
		}

		ai_chance = { #hungry AI pick this option
        	base = 10
        	ai_value_modifier = {
           		ai_boldness = 0.5
            	ai_energy = -0.8
        	}
   		}

		stress_impact = { #temperate or cautious characters don't wanna eat strange blobs washed up from the Atlantic 
			inappetetic = medium_stress_impact_gain 
			temperate = minor_stress_impact_gain
			paranoid = minor_stress_impact_gain 
				
			# but gluttons really wanna try it! 
			comfort_eater = medium_stress_impact_loss 
			gluttonous = medium_stress_impact_loss 
			lifestyle_reveler = minor_stress_impact_loss
		}
	}

	option = { #Be cautious and wait for official ruling
		name = fp2_yearly.8002.c

		scope:preoccupied_ulama = { 
			add_opinion = {
				target = root
				opinion = 20
				modifier = took_my_advice_opinion
			}
		}

		ai_chance = { #cautious but faithful AIs pick this option
        	base = 10
			ai_value_modifier = {
				ai_zeal = 0.7
				ai_boldness = -0.5
			}
   		}

		stress_impact = {
			# Ambitious or Impatient characters don't wanna wait for the ulama
			ambitious = minor_stress_impact_gain
			arbitrary = minor_stress_impact_gain
			arrogant = minor_stress_impact_gain
			impatient = medium_stress_impact_gain
		}
	}

	option = { #Burn the carcass, just to be safe
		name = fp2_yearly.8002.d

		add_dread = minor_dread_gain

		scope:preoccupied_ulama = {
			add_opinion = {
				target = root
				opinion = 10
				modifier = admires_resolve_opinion
			}
		}


		random = {
			chance = 10
			custom_tooltip = exploding_whale.tt
			send_interface_toast = {
				left_icon = root
				title = exploding_whale_toast
				root = {
   					increase_wounds_effect = { REASON = by_exploding_whale } #it can happen... :D
   				}
			}
		}

		ai_chance = { #overly zealous AIs pick this option
			base = 10
			ai_value_modifier = {
		   		ai_zeal = 1
				ai_energy = 0.5
			}
   		}

		stress_impact = {
			# Rational characters find this to be total overkill
			cynical = minor_stress_impact_gain

			#but zealous truly prefer to burn things
			zealous = medium_stress_impact_loss
		}
	}
}

###################################
# Flight of Fancy
# By Ola Jentzsch
###################################
# Inspired by an idea by Isabella welch
############################################################################
# Configured to fire at least a few years after BL start and WB startdates #
############################################################################
fp2_yearly.8003 = {
	type = character_event
	title = fp2_yearly.8003.t
	desc = fp2_yearly.8003.desc
	theme = family
	left_portrait = {
		character = scope:enthusiastic_child
		animation = admiration
	}
	right_portrait = {
		character = scope:flying_polymath
		animation = beg
	}

	cooldown = { years = 125 } # Should be replaced with a playthrough cooldown (but global vars are too heavy atm)

	trigger = {
		has_fp2_dlc_trigger = yes
		is_landed = yes
		is_ai = no
		any_child = {
			is_available_child = yes 
  			age >= 6
  			age <= 13
			NOT = { has_trait = blind }
		}
		has_trait = eccentric
		OR = {
			capital_province = { geographical_region = region_north_nahasa_coast }
			culture = { has_cultural_pillar = heritage_nahasi }
		}
	}

	weight_multiplier = {
		base = 0.4
		modifier = {
			OR = {
				AND = {
					current_year > 1095
					current_year < 1130
					NOT = { exists = global_var:ibnfirnas_created } # Aserai
				}
				AND = {
					current_year > 1300
					current_year < 1420
					NOT = { exists = global_var:averroes_created } # Sarranid
				}
			}
			add = 0.6
		}
	}

	immediate = {

		random_child = {
			limit = {
				is_available_child = yes
  				age >= 6
  				age <= 13
				NOT = {	has_trait = blind}		
			}
			save_scope_as = enthusiastic_child 
		}

		root.capital_province = { save_scope_as = flight_capital }

		if = {
			limit = { #their rough period of activity
				AND = {
					current_year > 1095
					current_year < 1130
				}
				NOT = { exists = global_var:ibnfirnas_created } #makes sure that he wasn't already spawned by the event elsewhere (mostly relevant in multiplayer, since this is a player-only event)
			}
			create_character = { 
				age = { 56 80 } #their rough age during the period of their flourishing 
				location = root.capital_province
				name = "Qasim" # Qasim, fake ass Aserai engineer
				gender = male
				template = scholar_character
				trait = intellect_good_1
				trait = poet
				trait = education_learning_4
				random_traits_list = { #his personality
					count = 3
					ambitious = {}
					brave = {}
					diligent = {}
					impatient = {}
				}
				culture = culture:aserai
				dynasty = none
				faith = faith:aserai_faith
				save_scope_as = flying_polymath
			}
			set_global_variable = ibnfirnas_created
		}

		else = { #or it defaults to a random one 
			create_character = {
				age = { 50 80 }
				location = root.capital_province
				template = scholar_character
				trait = intellect_good_2
				trait = education_learning_3
				trait = architect 
				random_traits_list = {
					count = 3
					brave = {}
					calm = {}
					diligent = {}
					cynical = {}
					humble = {}
					patient = {}
				}
				culture = root.capital_province.culture
				faith = root.faith
				save_scope_as = flying_polymath
			}
		}
		hidden_effect = {
			add_random_tiered_trait_xp_effect = {
				TRAIT = lifestyle_physician
				LEVEL_1 = no
				LEVEL_3 = yes
			}
		}
	}

	option = { #Very well, I shall allow it
		name = fp2_yearly.8003.a
		flavor = fp2_yearly.8003_child_reaction


   		scope:enthusiastic_child = {
   			add_opinion = {
				target = root
				opinion = 30
				modifier = pleased_opinion
			}
   		}

   		random_list = {
   			60 = {
   				send_interface_toast = {
					title = polymath_flight_attempt_toast.success
					left_icon = scope:enthusiastic_child
					right_icon = scope:flying_polymath
   					add_prestige = medium_prestige_gain
   					add_courtier = scope:flying_polymath
   					random = {
   						chance = 20
   						scope:enthusiastic_child = { add_trait_force_tooltip = brave }
   					}
   				}
   			}
   			40 = {
   				send_interface_toast = {
					title = polymath_flight_attempt_toast.failure
					left_icon = scope:enthusiastic_child
					right_icon = scope:flying_polymath
   					scope:flying_polymath = {
   						death = { death_reason = death_flight_attempt }
   					}
   					random_list = {
						50 = {
							scope:enthusiastic_child = { add_trait_force_tooltip = depressed_1 }
						}
						50 = {
							scope:enthusiastic_child = { add_trait_force_tooltip = sadistic}
						}
					}
				}
			}
   		}

   		stress_impact = { #Compassionate people worry about bystanders getting hurt
   			compassionate = minor_stress_impact_gain
   			craven = minor_stress_impact_gain
   		}
	}



	option = { #I too, want to fly!
		name = fp2_yearly.8003.b

   		duel = { #time to fly!
			skill = learning
			value = high_skill_rating

			15 = {
				compare_modifier = {
					value = scope:duel_value
					multiplier = 2
				}
				send_interface_toast = {
					title = flight_attempt_toast.success
					left_icon = root

					add_character_modifier = {
						modifier = saw_the_world_from_above_modifier
						years = 30
					}
					scope:enthusiastic_child = {
   						add_opinion = {
							target = root
							opinion = 30
							modifier = pleased_opinion
						}
   					}
   					random = {
   						chance = 50
   						root = { give_nickname = nick_the_flying }
   					}
				}
			}
			10 = {
				compare_modifier = {
					value = scope:duel_value
					multiplier = -1
				}
				send_interface_toast = {
					title = flight_attempt_toast.failure
					left_icon = root

					increase_wounds_effect = { REASON = flight_attempt }

					scope:enthusiastic_child = {
   						add_opinion = {
							target = root
							opinion = -20
							modifier = scared_opinion
						}
   					}
   					random = {
   						chance = 50
   						root = { give_nickname = nick_the_flightless }
   					}
				}
			}
		}

		stress_impact = { #cravens, contents and the bedridden don't wanna take the risk
   			craven = medium_stress_impact_gain
   			content = minor_stress_impact_gain
   			ill = minor_stress_impact_gain
   			infirm = medium_stress_impact_gain
   			brave = minor_stress_impact_loss
   		}
	}

	option = { #No, this is madness!
		name = fp2_yearly.8003.c

   		scope:enthusiastic_child = {
   			add_opinion = {
				target = root
				opinion = -20
				modifier = disappointed_opinion
			}
   		}

   		stress_impact = {
   			ambitious = minor_stress_impact_gain
   			brave = minor_stress_impact_gain
   			curious = minor_stress_impact_gain
   		}
	}
}

# No Italy and no Iberian Struggle - fp2_yearly.8004

###################################
# Under the Stone Pine
# by Ola Jentzsch
####################################
#  Configured for Calradian Kings  #
####################################
fp2_yearly.8005 = {
	type = character_event
	title = fp2_yearly.8005.t
	desc = {
		desc = fp2_yearly.8005.desc_opening
		first_valid = {
			triggered_desc = {
				trigger = {
					culture = { has_cultural_pillar = language_calradic }
				}
				desc = fp2_yearly.8005.desc_calradic
			}
			triggered_desc = {
				trigger = {
					culture = { has_cultural_pillar = language_nahasi }
				}
				desc = fp2_yearly.8005.desc_nahasi
			}
			desc = fp2_yearly.8005.desc_language_neutral
		}
		desc = fp2_yearly.8005.desc_middle_part
		first_valid = {
			triggered_desc = {
				trigger = { current_year >= 1030  }
				desc = fp2_yearly.8005.desc_post_troubadours
			}
			desc = fp2_yearly.8005.desc_pre_troubadours
		}
	}
	theme = love
	left_portrait = {
		character = root
		animation = sadness
	}

	cooldown = { years = 50 }

	trigger = {
		has_fp2_dlc_trigger = yes
		is_landed_or_landless_administrative = yes
		OR = {
			capital_province = { geographical_region = region_perassic }
			culture = { has_cultural_pillar = heritage_balian }
		}
	}

	immediate = {

		random_relation = {
			type = lover
			save_scope_as = courtly_lover
		}

		capital_county = { save_scope_as = tree_capital }
	}

	option = { #Embrace the love in your heart
	name = fp2_yearly.8005.a

		trigger = {
			num_of_relation_lover >= 1
			NOT = { has_trait = poet }
		}

   		add_trait = poet

   		scope:courtly_lover = {
   			add_opinion = {
   				target = root
   				opinion = 10
   				modifier = flattered_opinion
   			}
   		}

   		ai_chance = { #energetic, honorable and compassionate AI goes for this option
			base = 10
			ai_value_modifier = {
		   		ai_energy = 0.5
				ai_compassion = 0.6
				ai_honor = 0.5
				ai_rationality = -0.5
			}
   		}

   		stress_impact = {
   			chaste = major_stress_impact_gain
   			content = minor_stress_impact_gain
   			arrogant = major_stress_impact_gain
   			callous = major_stress_impact_gain
   		}
	}

	option = { #Feel something
	name = fp2_yearly.8005.b

		ai_chance = { #humble AI goes for this option
			base = 10
			ai_value_modifier = {
				ai_compassion = 0.5
				ai_rationality = 0.5
				ai_honor = 0.5
			}
   		}

   		stress_impact = {
   			greedy = minor_stress_impact_gain
   			impatient = minor_stress_impact_gain
   			paranoid = minor_stress_impact_gain
   		}

   		add_character_modifier = {
   			modifier = felt_something_modifier
   			years = 10
   		}
	}



	option = { #Sponsor more musicians
	name = fp2_yearly.8005.c

   		remove_short_term_gold = medium_gold_value

   		add_character_modifier = {
   			modifier = investing_in_music_modifier
   			years = 25
   		}

   		ai_chance = { #energetic, constructive AI goes for this option
			base = 10
			ai_value_modifier = {
		   		ai_energy = 0.5
				ai_compassion = 0.5
				ai_rationality = 0.5
				ai_greed = -1
			}
   		}

   		stress_impact = {
   			content = minor_stress_impact_gain
   			greedy = minor_stress_impact_gain
   			lazy = minor_stress_impact_gain
   		}
	}

	option = { #Chop down the damned tree
	name = fp2_yearly.8005.d

   		add_character_modifier = {
   			modifier = aversion_to_joy_modifier
   			years = 20
   		}

   		scope:tree_capital = {
   			add_county_modifier = {
   				modifier = great_pine_chopped_down_county_modifier
   				years = 10
   			}
   		}

   		ai_chance = { #vengeful and uncompassionate AI goes for this option
			base = 10
			ai_value_modifier = {
				ai_vengefulness = 0.7
				ai_zeal = 0.3
				ai_compassion = -1
				ai_rationality = -0.5
			}
   		}

   		stress_impact = {
   			base = minor_stress_impact_gain
   			calm = medium_stress_impact_gain
   			compassionate = medium_stress_impact_gain
   			cynical = minor_stress_impact_gain
   			humble = minor_stress_impact_gain
   			arrogant = medium_stress_impact_loss
   			callous = medium_stress_impact_loss
   			vengeful = medium_stress_impact_loss
   		}
	}
}

####################################
#        STURGIAN SETTLERS         #
#    Originally by Ola Jentzsch    #
####################################
scripted_trigger fp2_yearly.8006_province_trigger = {
	has_holding_type = city_holding
	barony = {
		is_under_holy_order_lease = no
		is_capital_barony = no
	}
}

scripted_trigger fp2_yearly.8006_ruler_trigger = {
	OR = {
		has_religion = religion:aserai_religion
		has_religion = religion:darshi_religion
	}
	is_ai = yes
}

fp2_yearly.8006 = {
	type = character_event
	title = fp2_yearly.8006.t
	desc = fp2_yearly.8006.desc
	theme = crown

	left_portrait = {
		character = root
		animation = personality_rational
	}

	right_portrait = {
		character = scope:saqaliba_leader
		animation = happiness
	}

	lower_left_portrait = {
		character = scope:former_master
	}

	trigger = {
		has_fp2_dlc_trigger = yes
		is_landed = yes
		any_neighboring_top_liege_realm_owner = { fp2_yearly.8006_ruler_trigger = yes }
		any_held_county = { any_county_province = {	fp2_yearly.8006_province_trigger = yes } }

		OR = { #implemented for FP3 to prevent triggering in Iran
			capital_province = { geographical_region = world_nahasa }
			culture = { has_cultural_pillar = heritage_nahasi }
		}
	}

	cooldown = { years = 50 }

	immediate = {

		random_neighboring_top_liege_realm_owner = {
			limit = { fp2_yearly.8006_ruler_trigger = yes }
			save_scope_as = former_master
		}

		random_held_county = {
			limit = {
				any_county_province = {	fp2_yearly.8006_province_trigger = yes }
			}
			save_scope_as = saqaliba_county #for use in the claim the former_master might get
		}

		scope:saqaliba_county = {
			random_county_province = {
				limit = { fp2_yearly.8006_province_trigger = yes }
				barony = { save_scope_as = saqaliba_barony }
			}
		}

		create_character = { #this is the saqaliba refugee's leader
			age = { 20 50 }
			location = root.capital_province
			gender_female_chance = 50
			random_traits_list = {
				count = 3
				ambitious = {}
				brave = {}
				stubborn = {}
				honest = {}
				cynical = {}
			}
			random_traits_list = { #something fun to give them character!
				count = 2
				beauty_good_3 = {}
				overseer = {}
				shrewd = {}
				scarred = {}
			}
			culture = culture:sturgian
			faith = scope:former_master.faith
			dynasty = none
			save_scope_as = saqaliba_leader

			after_creation = {
				if = {
 					limit = { is_female = no }
 					add_trait = beardless_eunuch
 				}
			}
		}

		hidden_effect = {
			scope:saqaliba_leader = {
				add_character_modifier = former_slave_npc_modifier
			}
		}
	}

	option = { #Give them what they want
		name = fp2_yearly.8006.a

   		scope:saqaliba_leader = {
			add_opinion = {
				target = root
				opinion = 20
				modifier = received_title_barony
			}
		}

		create_title_and_vassal_change = {
			type = granted
			save_scope_as = change
			add_claim_on_loss = yes
		}

		scope:saqaliba_barony = {
			change_title_holder = {
				holder = scope:saqaliba_leader
				change = scope:change
			}
		}

		resolve_title_and_vassal_change = scope:change


		scope:former_master = {
			if = {
				limit = { has_relation_rival = root	}
				custom_tooltip = {
					text = furious_rival_8006.desc
					hidden_effect = { add_unpressed_claim = scope:saqaliba_county }
				}
			}
			else = {
				progress_towards_rival_effect = {
					REASON = rival_saqalibas_refuge
					CHARACTER = root
					OPINION = 0
				}
			}
		}

		scope:saqaliba_county = {
			add_county_modifier = {
				modifier = saqaliba_settlers_county_modifier
				years = 30
			}
		}

		ai_chance = { #ambitious or compassionate AI goes for this option
			base = 10
			ai_value_modifier = {
				ai_boldness = 0.8
				ai_greed = 0.5
				ai_honor = 0.6
				ai_compassion = 0.6
			}
   		}

   		stress_impact = {
   			content = minor_stress_impact_gain
   			craven = minor_stress_impact_gain
   			paranoid = minor_stress_impact_gain
   			callous = minor_stress_impact_gain
   			sadistic = minor_stress_impact_gain
   		}
	}

	option = { #You can stay, but your friends must go elsewhere
		name = fp2_yearly.8006.b
		flavor = fp2_yearly.8006.flavor.b.tt


   		scope:former_master = {
   			add_opinion = {
   				target = root
   				opinion = -10
   				modifier = harbored_a_fugitive_opinion
   			}
   		}

   		add_courtier = scope:saqaliba_leader

   		ai_chance = { #cautious AI goes for this option
		 base = 10
			ai_value_modifier = {
		   		ai_boldness = -0.5
				ai_rationality = 0.5
				ai_compassion = -0.3
			}
   		}

   		stress_impact = {
   			ambitious = minor_stress_impact_gain
   			compassionate = minor_stress_impact_gain
   			generous = major_stress_impact_gain
   		}
   	}


	option = { #Send them back to their former master
		name = fp2_yearly.8006.c
		flavor = fp2_yearly.8006.flavor.c.tt


		if = {
  			limit = {
  				OR = {
  					has_any_good_relationship_with_character_trigger = { CHARACTER = scope:former_master }
   				}
   			}
			add_character_modifier = {
				modifier = obligations_fulfilled_modifier
				years = 10
			}
		}
		else = {
			add_hook = {
				type = favor_hook
				target = scope:former_master
			}
		}

		#Flag that scope:saqaliba_leader should leave.
		save_scope_as = disappear_saqaliba

		ai_chance = { #cruel AI go for this option
			base = 10
			ai_value_modifier = {
				ai_compassion = -1
				ai_rationality = 0.5
				ai_greed = 0.5
				ai_vengefulness = 0.5
			}
   		}

   		stress_impact = {
   			ambitious = minor_stress_impact_gain
   			compassionate = massive_stress_impact_gain
   			generous = massive_stress_impact_gain
   		}
   	}

   	after = {
   		if = {
   			limit = { exists = scope:disappear_saqaliba }
   			scope:saqaliba_leader = { silent_disappearance_effect = yes }
   		}
 	}
}

# No Grantable Land - fp2_yearly.9000

# No Judaism in Calradia - fp2_yearly.9001


# No Jewish people in Calradia - fp2_yearly.9002


###################################
# Toledan Nights
# By James Beaumont
####################################
# Who doesn't like a bit of drama? #
####################################
fp2_yearly.9005 = {
	type = character_event
	title = fp2_james.0004.t
	desc = fp2_james.0004.desc
	theme = secret
	left_portrait = {
		character = root
		animation = paranoia
	}
	right_portrait = {
		character = scope:fp2_james_0004_murder_baron
		animation = scheme
	}

	trigger = {
		any_sub_realm_county = { # Are any of my realm's counties a hostile faith that is not governed by someone with protected religious rights?
			is_unprotected_hostile_faith = yes
		}
		OR = { # You have to be a bit of a monster to even consider this
			has_trait = zealous
			has_trait = sadistic
			has_trait = callous
			dread >= medium_dread
		}
	}

	immediate = {
		create_character = {
			template = toledan_night_character
			location = root.capital_province
			save_scope_as = fp2_james_0004_murder_baron
		}
		random_sub_realm_county = {
			limit = {
				is_unprotected_hostile_faith = yes
			}
			save_scope_as = fp2_james_0004_place_of_murder
			# If the holder is of that same hostile faith, murder them!
			if = {
				limit = {
					faith = holder.faith
					holder = {
						is_ai = yes
					}
				}
				holder = { save_scope_as = fp2_james_0004_murder_victim }
			}
		}
	}

	option = { # Go ahead and have some people murdered
		name = fp2_james.0004.a
		create_title_and_vassal_change = {
			type = granted
			save_scope_as = change
			add_claim_on_loss = no
		}
		scope:fp2_james_0004_place_of_murder = {
			change_title_holder = {
				holder = scope:fp2_james_0004_murder_baron
				change = scope:change
			}
		}
		resolve_title_and_vassal_change = scope:change
		hidden_effect = {
			add_opinion = {
				target = scope:fp2_james_0004_murder_baron
				modifier = received_title_county
			}
		}
		scope:fp2_james_0004_place_of_murder = {
			change_county_control = major_county_control_gain
			set_county_faith = root.faith # TODO, the modifier should really increase conversion speed
			add_county_modifier = {
				modifier = fp2_toledo_nights_modifier
				years = 10
			}
		}
		every_sub_realm_county = {
			limit = {
				faith = scope:fp2_james_0004_place_of_murder.faith
			}
			add_county_modifier = fp2_toledo_nights_fallout_modifier
		}
		add_hook = {
			type = favor_hook
			target = scope:fp2_james_0004_murder_baron
		}

		stress_impact = {
			just = massive_stress_impact_gain
			compassionate = major_stress_impact_gain
			forgiving = major_stress_impact_gain
			sadistic = minor_stress_impact_loss
			callous = minor_stress_impact_loss
			paranoid = minor_stress_impact_loss
			zealous = minor_stress_impact_loss
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				NOR = {
					has_trait = zealous
					has_trait = sadistic
					has_trait = callous
				}
			}
		}
	}

	option = {
		name = fp2_james.0004.b
		scope:fp2_james_0004_murder_baron = { silent_disappearance_effect = yes }
		ai_chance = {
			base = 10
			modifier = {
				factor = 0.5
				OR = {
					has_trait = zealous
					has_trait = sadistic
					has_trait = callous
				}
			}
		}
	}
}

# Mecca does not exist - fp2_yearly.9006